[["Statement","package"],["Type"," Data::Printer::Filter::DB"],["",";\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n"],["Statement","use "],["","Data::Printer::Filter;\n"],["Statement","use "],["","Term::ANSIColor;\n\nfilter "],["String","'DBI::db'"],["",", "],["Keyword","sub "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$dbh"],["",", "],["Identifier","$p"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$name"],[""," = "],["Identifier","$dbh->{"],["String","Driver"],["Identifier","}{"],["String","Name"],["Identifier","}"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$string"],[""," = "],["String","\""],["Identifier","$name"],["String"," Database Handle (\""],["","\n               . ("],["Identifier","$dbh->{"],["String","Active"],["Identifier","}"],[""," \n                  ? colored("],["String","'connected'"],["",", "],["String","'bright_green'"],["",")\n                  : colored("],["String","'disconnected'"],["",", "],["String","'bright_red'"],["","))\n               . "],["String","') {'"],["","\n               ;\n    indent;\n    "],["Statement","my"],[""," "],["Identifier","%dsn"],[""," = "],["Statement","split"],["","( "],["Statement","/"],["Special","[;=]"],["Statement","/"],["",", "],["Identifier","$dbh->{"],["String","Name"],["Identifier","}"],[""," );\n    "],["Repeat","foreach"],[""," "],["Statement","my"],[""," "],["Identifier","$k"],[""," ("],["Statement","keys"],[""," "],["Identifier","%dsn"],["",") {\n        "],["Identifier","$string"],[""," .= newline . "],["String","\""],["Identifier","$k"],["String",": \""],[""," . "],["Identifier","$dsn{$k}"],["",";\n    }\n    "],["Identifier","$string"],[""," .= newline . "],["String","'Auto Commit: '"],[""," . "],["Identifier","$dbh->{"],["String","AutoCommit"],["Identifier","}"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$kids"],[""," = "],["Identifier","$dbh->{"],["String","Kids"],["Identifier","}"],["",";\n    "],["Identifier","$string"],[""," .= newline . "],["String","'Statement Handles: '"],[""," . "],["Identifier","$kids"],["",";\n    "],["Conditional","if"],[""," ("],["Identifier","$kids"],[""," > "],["Number","0"],["",") {\n        "],["Identifier","$string"],[""," .= "],["String","' ('"],[""," . "],["Identifier","$dbh->{"],["String","ActiveKids"],["Identifier","}"],[""," . "],["String","' active)'"],["",";\n    }\n\n    "],["Conditional","if"],[""," ( "],["Operator","defined"],[""," "],["Identifier","$dbh"],["","->err ) {\n        "],["Identifier","$string"],[""," .= newline . "],["String","'Error: '"],[""," . "],["Identifier","$dbh"],["","->errstr;\n    }\n    "],["Identifier","$string"],[""," .= newline . "],["String","'Last Statement: '"],["","\n            . colored( ("],["Identifier","$dbh->{"],["String","Statement"],["Identifier","}"],[""," || "],["String","'-'"],["","), "],["String","'bright_yellow'"],["",");\n\n    outdent;\n    "],["Identifier","$string"],[""," .= newline . "],["String","'}'"],["",";\n    "],["Statement","return"],[""," "],["Identifier","$string"],["",";\n};\n\nfilter "],["String","'DBI::st'"],["",", "],["Keyword","sub "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$sth"],["",", "],["Identifier","$properties"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$str"],[""," = colored( ("],["Identifier","$sth->{"],["String","Statement"],["Identifier","}"],[""," || "],["String","'-'"],["","), "],["String","'bright_yellow'"],["",");\n\n    "],["Conditional","if"],[""," ("],["Identifier","$sth->{"],["String","NUM_OF_PARAMS"],["Identifier","}"],[""," > "],["Number","0"],["",") {\n        "],["Statement","my"],[""," "],["Identifier","$values"],[""," = "],["Identifier","$sth->{"],["String","ParamValues"],["Identifier","}"],["",";\n        "],["Conditional","if"],[""," ("],["Identifier","$values"],["",") {\n            "],["Identifier","$str"],[""," .= "],["String","'  ('"],[""," \n                 . "],["Statement","join"],["","("],["String","', '"],["",",\n                      "],["Statement","map"],[""," "],["Statement","{"],["","\n                         "],["Statement","my"],[""," "],["Identifier","$v"],[""," = "],["Identifier","$values->{$_}"],["",";\n                         "],["Identifier","$v"],[""," || "],["String","'undef'"],["",";\n                      "],["Statement","}"],[""," "],["Number","1"],[""," .. "],["Identifier","$sth->{"],["String","NUM_OF_PARAMS"],["Identifier","}"],["","\n                   )\n                 . "],["String","')'"],["",";\n        }\n        "],["Conditional","else"],[""," {\n            "],["Identifier","$str"],[""," .= colored("],["String","'  (bindings unavailable)'"],["",", "],["String","'yellow'"],["",");\n        }\n    }\n    "],["Statement","return"],[""," "],["Identifier","$str"],["",";\n};\n\n"],["Comment","# DBIx::Class filters"],["","\nfilter "],["String","'-class'"],[""," => "],["Keyword","sub "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$obj"],["",", "],["Identifier","$properties"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Conditional","if"],[""," ( "],["Identifier","$obj"],["","->isa("],["String","'DBIx::Class::Schema'"],["",") ) {\n        "],["Statement","return"],[""," "],["Operator","ref"],["","("],["Identifier","$obj"],["",") . "],["String","' DBIC Schema with '"],[""," . p( "],["Identifier","$obj"],["","->storage->dbh );\n    }\n    "],["Conditional","elsif"],[""," ( "],["Statement","grep"],[""," "],["Statement","{"],[""," "],["Identifier","$obj"],["","->isa("],["Identifier","$_"],["",") "],["Statement","}"],[""," "],["String","qw(DBIx::Class::ResultSet DBIx::Class::ResultSetColumn)"],[""," ) {\n\n        "],["Statement","my"],[""," "],["Identifier","$str"],[""," = colored( "],["Operator","ref"],["","("],["Identifier","$obj"],["","), "],["Identifier","$properties->{"],["String","color"],["Identifier","}{"],["String","class"],["Identifier","}"],[""," );\n        "],["Identifier","$str"],[""," .= "],["String","' ('"],[""," . "],["Identifier","$obj"],["","->result_class . "],["String","')'"],["","\n          "],["Conditional","if"],[""," "],["Identifier","$obj"],["","->can( "],["String","'result_class'"],[""," );\n\n        "],["Conditional","if"],[""," ("],["Statement","my"],[""," "],["Identifier","$query_data"],[""," = "],["Identifier","$obj"],["","->as_query) {\n          "],["Statement","my"],[""," "],["Identifier","@query_data"],[""," = "],["Identifier","@$$query_data"],["",";\n          indent;\n          "],["Statement","my"],[""," "],["Identifier","$sql"],[""," = "],["Statement","shift"],[""," "],["Identifier","@query_data"],["",";\n          "],["Identifier","$str"],[""," .= "],["String","' {'"],["","\n               . newline . colored("],["Identifier","$sql"],["",", "],["String","'bright_yellow'"],["",")\n               . newline . "],["Statement","join"],[""," ( newline, "],["Statement","map"],[""," "],["Statement","{"],["","\n                      "],["Identifier","$_->["],["Number","1"],["Identifier","]"],[""," . "],["String","' ('"],[""," . "],["Identifier","$_->["],["Number","0"],["Identifier","]{"],["String","sqlt_datatype"],["Identifier","}"],[""," . "],["String","')'"],["","\n                    "],["Statement","}"],[""," "],["Identifier","@query_data"],["","\n               )\n               ;\n          outdent;\n          "],["Identifier","$str"],[""," .= newline . "],["String","'}'"],["",";\n        }\n\n        "],["Statement","return"],[""," "],["Identifier","$str"],["",";\n    }\n    "],["Conditional","else"],[""," {\n        "],["Statement","return"],["",";\n    }\n};\n\n\n"],["Number","1"],["",";\n"],["Comment","__END__"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nData::Printer::Filter::DB - pretty printing database objects\n\n\n"],["Statement","=head1"],[""," "],["String","SYNOPSIS"],["","\n\nIn your program:\n\n"],["PreProc","  use Data::Printer filters => {"],["","\n"],["PreProc","      -external => [ 'DB' ],"],["","\n"],["PreProc","  };"],["","\n\nor, in your "],["Identifier","C<.dataprinter>"],[""," file:\n\n"],["PreProc","  {"],["","\n"],["PreProc","    filters => {"],["","\n"],["PreProc","      -external => [ 'DB' ],"],["","\n"],["PreProc","    },"],["","\n"],["PreProc","  };"],["","\n\n\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nThis is a filter plugin for "],["Identifier","L<Data::Printer>"],["",". It filters through\n"],["Identifier","L<DBI>"],["","'s handlers (dbh) and statement (sth) objects displaying relevant\ninformation for the user.\n\n"],["Identifier","L<DBI>"],[""," is an extremely powerful and complete database interface. But\nit does a lot of magic under the hood, making their objects somewhat harder\nto debug. This filter aims to fix that :)\n\nFor instance, say you want to debug something like this:\n\n"],["PreProc","  use DBI;"],["","\n"],["PreProc","  my $dbh = DBI->connect('dbi:DBM(RaiseError=1):', undef, undef );"],["","\n\nA regular Data::Dumper output gives you absolutely nothing:\n\n"],["Identifier","$VAR1"],[""," = "],["Identifier","bless( {}, 'DBI::db' )"],["",";\n\n"],["Identifier","L<Data::Printer>"],[""," makes it better, but only to debug the class itself,\nnot helpful at all to see its contents and debug your own code:\n\n"],["PreProc","    DBI::db  {"],["","\n"],["PreProc","        Parents       DBI::common"],["","\n"],["PreProc","        Linear @ISA   DBI::db, DBI::common"],["","\n"],["PreProc","        public methods (48) : begin_work, clone, column_info, commit, connected, data_sources, disconnect, do, foreign_key_info, get_info, last_insert_id, ping, prepare, prepare_cached, preparse, primary_key, primary_key_info, quote, quote_identifier, rollback, rows, selectall_arrayref, selectall_hashref, selectcol_arrayref, selectrow_array, selectrow_arrayref, selectrow_hashref, sqlite_backup_from_file, sqlite_backup_to_file, sqlite_busy_timeout, sqlite_collation_needed, sqlite_commit_hook, sqlite_create_aggregate, sqlite_create_collation, sqlite_create_function, sqlite_enable_load_extension, sqlite_last_insert_rowid, sqlite_progress_handler, sqlite_register_fts3_perl_tokenizer, sqlite_rollback_hook, sqlite_set_authorizer, sqlite_update_hook, statistics_info, table_info, tables, take_imp_data, type_info, type_info_all"],["","\n"],["PreProc","        private methods (0)"],["","\n"],["PreProc","        internals: {"],["","\n"],["PreProc","        }"],["","\n"],["PreProc","    }"],["","\n\nFear no more! If you use this filter, here's what you'll see:\n\n"],["PreProc","    SQLite Database Handle (connected) {"],["","\n"],["PreProc","        dbname: file.db"],["","\n"],["PreProc","        Auto Commit: 1"],["","\n"],["PreProc","        Statement Handles: 0"],["","\n"],["PreProc","        Last Statement: -"],["","\n"],["PreProc","    }"],["","\n\nMuch better, huh? :)\n\nStatement handlers are even better. Imagine you continued your code with something like:\n\n"],["PreProc","  my $sth = $dbh->prepare('SELECT * FROM foo WHERE bar = ?');"],["","\n"],["PreProc","  $sth->execute(42);"],["","\n\nWith this filter, instead of an empty dump or full method information, you'll get\nexactly what you came for:\n\n"],["PreProc"," SELECT * FROM foo WHERE bar = ?  (42)"],["","\n\nNote that if your driver does not support holding of parameter values, you'll get a\n"],["Identifier","C<bindings unavailable>"],[""," message instead of the bound values.\n\n\n"],["Statement","=head1"],[""," "],["String","SEE ALSO"],["","\n\n"],["Identifier","L<Data::Printer>"],["","\n\n\n"]]