[["Statement","package"],["Type"," Data::Printer::Filter::Digest"],["",";\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n"],["Statement","use "],["","Data::Printer::Filter;\n"],["Statement","use "],["","Term::ANSIColor;\n\n"],["Repeat","foreach"],[""," "],["Statement","my"],[""," "],["Identifier","$digest"],[""," ( "],["String","qw( Digest::MD2 Digest::MD4 Digest::Haval256)"],["",") {\n    filter "],["Identifier","$digest"],[""," => \\"],["Identifier","&_print_digest"],["",";\n}\n\nfilter "],["String","'-class'"],["",", "],["Keyword","sub "],["","{\n  "],["Statement","my"],[""," ("],["Identifier","$obj"],["",", "],["Identifier","$p"],["",") = "],["Identifier","@_"],["",";\n  "],["Statement","return"],[""," "],["Conditional","unless"],[""," "],["Identifier","$obj"],["","->isa( "],["String","'Digest::base'"],[""," );\n  "],["Statement","return"],[""," _print_digest( "],["Identifier","$obj"],["",", "],["Identifier","$p"],[""," );\n};\n\n\n"],["Keyword","sub "],["Function","_print_digest "],["","{\n  "],["Statement","my"],[""," ("],["Identifier","$obj"],["",", "],["Identifier","$p"],["",") = "],["Identifier","@_"],["",";\n  "],["Statement","my"],[""," "],["Identifier","$digest"],[""," = "],["Identifier","$obj"],["","->clone->hexdigest;\n  "],["Statement","my"],[""," "],["Identifier","$str"],[""," = "],["Identifier","$digest"],["",";\n  "],["Statement","my"],[""," "],["Identifier","$ref"],[""," = "],["Operator","ref"],[""," "],["Identifier","$obj"],["",";\n\n  "],["Conditional","if"],[""," ( "],["Identifier","$p->{"],["String","digest"],["Identifier","}{"],["String","show_class_name"],["Identifier","}"],[""," ) {\n      "],["Identifier","$str"],[""," .= "],["String","\" ("],["Identifier","$ref"],["String",")\""],["",";\n  }\n\n  "],["Conditional","unless"],[""," ( "],["Statement","exists"],["","  "],["Identifier","$p->{"],["String","digest"],["Identifier","}{"],["String","show_reset"],["Identifier","}"],["","\n              "],["Operator","and"],[""," !"],["Identifier","$p->{"],["String","digest"],["Identifier","}{"],["String","show_reset"],["Identifier","}"],["","\n   ) {\n     "],["Conditional","if"],[""," ("],["Identifier","$digest"],[""," "],["Operator","eq"],[""," "],["Identifier","$ref"],["","->new->hexdigest) {\n         "],["Identifier","$str"],[""," .= "],["String","' [reset]'"],["",";\n     }\n  }\n\n  "],["Statement","my"],[""," "],["Identifier","$color"],[""," = "],["Identifier","$p->{"],["String","color"],["Identifier","}{"],["String","digest"],["Identifier","}"],["",";\n  "],["Identifier","$color"],[""," = "],["String","'bright_green'"],[""," "],["Conditional","unless"],[""," "],["Operator","defined"],[""," "],["Identifier","$color"],["",";\n\n  "],["Statement","return"],[""," colored( "],["Identifier","$str"],["",", "],["Identifier","$color"],[""," );\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nData::Printer::Filter::Digest - pretty-printing MD5, SHA and friends\n\n"],["Statement","=head1"],[""," "],["String","SYNOPSIS"],["","\n\nIn your program:\n\n"],["PreProc","  use Data::Printer filters => {"],["","\n"],["PreProc","    -external => [ 'Digest' ],"],["","\n"],["PreProc","  };"],["","\n\nor, in your "],["Identifier","C<.dataprinter>"],[""," file:\n\n"],["PreProc","  {"],["","\n"],["PreProc","    filters => {"],["","\n"],["PreProc","       -external => [ 'Digest' ],"],["","\n"],["PreProc","    },"],["","\n"],["PreProc","  };"],["","\n\nYou can also setup color and display details:\n\n"],["PreProc","  use Data::Printer"],["","\n"],["PreProc","      filters => {"],["","\n"],["PreProc","          -external => [ 'Digest' ],"],["","\n"],["PreProc","      },"],["","\n"],["PreProc","      color   => {"],["","\n"],["PreProc","          digest => 'bright_green',"],["","\n"],["PreProc","      }"],["","\n"],["PreProc","      digest => {"],["","\n"],["PreProc","          show_class_name => 0,  # default."],["","\n"],["PreProc","          show_reset      => 1,  # default."],["","\n"],["PreProc","      },"],["","\n"],["PreProc","  };"],["","\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nThis is a filter plugin for "],["Identifier","L<Data::Printer>"],["",". It filters through\nseveral digest classes and displays their current value in\nhexadecimal format as a string.\n\n"],["Statement","=head2"],[""," "],["String","Parsed Modules"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["String","* "],["Identifier","L<Digest::Adler32>"],["","\n\n"],["Statement","=item"],[""," "],["String","* "],["Identifier","L<Digest::MD2>"],["","\n\n"],["Statement","=item"],[""," "],["String","* "],["Identifier","L<Digest::MD4>"],["","\n\n"],["Statement","=item"],[""," "],["String","* "],["Identifier","L<Digest::MD5>"],["","\n\n"],["Statement","=item"],[""," "],["String","* "],["Identifier","L<Digest::SHA>"],["","\n\n"],["Statement","=item"],[""," "],["String","* "],["Identifier","L<Digest::SHA1>"],["","\n\n"],["Statement","=item"],[""," "],["String","* "],["Identifier","L<Digest::Whirlpool>"],["","\n\n"],["Statement","=item"],[""," "],["String","* "],["Identifier","L<Digest::Haval256>"],["","\n\n"],["Statement","=back"],["","\n\nIf you have any suggestions for more modules or better output,\nplease let us know.\n\n"],["Statement","=head2"],[""," "],["String","Extra Options"],["","\n\nAside from the display color, there are a few other options to\nbe customized via the "],["Identifier","C<digest>"],[""," option key:\n\n"],["Statement","=head3"],[""," "],["String","show_class_name"],["","\n\nSet this to true to display the class name right next to the\nhexadecimal digest. Default is 0 (false).\n\n"],["Statement","=head3"],[""," "],["String","show_reset"],["","\n\nIf set to true (the default), the filter will add a "],["Identifier","C<[reset]>"],["","\ntag after dumping an empty digest object. See the rationale below.\n\n"],["Statement","=head2"],[""," "],["String","Note on dumping Digest::* objects"],["","\n\nThe digest operation is effectively a destructive, read-once operation. Once it has been performed, most Digest::* objects are automatically reset and can be used to calculate another digest value.\n\nThis behaviour - or, rather, forgetting about this behaviour - is\na common source of issues when working with Digests.\n\nThis Data::Printer filter will "],["Identifier","B<not>"],[""," destroy your object. Instead, we work on a cloned version to display the hexdigest, leaving your\noriginal object untouched.\n\nAs another debugging convenience for developers, since the empty\nobject will produce a digest even after being used, this filter\nadds by default a "],["Identifier","C<[reset]>"],[""," tag to indicate that the object is\nempty, in a 'reset' state - i.e. its hexdigest is the same as\nthe hexdigest of a new, empty object of that same class.\n\n"],["Statement","=head1"],[""," "],["String","SEE ALSO"],["","\n\n"],["Identifier","L<Data::Printer>"],["","\n\n\n"]]