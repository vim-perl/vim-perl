[["Statement","package"],["Type"," Regexp::Debugger"],["",";\n\n"],["Statement","use warnings"],["",";\n"],["Statement","use strict"],["",";\n"],["Statement","eval"],[""," "],["String","\"use feature 'evalbytes'\""],["",";         "],["Comment","# Experimental fix for Perl 5.16"],["","\n\n"],["Statement","our"],[""," "],["Identifier","$VERSION"],[""," = "],["String","'0.001016'"],["",";\n\n"],["Comment","# Handle Perl 5.18's new-found caution..."],["","\n"],["Statement","no if"],[""," "],["Identifier","$]"],[""," >= "],["Float","5.018"],["",", "],["String","warnings"],[""," => "],["String","\"experimental::smartmatch\""],["",";\n\n"],["Comment","# Give an accurate warning if used with an antique Perl..."],["","\n"],["PreProc","BEGIN "],["","{\n    "],["Conditional","if"],[""," ("],["Identifier","$]"],[""," < "],["Float","5.010001"],["",") {\n        "],["Statement","die"],[""," "],["Statement","sprintf"],[""," "],["String","\"Regexp::Debugger requires Perl v5.10.1 or later (at %s line %s)"],["Special","\\n"],["String","\""],["",",\n                     ("],["Statement","caller"],[""," "],["Number","2"],["",")["],["Float","1..2"],["","];\n    }\n}\n\n"],["Statement","use "],["Float","5.010001"],["","; "],["Comment","# ...activate all the tasty 5.10 goodies"],["","\n\n"],["Statement","use "],["","List::Util "],["String","qw< min max first sum >"],["",";\n\n"],["Comment","# Track configurable options lexically..."],["","\n"],["Statement","my"],[""," "],["Identifier","@config"],["",";\n\n"],["Comment","# Track debugging history in various formats..."],["","\n"],["Statement","my"],[""," "],["Identifier","%history_of"],["",";\n\n"],["Comment","# Persistent information within debugger..."],["","\n"],["Statement","my"],[""," "],["Identifier","$prev_regex_pos"],["",";   "],["Comment","# ...track where we were previously in the regex"],["","\n"],["Statement","my"],[""," "],["Identifier","$prev_str_pos"],["",";     "],["Comment","# ...track where we were previously in the string"],["","\n"],["Statement","my"],[""," "],["Identifier","%capture"],["",";          "],["Comment","# ...track capture groups within regex"],["","\n"],["Statement","my"],[""," "],["Identifier","$pre_is_pending"],["",";   "],["Comment","# ...did we try something last event?"],["","\n"],["Statement","my"],[""," "],["Identifier","$interaction_quit"],["","; "],["Comment","# ...did we get a quit request?"],["","\n"],["Statement","my"],[""," "],["Identifier","$interaction_mode"],["","; "],["Comment","# ...step-by-step, jump to match, or continue?"],["","\n"],["Statement","my"],[""," "],["Identifier","$display_mode"],["",";     "],["Comment","# ...how is the match being visualized at present?"],["","\n\n\n"],["Comment","# Colours for heatmaps..."],["","\n"],["Statement","my"],[""," "],["Identifier","@DEF_HEAT_COLOUR"],[""," = (\n    "],["String","'white  on_black'"],["",",    "],["Comment","#  0-20  percentile"],["","\n    "],["String","'cyan   on_blue'"],["",",     "],["Comment","# 20-40  percentile"],["","\n    "],["String","'blue   on_cyan'"],["",",     "],["Comment","# 40-60  percentile"],["","\n    "],["String","'red    on_yellow'"],["",",   "],["Comment","# 60-80  percentile"],["","\n    "],["String","'yellow on_red'"],["",",      "],["Comment","# 80-100 percentile"],["","\n);\n\n"],["Comment","# Colours for detailed regex descriptions..."],["","\n"],["Statement","my"],[""," "],["Identifier","%DESCRIPTION_COLOUR"],[""," = (\n    "],["String","desc_sep_col"],["","   => "],["String","'blue on_black underline'"],["",",\n    "],["String","desc_regex_col"],[""," => "],["String","'white on_black'"],["",",\n    "],["String","desc_text_col"],["","  => "],["String","'cyan on_black'"],["",",\n);\n\n"],["Comment","# Colour for error messages..."],["","\n"],["Statement","my"],[""," "],["Identifier","$ERR_COL"],[""," = "],["String","'red'"],["",";\n\n\n"],["Comment","# Default config which any explicit config modifies..."],["","\n"],["Statement","my"],[""," "],["Identifier","@SHOW_WS_OPTIONS"],[""," = "],["String","qw< compact  visible  original >"],["",";\n"],["Statement","my"],[""," "],["Identifier","%DEFAULT_CONFIG"],[""," = (\n    "],["Comment","# How debugging info is displayed initially..."],["","\n    "],["String","display_mode"],["","  => "],["String","'visual'"],["",",\n\n    "],["Comment","# Colour scheme for debugging info..."],["","\n    "],["String","info_col"],["","  => "],["String","'       white on_black'"],["",",\n    "],["String","try_col"],["","   => "],["String","'bold magenta on_black'"],["",",\n    "],["String","match_col"],[""," => "],["String","'   bold cyan on_black'"],["",",\n    "],["String","fail_col"],["","  => "],["String","'      yellow on_red'"],["",",\n    "],["String","ws_col"],["","    => "],["String","'   bold blue underline'"],["",",\n\n    "],["Comment","# Colour scheme for regex descriptions..."],["","\n    "],["Identifier","%DESCRIPTION_COLOUR"],["",",\n\n    "],["Comment","# Where debugging info is written to (undef --> STDOUT)..."],["","\n    "],["String","save_to_fh"],["","    => "],["Operator","undef"],["",",\n\n    "],["Comment","# How whitespace is managed..."],["","\n    "],["String","show_ws"],["","       => "],["Identifier","$SHOW_WS_OPTIONS["],["Number","0"],["Identifier","]"],["",",\n);\n\n"],["Comment","# The current config..."],["","\n"],["Statement","my"],[""," "],["Identifier","$lexical_config"],[""," = \\"],["Identifier","%DEFAULT_CONFIG"],["",";\n"],["Comment","# Simulate print() and say() on appropriate filehandle..."],["","\n"],["Keyword","sub "],["Function","_print "],["","{\n    "],["Conditional","if"],[""," (!"],["Identifier","$lexical_config->{"],["String","save_to_fh"],["Identifier","}"],["",") {\n        "],["Statement","no warnings"],[""," "],["String","'utf8'"],["",";\n        "],["Statement","print"],[""," "],["Identifier","@_"],["",";\n    }\n}\n\n"],["Keyword","sub "],["Function","_say "],["","{\n    "],["Conditional","if"],[""," (!"],["Identifier","$lexical_config->{"],["String","save_to_fh"],["Identifier","}"],["",") {\n        "],["Statement","no warnings"],[""," "],["String","'utf8'"],["",";\n        "],["Statement","say"],[""," "],["Identifier","@_"],["",";\n    }\n}\n\n"],["Comment","# How should matches be indicated???"],["","\n"],["Statement","my"],[""," "],["Identifier","$MATCH_DRAG"],[""," = "],["String","' '"],["",";\n\n"],["Comment","# Will heatmaps be visible???"],["","\n"],["Statement","my"],[""," "],["Identifier","$heatmaps_invisible"],["",";\n\n"],["Comment","# Indent unit for hierarchical display..."],["","\n"],["Statement","my"],[""," "],["Identifier","$INDENT"],[""," = "],["String","q{  }"],["",";\n\n"],["Comment","# Simulate Term::ANSIColor badly (if necessary)..."],["","\n"],["PreProc","CHECK "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$can_color"],["","\n        = ( "],["Identifier","$^O"],[""," "],["Operator","ne"],[""," "],["String","'MSWin32'"],[""," "],["Operator","or"],[""," "],["Statement","eval"],[""," { "],["Statement","require"],[""," Win32::Console::ANSI } )\n          && "],["Statement","eval"],[""," { "],["Statement","require"],[""," Term::ANSIColor };\n\n    "],["Conditional","if"],[""," ( !"],["Identifier","$can_color"],[""," ) {\n        *Term::ANSIColor::colored = "],["Keyword","sub "],["","{ "],["Statement","return"],[""," "],["Statement","shift"],[""," };\n        "],["Identifier","$MATCH_DRAG"],["","         = "],["String","'_'"],["",";\n        "],["Identifier","$heatmaps_invisible"],[""," = "],["Number","1"],["",";\n    }\n}\n\n"],["Comment","# Load the module..."],["","\n"],["Keyword","sub "],["Function","import "],["","{\n    "],["Statement","use "],["","Carp;\n\n    "],["Comment","# Don't need the module name..."],["","\n    "],["Statement","shift"],["",";\n\n    "],["Comment","# Export re 'eval' semantics..."],["","\n    "],["Identifier","$^H"],[""," |= "],["Number","0x00200000"],["",";\n\n    "],["Comment","# Unpack the arguments..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","@_"],[""," % "],["Number","2"],["",") {\n        croak "],["String","'Odd number of configuration args after \"use Regexp::Debugger\"'"],["",";\n    }\n    "],["Statement","my"],[""," "],["Identifier","%arg"],[""," = "],["Identifier","@_"],["",";\n\n    "],["Comment","# Creat a new lexically scoped config and remember its index..."],["","\n    "],["Statement","push"],[""," "],["Identifier","@config"],["",", { "],["Identifier","%DEFAULT_CONFIG"],[""," };\n    "],["Identifier","$^H"],["","{"],["String","'Regexp::Debugger::lexical_scope'"],["","} = "],["Identifier","$#config"],["",";\n\n    _load_config(\\"],["Identifier","%arg"],["",");\n\n    "],["Comment","# Signal lexical scoping (active, unless something was exported)..."],["","\n    "],["Identifier","$^H"],["","{"],["String","'Regexp::Debugger::active'"],["","} = "],["Number","1"],["",";\n\n    "],["Comment","# Process any regexes in module's active lexical scope..."],["","\n    "],["Statement","use overload"],["",";\n    overload::constant(\n        "],["String","qr"],[""," => "],["Keyword","sub "],["","{\n            "],["Statement","my"],[""," ("],["Identifier","$raw"],["",", "],["Identifier","$cooked"],["",", "],["Identifier","$type"],["",") = "],["Identifier","@_"],["",";\n\n            "],["Statement","my"],[""," "],["Identifier","$lexical_scope"],[""," = ("],["Statement","caller"],[""," "],["Number","1"],["",")["],["Number","10"],["","]{"],["String","'Regexp::Debugger::lexical_scope'"],["","};\n\n            "],["Comment","# In active scope and really a regex and interactivity possible..."],["","\n            "],["Statement","my"],[""," "],["Identifier","$is_interactive"],[""," = "],["Operator","defined"],[""," "],["Identifier","$arg{"],["String","save_to"],["Identifier","}"],[""," || "],["Statement","-t"],[""," *STDIN && "],["Statement","-t"],[""," *STDOUT;\n            "],["Conditional","if"],[""," (_module_is_active() && "],["Identifier","$type"],[""," =~ "],["Statement","/"],["String","qq"],["Special","?"],["Statement","/"],[""," && "],["Identifier","$is_interactive"],["",") {\n                "],["Statement","return"],[""," "],["Operator","bless"],[""," {"],["String","cooked"],["","=>"],["Identifier","$cooked"],["",", "],["String","lexical_scope"],["","=>"],["Identifier","$lexical_scope"],["","}, "],["String","'Regexp::Debugger::Precursor'"],["",";\n            }\n            "],["Comment","# Ignore everything else..."],["","\n            "],["Conditional","else"],[""," {\n                "],["Statement","return"],[""," "],["Identifier","$cooked"],["",";\n            }\n        }\n    );\n}\n\n"],["Comment","# Deactivate module's regex effect when it is \"anti-imported\" with 'no'..."],["","\n"],["Keyword","sub "],["Function","unimport "],["","{\n    "],["Comment","# Signal lexical (non-)scoping..."],["","\n    "],["Identifier","$^H"],["","{"],["String","'Regexp::Debugger::active'"],["","} = "],["Number","0"],["",";\n}\n\n"],["Comment","# Encapsulate the hoopy user-defined pragma interface..."],["","\n"],["Keyword","sub "],["Function","_module_is_active "],["","{\n    "],["Statement","return"],[""," ("],["Statement","caller"],[""," "],["Number","1"],["",")["],["Number","10"],["","]->{"],["String","'Regexp::Debugger::active'"],["","};\n}\n\n"],["Comment","# Load ~/.rxrx config..."],["","\n"],["Keyword","sub "],["Function","_load_config "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$explicit_config_ref"],[""," = "],["Statement","shift"],["","();\n    "],["Statement","my"],[""," "],["Identifier","%config"],["",";\n\n    "],["Comment","# Work out where to look..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$home_dir"],[""," = "],["Identifier","$ENV{"],["String","HOME"],["Identifier","}"],["",";\n    "],["Conditional","if"],[""," (!"],["Identifier","$home_dir"],[""," && "],["Statement","eval"],[""," { "],["Statement","require"],[""," File::HomeDir } ) {\n        "],["Identifier","$home_dir"],[""," = File::HomeDir->my_home;\n    }\n\n    "],["Comment","# Find config file..."],["","\n"],["Label","    CONFIG_FILE:"],["","\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$config_file"],[""," ( "],["String","'.rxrx'"],["",", ( "],["Identifier","$home_dir"],[""," ? "],["String","\""],["Identifier","$home_dir"],["String","/.rxrx\""],[""," : () ) ) {\n\n        "],["Comment","# Is this a readable config file???"],["","\n        "],["Statement","open"],[""," "],["Statement","my"],[""," "],["Identifier","$fh"],["",", "],["String","'<'"],["",", "],["Identifier","$config_file"],["","\n            "],["Operator","or"],[""," "],["Statement","next"],[""," CONFIG_FILE;\n\n        "],["Comment","# Read and parse config file..."],["","\n"],["Label","        CONFIG_LINE:"],["","\n        "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$config_line"],[""," (<"],["Identifier","$fh"],["",">) {\n            "],["Conditional","if"],[""," ("],["Identifier","$config_line"],[""," =~ "],["Statement","/"],["String","^"],["Special","\\s*(.*?)\\s*[:=]\\s*(.*?)\\s*"],["String","$"],["Statement","/"],["",") {\n                "],["Identifier","$config{$1}"],[""," = "],["Identifier","$2"],["",";\n            }\n        }\n\n        "],["Statement","last"],[""," CONFIG_FILE;\n    }\n\n    "],["Comment","# Make any explicit args override .rxrxrc config..."],["","\n    "],["Identifier","%config"],[""," = ("],["String","display"],[""," => "],["String","'visual'"],["",", "],["Identifier","%config"],["",", "],["Identifier","%{$explicit_config_ref}"],["",");\n\n    "],["Comment","# Configure colour scheme for displays..."],["","\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$colour"],[""," ("],["Statement","grep"],[""," "],["Statement","/"],["String","_col$"],["Statement","/"],["",", "],["Statement","keys"],[""," "],["Identifier","%DEFAULT_CONFIG"],["",") {\n        "],["Conditional","if"],[""," ("],["Statement","exists"],[""," "],["Identifier","$config{$colour}"],["",") {\n            "],["Identifier","$config["],["","-"],["Number","1"],["Identifier","]{$colour}"],[""," = "],["Identifier","$config{$colour}"],["","\n        }\n    }\n\n    "],["Comment","# Configure how whitespace is displayed..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$show_ws"],[""," = "],["Identifier","$config{"],["String","show_ws"],["Identifier","}"],["",";\n    "],["Conditional","if"],[""," ("],["Operator","defined"],[""," "],["Identifier","$show_ws"],["",") {\n        "],["Conditional","if"],[""," ("],["Identifier","$show_ws"],[""," ~~ "],["Identifier","@SHOW_WS_OPTIONS"],["",") {\n            "],["Identifier","$config["],["","-"],["Number","1"],["Identifier","]{"],["String","show_ws"],["Identifier","}"],[""," = "],["Identifier","$show_ws"],["",";\n        }\n        "],["Conditional","else"],[""," {\n            croak "],["String","\"Unknown 'show_ws' option: '"],["Identifier","$show_ws"],["String","'\""],["",";\n        }\n    }\n\n    "],["Comment","# Configure heatmap colour scheme..."],["","\n    "],["Statement","my"],[""," "],["Identifier","@heatmap_cols"],[""," =\n        "],["Statement","map"],[""," "],["Statement","{"],[""," "],["Identifier","$config{$_}"],[""," "],["Statement","}"],["","\n        "],["Statement","sort"],[""," "],["Statement","{"],["","\n            "],["Comment","# Sort numerically (if feasible), else alphabetically..."],["","\n            "],["Statement","my"],[""," "],["Identifier","$a_key"],[""," = "],["Identifier","$a"],[""," =~ "],["Statement","/"],["Special","(\\d+)"],["Statement","/"],[""," ? "],["Identifier","$1"],[""," : "],["Operator","undef"],["",";\n            "],["Statement","my"],[""," "],["Identifier","$b_key"],[""," = "],["Identifier","$b"],[""," =~ "],["Statement","/"],["Special","(\\d+)"],["Statement","/"],[""," ? "],["Identifier","$1"],[""," : "],["Operator","undef"],["",";\n            "],["Operator","defined"],[""," "],["Identifier","$a_key"],[""," && "],["Operator","defined"],[""," "],["Identifier","$b_key"],["","\n                ? "],["Identifier","$a_key"],[""," <=> "],["Identifier","$b_key"],["","\n                : "],["Identifier","$a"],["","     "],["Operator","cmp"],[""," "],["Identifier","$b"],["",";\n        "],["Statement","}"],["","\n        "],["Statement","grep"],[""," "],["Statement","{"],[""," "],["Statement","/"],["String","^heatmap"],["Statement","/"],[""," "],["Statement","}"],["","\n        "],["Statement","keys"],[""," "],["Identifier","%config"],["",";\n\n    "],["Conditional","if"],[""," (!"],["Identifier","@heatmap_cols"],["",") {\n        "],["Identifier","@heatmap_cols"],[""," = "],["Identifier","@DEF_HEAT_COLOUR"],["",";\n    }\n\n    "],["Identifier","$config["],["","-"],["Number","1"],["Identifier","]{"],["String","heatmap_col"],["Identifier","}"],[""," = \\"],["Identifier","@heatmap_cols"],["",";\n\n\n    "],["Comment","# Configure initial display mode..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$display"],[""," = "],["Identifier","$config{"],["String","display"],["Identifier","}"],["",";\n    "],["Conditional","if"],[""," ("],["Operator","defined"],[""," "],["Identifier","$display"],["",") {\n        "],["Identifier","$config["],["","-"],["Number","1"],["Identifier","]{"],["String","display_mode"],["Identifier","}"],["","\n            = "],["Identifier","$display"],[""," =~ "],["Statement","m{"],["String","^events"],["Statement","}i"],["","  ? "],["String","'events'"],["","\n            : "],["Identifier","$display"],[""," =~ "],["Statement","m{"],["String","^heatmap"],["Statement","}i"],[""," ? "],["String","'heatmap'"],["","\n            : "],["Identifier","$display"],[""," =~ "],["Statement","m{"],["String","^visual"],["Statement","}i"],["","  ? "],["String","'visual'"],["","\n            : "],["Identifier","$display"],[""," =~ "],["Statement","m{"],["String","^JSON"],["Statement","}i"],["","    ? "],["String","'JSON'"],["","\n            : croak "],["String","\"Unknown 'display' option: '"],["Identifier","$display"],["String","'\""],["",";\n    }\n\n    "],["Comment","# Configure destination of debugging info..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$save_to"],[""," = "],["Identifier","$config{"],["String","save_to"],["Identifier","}"],["",";\n    "],["Conditional","if"],[""," ("],["Operator","defined"],[""," "],["Identifier","$save_to"],["",") {\n        "],["Statement","use "],["","Scalar::Util "],["String","qw< openhandle >"],["",";\n        "],["Conditional","if"],[""," (openhandle("],["Identifier","$save_to"],["",")) {\n            "],["Identifier","$config["],["","-"],["Number","1"],["Identifier","]{"],["String","save_to_fh"],["Identifier","}"],[""," = "],["Identifier","$save_to"],["",";\n        }\n        "],["Conditional","elsif"],[""," (!"],["Operator","ref"],[""," "],["Identifier","$save_to"],["",") {\n            "],["Statement","my"],[""," ("],["Identifier","$mode"],["",", "],["Identifier","$filename"],["",") = "],["Identifier","$save_to"],[""," =~ "],["Statement","m{"],["String"," "],["Special","("],["String",">{0,2}"],["Special",")"],["String"," "],["Special","(.*)"],["String"," "],["Statement","}x"],["",";\n            "],["Statement","open"],[""," "],["Statement","my"],[""," "],["Identifier","$fh"],["",", "],["Identifier","$mode"],["","||"],["String","'>'"],["",", "],["Identifier","$filename"],["","\n                "],["Operator","or"],[""," croak "],["String","\"Invalid 'save_to' option: '"],["Identifier","$save_to"],["String","'"],["Special","\\n"],["String","("],["Identifier","$!"],["String",")\""],["",";\n            "],["Identifier","$config["],["","-"],["Number","1"],["Identifier","]{"],["String","save_to_fh"],["Identifier","}"],[""," = "],["Identifier","$fh"],["",";\n        }\n        "],["Conditional","else"],[""," {\n            croak "],["String","\"Invalid 'save_to' option: \""],["",", "],["Operator","ref"],["","("],["Identifier","$save_to"],["",");\n        }\n    }\n}\n\n\n"],["Comment","# General memory for each state of each regex..."],["","\n"],["Comment","# (structure is: $state{REGEX_NUM}{STATE_NUMBER}{ATTRIBUTE})"],["","\n"],["Statement","my"],[""," "],["Identifier","%state"],["",";\n"],["Statement","my"],[""," "],["Identifier","$next_regex_ID"],[""," = "],["Number","0"],["",";\n\n\n"],["Comment","#=====[ COMPILE-TIME INTERIM REPRESENTATION OF REGEXES ]==================="],["","\n{\n    "],["Statement","package"],["Type"," Regexp::Debugger::Precursor"],["",";\n\n    "],["Comment","# Only translate precursors once..."],["","\n    "],["Statement","state"],[""," "],["Identifier","%regex_cache"],["",";\n\n    "],["Statement","use overload"],[""," (\n        "],["Comment","# Concatenation/interpolation just concatenates to the precursor..."],["","\n        "],["String","q{.}"],[""," => "],["Keyword","sub "],["","{\n            "],["Statement","my"],[""," ("],["Identifier","$x"],["",", "],["Identifier","$y"],["",", "],["Identifier","$reversed"],["",") = "],["Identifier","@_"],["",";\n\n            "],["Comment","# Where are we from???"],["","\n            "],["Statement","my"],[""," "],["Identifier","$lexical_scope"],[""," = "],["Identifier","$x->{"],["String","lexical_scope"],["Identifier","}"],[""," // "],["Number","0"],["",";\n\n            "],["Comment","# Reorder if necessary..."],["","\n            "],["Conditional","if"],[""," ("],["Identifier","$reversed"],["",") { ("],["Identifier","$y"],["",","],["Identifier","$x"],["",") = ("],["Identifier","$x"],["",","],["Identifier","$y"],["","); }\n\n            "],["Comment","# Unpack if objects..."],["","\n            "],["Conditional","if"],[""," ("],["Operator","ref"],[""," "],["Identifier","$x"],["",") { "],["Identifier","$x"],[""," = "],["Statement","eval"],["","{ "],["Identifier","$x->{"],["String","cooked"],["Identifier","}"],[""," } // "],["Identifier","$x"],[""," }\n            "],["Conditional","if"],[""," ("],["Operator","ref"],[""," "],["Identifier","$y"],["",") { "],["Identifier","$y"],[""," = "],["Statement","eval"],["","{ "],["Identifier","$y->{"],["String","cooked"],["Identifier","}"],[""," } // "],["Identifier","$y"],[""," }\n\n            "],["Comment","# Undo overeager \\Q if necessary..."],["","\n               "],["Conditional","if"],[""," ("],["Identifier","$x"],[""," =~ "],["Statement","m{"],["String","^"],["Special","\\\\\\(\\\\\\?\\\\\\#"],["String","R_d"],["Special","\\\\"],["String",":"],["Special","(\\d+)\\\\\\)"],["Statement","}"],["",") { "],["Identifier","$x"],[""," = "],["String","'"],["Special","\\\\"],["String","Q'"],[""," . "],["Identifier","$state{$1}{"],["String","raw_regex"],["Identifier","}"],["","     . "],["String","'"],["Special","\\\\"],["String","E'"],[""," }\n            "],["Conditional","elsif"],[""," ("],["Identifier","$x"],[""," =~ "],["Statement","m{"],["String","^"],["Special","\\(\\?\\#"],["String","R_D:"],["Special","(\\d+)\\)"],["Statement","}"],["",")           { "],["Identifier","$x"],[""," = "],["String","'"],["Special","\\\\"],["String","U'"],[""," . "],["Statement","uc"],["","("],["Identifier","$state{$1}{"],["String","raw_regex"],["Identifier","}"],["",") . "],["String","'"],["Special","\\\\"],["String","E'"],[""," }\n            "],["Conditional","elsif"],[""," ("],["Identifier","$x"],[""," =~ "],["Statement","m{"],["String","^"],["Special","\\(\\?\\#"],["String","r_d:"],["Special","(\\d+)\\)"],["Statement","}"],["",")           { "],["Identifier","$x"],[""," = "],["String","'"],["Special","\\\\"],["String","L'"],[""," . "],["Statement","lc"],["","("],["Identifier","$state{$1}{"],["String","raw_regex"],["Identifier","}"],["",") . "],["String","'"],["Special","\\\\"],["String","E'"],[""," }\n               "],["Conditional","if"],[""," ("],["Identifier","$y"],[""," =~ "],["Statement","m{"],["String","^"],["Special","\\\\\\(\\\\\\?\\\\\\#"],["String","R_d"],["Special","\\\\"],["String",":"],["Special","(\\d+)\\\\\\)"],["Statement","}"],["",") { "],["Identifier","$y"],[""," = "],["String","'"],["Special","\\\\"],["String","Q'"],[""," . "],["Identifier","$state{$1}{"],["String","raw_regex"],["Identifier","}"],["","     . "],["String","'"],["Special","\\\\"],["String","E'"],[""," }\n            "],["Conditional","elsif"],[""," ("],["Identifier","$y"],[""," =~ "],["Statement","m{"],["String","^"],["Special","\\(\\?\\#"],["String","R_D:"],["Special","(\\d+)\\)"],["Statement","}"],["",")           { "],["Identifier","$y"],[""," = "],["String","'"],["Special","\\\\"],["String","U'"],[""," . "],["Statement","uc"],["","("],["Identifier","$state{$1}{"],["String","raw_regex"],["Identifier","}"],["",") . "],["String","'"],["Special","\\\\"],["String","E'"],[""," }\n            "],["Conditional","elsif"],[""," ("],["Identifier","$y"],[""," =~ "],["Statement","m{"],["String","^"],["Special","\\(\\?\\#"],["String","r_d:"],["Special","(\\d+)\\)"],["Statement","}"],["",")           { "],["Identifier","$y"],[""," = "],["String","'"],["Special","\\\\"],["String","L'"],[""," . "],["Statement","lc"],["","("],["Identifier","$state{$1}{"],["String","raw_regex"],["Identifier","}"],["",") . "],["String","'"],["Special","\\\\"],["String","E'"],[""," }\n\n            "],["Comment","# Do the concatenation..."],["","\n            "],["Identifier","$x"],[""," .= "],["Identifier","$y"],["","//"],["String","q{}"],["",";\n\n            "],["Comment","# Rebless as a precursor object..."],["","\n            "],["Statement","return"],[""," "],["Operator","bless"],[""," {"],["String","cooked"],["","=>"],["Identifier","$x"],["",", "],["String","lexical_scope"],["","=>"],["Identifier","$lexical_scope"],["","}, "],["String","'Regexp::Debugger::Precursor'"],["",";\n        },\n\n        "],["Comment","# Using as a string (i.e. matching) preprocesses the precursor..."],["","\n        "],["String","q{\"\"}"],[""," => "],["Keyword","sub "],["","{\n            "],["Statement","my"],[""," ("],["Identifier","$obj"],["",") = "],["Identifier","@_"],["",";\n\n            "],["Statement","use "],["","Scalar::Util "],["String","qw< refaddr >"],["",";\n            "],["Statement","return"],[""," "],["Identifier","$regex_cache{"],[""," refaddr("],["Identifier","$obj"],["",") "],["Identifier","}"],["","\n                //= Regexp::Debugger::_build_debugging_regex( "],["Identifier","@{$obj}{"],["String","'cooked'"],["",", "],["String","'lexical_scope'"],["Identifier","}"],[""," );\n        },\n\n        "],["Comment","# Everything else, as usual..."],["","\n        "],["String","fallback"],[""," => "],["Number","1"],["",",\n    );\n}\n\n\n"],["Comment","#=====[ Augment a regex with debugging statements ]================"],["","\n\n\n"],["Comment","# Build code insertions for before and after elements in a regex..."],["","\n"],["Comment","# (the final $^R ensure these extra code blocks are \"transparent\")"],["","\n\n\n"],["Keyword","sub "],["Function","_build_event "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$regex_ID"],["",", "],["Identifier","$event_ID"],["",", "],["Identifier","$event_desc_ref"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$event_desc_ref->{"],["String","quantifier"],["Identifier","}"],["","  //= "],["String","q{}"],["",";\n    "],["Identifier","$state{$regex_ID}{$event_ID}"],[""," = "],["Identifier","$event_desc_ref"],["",";\n\n    "],["Statement","return"],[""," "],["String","qq{(?{Regexp::Debugger::_report_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String",", pos()); "],["Special","\\$"],["String","^R })(?=)}"],["",";\n}\n\n"],["Keyword","sub "],["Function","_build_whitespace_event "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$construct"],["",","],["Identifier","$regex_ID"],["",", "],["Identifier","$event_ID"],["",", "],["Identifier","$event_desc_ref"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$event_desc_ref->{"],["String","quantifier"],["Identifier","}"],["","  //= "],["String","q{}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","%event_desc_copy"],[""," = "],["Identifier","%{$event_desc_ref}"],["",";\n    "],["Identifier","$state{$regex_ID}{$event_ID}"],["","   = { "],["Identifier","%event_desc_copy"],["",", "],["String","event_type"],[""," => "],["String","'pre'"],[""," };\n    "],["Identifier","$state{$regex_ID}{$event_ID"],["","+"],["Number","1"],["Identifier","}"],[""," = { "],["Identifier","%event_desc_copy"],["",", "],["String","event_type"],[""," => "],["String","'post'"],["",", "],["String","msg"],[""," => "],["String","'Matched'"],[""," };\n\n    "],["Statement","return"],[""," "],["String","qq{(?>(?{local "],["Special","\\$"],["String","Regexp::Debugger::prevpos=pos})"],["Identifier","$construct"],["String","(?{"],["","\n"],["String","            if (defined "],["Special","\\$"],["String","Regexp::Debugger::prevpos && "],["Special","\\$"],["String","Regexp::Debugger::prevpos < pos){"],["","\n"],["String","                Regexp::Debugger::_report_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String",", "],["Special","\\$"],["String","Regexp::Debugger::prevpos);"],["","\n"],["String","                Regexp::Debugger::_report_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String","+1, pos());"],["","\n"],["String","            }"],["Special","\\$"],["String","^R })|(?{"],["","\n"],["String","                Regexp::Debugger::_report_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String",", pos());"],["","\n"],["String","            "],["Special","\\$"],["String","^R"],["","\n"],["String","            })(?!))}"],["",";\n}\n\n\n"],["Comment","# Translate lookaround markers..."],["","\n"],["Statement","my"],[""," "],["Identifier","%LOOKTYPE"],[""," = (\n    "],["String","'(?='"],["","  => "],["String","'positive lookahead'"],["",",\n    "],["String","'(?!'"],["","  => "],["String","'negative lookahead'"],["",",\n    "],["String","'(?<='"],[""," => "],["String","'positive lookbehind'"],["",",\n    "],["String","'(?<!'"],[""," => "],["String","'negative lookbehind'"],["",",\n);\n\n"],["Keyword","sub "],["Function","_build_debugging_regex "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$raw_regex"],["",", "],["Identifier","$lexical_scope"],[""," ) = "],["Identifier","@_"],["",";\n    "],["Identifier","$lexical_scope"],[""," //= "],["Number","0"],["",";\n\n    "],["Comment","# How does this regexp show whitespace???"],["","\n    "],["Statement","our"],[""," "],["Identifier","$show_ws"],[""," = "],["Identifier","$config[$lexical_scope]{"],["String","show_ws"],["Identifier","}"],["",";\n\n    "],["Comment","# Build a clean, compacted version of the regex in this var..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$clean_regex"],[""," = "],["String","q{}"],["",";\n\n    "],["Comment","# Track nested parentheticals so we can correctly mark each ')'..."],["","\n    "],["Statement","my"],[""," "],["Identifier","@paren_stack"],[""," = ( {} );\n\n    "],["Comment","# Give this regex a unique ID..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$regex_ID"],[""," = "],["Identifier","$next_regex_ID"],["","++;\n\n    "],["Comment","# Remember raw data in case of over-eager quotemeta'ing..."],["","\n    "],["Identifier","$state{$regex_ID}{"],["String","raw_regex"],["Identifier","}"],[""," = "],["Identifier","$raw_regex"],["",";\n\n    "],["Comment","# Remember location of regex..."],["","\n    "],["Statement","my"],[""," ("],["Identifier","$filename"],["",", "],["Identifier","$end_line"],["",") = ("],["Statement","caller"],[""," "],["Number","1"],["",")["],["Number","1"],["",","],["Number","2"],["","];\n    "],["Statement","my"],[""," "],["Identifier","$regex_lines"],[""," = "],["Identifier","$raw_regex"],[""," =~ "],["Statement","tr/"],["String","\\n"],["Statement","//"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$start_line"],[""," = "],["Identifier","$end_line"],[""," - "],["Identifier","$regex_lines"],["",";\n    "],["Identifier","$state{$regex_ID}{"],["String","location"],["Identifier","}"],["","\n        = "],["Identifier","$start_line"],[""," == "],["Identifier","$end_line"],[""," ? "],["String","qq{'"],["Identifier","$filename"],["String","' line "],["Identifier","$start_line"],["String","}"],["","\n                                   : "],["String","qq{'"],["Identifier","$filename"],["String","' lines "],["Identifier","$start_line"],["String","-"],["Identifier","$end_line"],["String","}"],["",";\n\n    "],["Comment","# Track each inserted debugging statement..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$next_event_ID"],[""," = "],["Number","0"],["",";\n\n    "],["Comment","# Track capture groups..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$next_capture_group"],[""," = "],["Number","0"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$max_capture_group"],["","  = "],["Number","0"],["",";\n\n    "],["Comment","# Track named capture aliases..."],["","\n    "],["Statement","my"],[""," "],["Identifier","@capture_names_for"],["",";\n\n    "],["Comment","# Track \\Q...\\E"],["","\n    "],["Statement","my"],[""," "],["Identifier","$in_quote"],[""," = "],["Number","0"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$shared_quote_pos"],["",";\n\n    "],["Comment","# Describe construct..."],["","\n    "],["Statement","our"],[""," "],["Identifier","$construct_desc"],["",";\n    "],["Statement","our"],[""," "],["Identifier","$quantifier_desc"],["",";\n\n    "],["Comment","# Translate each component..."],["","\n    "],["Statement","use re"],[""," "],["String","'eval'"],["",";\n    "],["Identifier","$raw_regex"],[""," =~ "],["Statement","s{"],["","\n"],["String","        # Set-up"],["Special","..."],["","\n"],["String","        "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = q{}; "],["Identifier","$construct_desc"],["String"," = q{}; }"],["Special",")"],["","\n\n"],["String","        # Match the next construct"],["Special","..."],["","\n"],["String","        "],["Special","(?"],["String","<construct>"],["","\n"],["String","            "],["Special","(?"],["String","<start>               "],["Special","\\A"],["String","   "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<end>                 "],["Special","\\z"],["String","   "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<quote_start>"],["","\n"],["String","                "],["Special","(??"],["String","{!"],["Identifier","$"],["Type","Regexp::Debugger::"],["Identifier","in_quote"],["String"," ? q{} : q{(?!)} }"],["Special",")"],["","\n"],["String","                "],["Special","\\\\"],["String","Q"],["","\n"],["String","                "],["Special","(?"],["String","{"],["Identifier","$"],["Type","Regexp::Debugger::"],["Identifier","in_quote"],["String"," = 1}"],["Special",")"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        | "],["Special","(??"],["String","{"],["Identifier","$"],["Type","Regexp::Debugger::"],["Identifier","in_quote"],["String"," ? q{} : q{(?!)} }"],["Special",")"],["","\n"],["String","          "],["Special","("],["","\n"],["String","            "],["Special","(?"],["String","<quote_space>    "],["Special","\\s++"],["String"," "],["Special",")"],["","\n"],["String","          |"],["","\n"],["String","            "],["Special","(?"],["String","<quote_end>      "],["Special","\\\\"],["String","E  "],["Special",")"],["","\n"],["String","            "],["Special","(?"],["String","{"],["Identifier","$"],["Type","Regexp::Debugger::"],["Identifier","in_quote"],["String"," = 0}"],["Special",")"],["","\n"],["String","          |"],["","\n"],["String","            "],["Special","(?"],["String","<quote_nonspace> "],["Special","\\S"],["String","   "],["Special",")"],["","\n"],["String","          "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<case_start>"],["","\n"],["String","                "],["Special","\\\\"],["String","U   "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'an auto-uppercased sequence'}"],["Special",")"],["","\n"],["String","            |   "],["Special","\\\\"],["String","L   "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'an auto-lowercased sequence'}"],["Special",")"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<case_end>"],["","\n"],["String","                "],["Special","\\\\"],["String","E"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","{"],["Identifier","$quantifier_desc"],["String"," = '';}"],["Special",")"],["","\n"],["String","            "],["Special","(?"],["String","<closing_paren>       "],["Special","[)]"],["String","  "],["Special",")"],["String","  "],["Special","(?"],["String","<quantifier> "],["Special","(?&QUANTIFIER)"],["String"," "],["Special",")?"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<whitespace>"],["","\n"],["String","                "],["Special","(?(?"],["String","{ "],["Identifier","$show_ws"],["String"," eq 'compact' }"],["Special",")"],["","\n"],["String","                    "],["Special","(?"],["String","<whitespace_chars>"],["","\n"],["String","                        "],["Special","("],["String"," "],["Special","(?:"],["String"," "],["Special","\\s"],["String"," | "],["Special","(?&COMMENT)"],["String"," "],["Special",")+"],["String"," "],["Special",")"],["","\n"],["String","                        "],["Special","(?!"],["String"," "],["Special","(?&UNSPACED_QUANTIFIER)"],["String"," "],["Special",")"],["String"," "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = q{} }"],["Special",")"],["","\n"],["String","                        "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = "],["Identifier","$^N"],["String","}"],["Special",")"],["","\n"],["String","                    |"],["","\n"],["String","                        "],["Special","("],["String"," "],["Special","\\s"],["String"," "],["Special",")"],["","\n"],["String","                        "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = "],["Identifier","$^N"],["String","}"],["Special",")"],["","\n"],["String","                        "],["Special","(?"],["String","<quantifier> "],["Special","(?&UNSPACED_QUANTIFIER)"],["String"," "],["Special",")"],["","\n"],["String","                    "],["Special",")"],["","\n"],["String","                |"],["","\n"],["String","                    "],["Special","(?!)"],["","\n"],["String","                "],["Special",")"],["","\n"],["String","            |"],["","\n"],["String","                "],["Special","(?(?"],["String","{ "],["Identifier","$show_ws"],["String"," eq 'visible' }"],["Special",")"],["","\n"],["String","                    "],["Special","(?"],["String","<whitespace_chars>"],["","\n"],["String","                        "],["Special","("],["String"," [^"],["Special","\\S\\n\\t"],["String","]"],["Special","+"],["String"," "],["Special",")"],["","\n"],["String","                        "],["Special","(?!"],["String"," "],["Special","(?&UNSPACED_QUANTIFIER)"],["String"," "],["Special",")"],["String"," "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = q{} }"],["Special",")"],["","\n"],["String","                        "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = "],["Identifier","$^N"],["String","}"],["Special",")"],["","\n"],["String","                    |"],["","\n"],["String","                        "],["Special","("],["String"," [^"],["Special","\\S\\n\\t"],["String","] "],["Special",")"],["","\n"],["String","                        "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = "],["Identifier","$^N"],["String","}"],["Special",")"],["","\n"],["String","                        "],["Special","(?"],["String","<quantifier> "],["Special","(?&UNSPACED_QUANTIFIER)"],["String"," "],["Special",")"],["","\n"],["String","                    "],["Special",")"],["","\n"],["String","                |"],["","\n"],["String","                    "],["Special","(?!)"],["","\n"],["String","                "],["Special",")"],["","\n"],["String","            |"],["","\n"],["String","                "],["Special","(?(?"],["String","{ "],["Identifier","$show_ws"],["String"," eq 'original'}"],["Special",")"],["","\n"],["String","                    "],["Special","(?"],["String","<whitespace_chars>"],["","\n"],["String","                        "],["Special","("],["String"," [^"],["Special","\\S\\n\\t"],["String","] "],["Special",")"],["","\n"],["String","                        "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = "],["Identifier","$^N"],["String","}"],["Special",")"],["","\n"],["String","                        "],["Special","(?"],["String","<quantifier> "],["Special","(?&UNSPACED_QUANTIFIER)"],["String"," "],["Special",")?"],["","\n"],["String","                    "],["Special",")"],["","\n"],["String","                |"],["","\n"],["String","                    "],["Special","(?!)"],["","\n"],["String","                "],["Special",")"],["","\n"],["String","            |"],["","\n"],["String","                "],["Special","(?"],["String","<newline_char>  "],["Special","\\n"],["String","  "],["Special",")"],["","\n"],["String","                "],["Special","(?"],["String","<quantifier> "],["Special","(?&UNSPACED_QUANTIFIER)"],["String"," "],["Special",")?"],["","\n"],["String","                "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a literal newline character'}"],["Special",")"],["","\n"],["String","            |"],["","\n"],["String","                "],["Special","(?"],["String","<tab_char>      "],["Special","\\t"],["String","  "],["Special",")"],["","\n"],["String","                "],["Special","(?"],["String","<quantifier> "],["Special","(?&UNSPACED_QUANTIFIER)"],["String"," "],["Special",")?"],["","\n"],["String","                "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a literal tab character'}"],["Special",")"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<break_comment>"],["","\n"],["String","                "],["Special","[(][?][#]"],["String"," "],["Special","\\s*"],["String"," "],["Special","(?"],["String","i: BREAK "],["Special",")"],["String"," "],["Special","\\s*"],["String"," "],["Special","[)]"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<comment>"],["","\n"],["String","                "],["Special","(?&COMMENT)"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<modifier_set>"],["","\n"],["String","                "],["Special","[(]"],["String"," "],["Special","[?]"],["String"," "],["Special","(?&MODIFIERS)"],["String"," "],["Special","[)]"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<zero_width>"],["","\n"],["String","                "],["Special","(?"],["String","<_anchor>"],["","\n"],["String","                    "],["Special","\\^"],["","\n"],["String","                        "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'at start of string (or line)'}"],["Special",")"],["","\n"],["String","                |"],["","\n"],["String","                    "],["Special","\\$"],["","\n"],["String","                        "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'at end of string (or final newline)'}"],["Special",")"],["","\n"],["String","                |"],["","\n"],["String","                    "],["Special","\\\\"],["String","  "],["Special","(?:"],["","\n"],["String","                            A   "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'at start of string'}"],["Special",")"],["","\n"],["String","                        |"],["","\n"],["String","                            B   "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'not at an identifier boundary'}"],["Special",")"],["","\n"],["String","                        |"],["","\n"],["String","                            b   "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'at an identifier boundary'}"],["Special",")"],["","\n"],["String","                        |"],["","\n"],["String","                            G   "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'at previous match position'}"],["Special",")"],["","\n"],["String","                        |"],["","\n"],["String","                            Z   "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'at end of string (or final newline)'}"],["Special",")"],["","\n"],["String","                        |"],["","\n"],["String","                            z   "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'at end of string'}"],["Special",")"],["","\n"],["String","                        "],["Special",")"],["","\n"],["String","                "],["Special",")"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<matchable_code_block>"],["","\n"],["String","                "],["Special","[(]"],["String"," "],["Special","[?][?]"],["String"," "],["Special","(?&CODEBLOCK)"],["String"," "],["Special","[)]"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<code_block>"],["","\n"],["String","                "],["Special","[(]"],["String"," "],["Special","[?]"],["String"," "],["Special","(?&CODEBLOCK)"],["String"," "],["Special","[)]"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            # Control verbs like "],["Special","(*PRUNE)"],["String"," and "],["Special","(*MARK:name)..."],["","\n"],["String","            "],["Special","(?"],["String","<control>"],["","\n"],["String","                "],["Special","\\(\\*"],["String"," ["],["Special","[:upper:]]*+"],["String"," "],["Special","(?:"],["String"," : "],["Special","[^)]++"],["String"," "],["Special",")?"],["String"," "],["Special","\\)"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<noncapturing_paren>     "],["Special","[(]"],["String"," "],["Special","[?]"],["String"," "],["Special","(?&MODIFIERS)?"],["String"," : "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<lookaround_paren>       "],["Special","[(]"],["String"," "],["Special","[?]"],["String"," "],["Special","[<]?[=!]"],["String","         "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<non_backtracking_paren> "],["Special","[(]"],["String"," "],["Special","[?]"],["String"," "],["Special","[>]"],["String","              "],["Special",")"],["","\n"],["String","            "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a non-backtracking group'}"],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<branch_reset_paren>     "],["Special","[(]"],["String"," "],["Special","[?]"],["String"," "],["Special","[|]"],["String","              "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<capturing_paren>        "],["Special","[(]"],["String"," "],["Special","(?!"],["String"," "],["Special","[?])"],["String","             "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<define_block>           "],["Special","[(]"],["String"," "],["Special","[?]"],["String"," "],["Special","[(]"],["String"," DEFINE "],["Special","[)]"],["String","   "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<conditional_paren>"],["","\n"],["String","                "],["Special","[(]"],["String"," "],["Special","[?]"],["String"," "],["Special","[(]"],["","\n"],["String","                    "],["Special","(?"],["String","<condition>"],["","\n"],["String","                        "],["Special","\\d+"],["","\n"],["String","                    |   R  "],["Special","\\d*"],["","\n"],["String","                    |   R& "],["Special","(?&IDENTIFIER)"],["","\n"],["String","                    |   < "],["Special","(?&IDENTIFIER)"],["String"," >"],["","\n"],["String","                    |   ' "],["Special","(?&IDENTIFIER)"],["String"," '"],["","\n"],["String","                    |   "],["Special","[?]"],["String"," "],["Special","(?&CODEBLOCK)"],["","\n"],["String","                    "],["Special",")"],["","\n"],["String","                "],["Special","[)]"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<conditional_paren> "],["Special","(?"],["String","<pending_condition>"],["","\n"],["String","                "],["Special","[(]"],["String"," "],["Special","[?]"],["String"," "],["Special","(?="],["String"," "],["Special","[(]"],["String"," "],["Special","[?]"],["String"," <"],["Special","?"],["String"," "],["Special","[=!]"],["String"," "],["Special",")"],["","\n"],["String","            "],["Special","))"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<named_capturing_paren>"],["","\n"],["String","                "],["Special","[(]"],["String"," "],["Special","[?]"],["String"," P"],["Special","?"],["String"," < "],["Special","(?"],["String","<capture_name> "],["Special","(?&IDENTIFIER)"],["String"," "],["Special",")"],["String"," >"],["","\n"],["String","              | "],["Special","[(]"],["String"," "],["Special","[?]"],["String","    ' "],["Special","(?"],["String","<capture_name> "],["Special","(?&IDENTIFIER)"],["String"," "],["Special",")"],["String"," '"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<_alternation>        "],["Special","[|]"],["String","  "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<keep_marker>         "],["Special","\\\\"],["String","K  "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<atom>"],["","\n"],["String","                "],["Special","(?"],["String","<_self_matching>  "],["Special","\\w"],["String","{2,}  "],["Special",")"],["String","  "],["Special","(?!"],["String"," "],["Special","(?&QUANTIFIER)"],["String"," "],["Special",")"],["","\n"],["String","                "],["Special","(?"],["String","{"],["Identifier","$quantifier_desc"],["String"," = ''; "],["Identifier","$construct_desc"],["String"," = qq{a literal sequence (\""],["Identifier","$+"],["String","{_self_matching}\")}}"],["Special",")"],["","\n"],["String","            |"],["","\n"],["String","                "],["Special","(?"],["String","{"],["Identifier","$quantifier_desc"],["String"," = '';}"],["Special",")"],["","\n"],["String","                "],["Special","(?"],["String","<_self_matching>  "],["Special","(?&NONMETA)"],["String","   "],["Special",")"],["String","  "],["Special","(?"],["String","<quantifier> "],["Special","(?&QUANTIFIER)"],["String"," "],["Special",")?"],["","\n"],["String","                "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = qq{a literal '"],["Identifier","$+"],["String","{_self_matching}' character}}"],["Special",")"],["","\n"],["String","            |"],["","\n"],["String","                "],["Special","(?"],["String","{"],["Identifier","$quantifier_desc"],["String"," = '';}"],["Special",")"],["","\n"],["String","                "],["Special","(?"],["String","<_metacharacter>"],["","\n"],["String","                    "],["Special","[.]"],["String","                             "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'any character (except newline)'}"],["Special",")"],["","\n"],["String","                |"],["","\n"],["String","                    "],["Special","\\\\"],["","\n"],["String","                    "],["Special","(?:"],["String"," "],["Special","("],["String","0"],["Special","[0-7]++)"],["String","                  "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"a literal '\".chr(oct("],["Identifier","$^N"],["String",")).\"' character\"}"],["Special",")"],["","\n"],["String","                      | "],["Special","(\\d++)"],["String","                      "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"what was captured in "],["Special","\\$"],["Identifier","$^N"],["String","\"}"],["Special",")"],["","\n"],["String","                      | a                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'an alarm/bell character'}"],["Special",")"],["","\n"],["String","                      | c "],["Special","([A-Z])"],["String","                   "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"a CTRL-"],["Identifier","$^N"],["String"," character\"}"],["Special",")"],["","\n"],["String","                      | C                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a C-language octet'}"],["Special",")"],["","\n"],["String","                      | d                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a digit'}"],["Special",")"],["","\n"],["String","                      | D                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a non-digit'}"],["Special",")"],["","\n"],["String","                      | e                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'an escape character'}"],["Special",")"],["","\n"],["String","                      | f                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a form-feed character'}"],["Special",")"],["","\n"],["String","                      | g      "],["Special","(\\d+)"],["String","                "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"what was captured in "],["Special","\\$"],["Identifier","$^N"],["String","\"}"],["Special",")"],["","\n"],["String","                      | g    - "],["Special","(\\d+)"],["String","                "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = "],["Identifier","$^N"],["String"," == 1 ? \"what was captured by the nearest preceding capture group\""],["","\n"],["String","                                                                                  : \"what was captured "],["Identifier","$^N"],["String"," capture groups back\" }"],["Special",")"],["","\n"],["String","                      | g "],["Special","\\{"],["String","   "],["Special","(\\d+)"],["String"," "],["Special","\\}"],["String","             "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"what was captured in "],["Special","\\$"],["Identifier","$^N"],["String","\"}"],["Special",")"],["","\n"],["String","                      | g "],["Special","\\{"],["String"," - "],["Special","(\\d+)"],["String"," "],["Special","\\}"],["String","             "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = "],["Identifier","$^N"],["String"," == 1 ? \"what was captured by the nearest preceding capture group\""],["","\n"],["String","                                                                                  : \"what was captured "],["Identifier","$^N"],["String"," capture groups back\" }"],["Special",")"],["","\n"],["String","                      | g "],["Special","\\{"],["String"," "],["Special","(\\w++)"],["String"," "],["Special","\\}"],["String","              "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"what the named capture <"],["Identifier","$^N"],["String","> matched\"}"],["Special",")"],["","\n"],["String","                      | h                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a horizontal whitespace character'}"],["Special",")"],["","\n"],["String","                      | H                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a non-horizontal-whitespace character'}"],["Special",")"],["","\n"],["String","                      | k "],["Special","\\<"],["String"," "],["Special","(\\w++)"],["String"," "],["Special","\\>"],["String","              "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"what the named capture <"],["Identifier","$^N"],["String","> matched\"}"],["Special",")"],["","\n"],["String","                      | n                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a newline character'}"],["Special",")"],["","\n"],["String","                      | N "],["Special","\\{"],["String"," "],["Special","("],["String","[^"],["Special","\\}"],["String","]"],["Special","++)"],["String"," "],["Special","\\}"],["String","           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"a single "],["Special","\\L"],["Identifier","$^N"],["Special","\\E"],["String"," character\"}"],["Special",")"],["","\n"],["String","                      | N                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a non-newline character'}"],["Special",")"],["","\n"],["String","                      | p "],["Special","(\\w++)"],["String","                    "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"a character matching the Unicode property: "],["Identifier","$^N"],["String","\"}"],["Special",")"],["","\n"],["String","                      | P "],["Special","(\\w++)"],["String","                    "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"a character not matching the Unicode property: "],["Identifier","$^N"],["String","\"}"],["Special",")"],["","\n"],["String","                      | P "],["Special","\\{"],["String"," "],["Special","("],["String","[^"],["Special","\\}"],["String","]"],["Special","++)"],["String"," "],["Special","\\}"],["String","           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"a character not matching the Unicode property: "],["Identifier","$^N"],["String","\"}"],["Special",")"],["","\n"],["String","                      | p "],["Special","\\{"],["String"," "],["Special","("],["String","[^"],["Special","\\}"],["String","]"],["Special","++)"],["String"," "],["Special","\\}"],["String","           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"a character matching the Unicode property: "],["Identifier","$^N"],["String","\"}"],["Special",")"],["","\n"],["String","                      | r                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a return character'}"],["Special",")"],["","\n"],["String","                      | R                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'an end-of-line sequence'}"],["Special",")"],["","\n"],["String","                      | S                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a non-whitespace character'}"],["Special",")"],["","\n"],["String","                      | s                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a whitespace character'}"],["Special",")"],["","\n"],["String","                      | t                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a tab character'}"],["Special",")"],["","\n"],["String","                      | V                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a non-vertical-whitespace character'}"],["Special",")"],["","\n"],["String","                      | v                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a vertical whitespace character'}"],["Special",")"],["","\n"],["String","                      | w                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'an identifier character'}"],["Special",")"],["","\n"],["String","                      | W                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'an non-identifier character'}"],["Special",")"],["","\n"],["String","                      | x    "],["Special","([0-9A-Za-z]++)"],["String","        "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"a literal '\".chr(oct('0x'."],["Identifier","$^N"],["String",")).\"' character\"}"],["Special",")"],["","\n"],["String","                      | x "],["Special","\\{"],["String"," "],["Special","([0-9A-Za-z ]++)"],["String"," "],["Special","\\}"],["String","    "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"a literal '\".chr(oct('0x'."],["Identifier","$^N"],["String",")).\"' character\"}"],["Special",")"],["","\n"],["String","                      | X                           "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a Unicode grapheme cluster'}"],["Special",")"],["","\n"],["String","                      | "],["Special","(.)"],["String","                         "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"a literal '"],["Identifier","$^N"],["String","' character\"}"],["Special",")"],["","\n"],["String","                    "],["Special",")"],["","\n"],["String","                |"],["","\n"],["String","                    "],["Special","[(][?]"],["String"," P = "],["Special","(\\w++)"],["String"," "],["Special","[)]"],["String","    # PCRE version of "],["Special","\\k<NAME>"],["","\n"],["String","                    "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"what the named capture <"],["Identifier","$^N"],["String","> matched\"}"],["Special",")"],["","\n\n"],["String","                "],["Special",")"],["String","  "],["Special","(?"],["String","<quantifier> "],["Special","(?&QUANTIFIER)"],["String"," "],["Special",")?"],["","\n"],["String","            |"],["","\n"],["String","                "],["Special","(?"],["String","{"],["Identifier","$quantifier_desc"],["String"," = '';}"],["Special",")"],["","\n"],["String","                "],["Special","(?"],["String","<_charset>  "],["Special","(?&CHARSET)"],["String","  "],["Special",")"],["String","  "],["Special","(?"],["String","<quantifier> "],["Special","(?&QUANTIFIER)"],["String"," "],["Special",")?"],["","\n"],["String","                "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = substr("],["Identifier","$+"],["String","{_charset},0,2) eq '[^'"],["","\n"],["String","                                        ? 'any character not listed'"],["","\n"],["String","                                        : 'any of the listed characters'"],["","\n"],["String","                }"],["Special",")"],["","\n"],["String","            |"],["","\n"],["String","                "],["Special","(?"],["String","{"],["Identifier","$quantifier_desc"],["String"," = '';}"],["Special",")"],["","\n"],["String","                "],["Special","(?"],["String","<_named_subpattern_call>"],["","\n"],["String","                    "],["Special","[(][?]"],["","\n"],["String","                    "],["Special","(?:"],["","\n"],["String","                        "],["Special","[&]"],["String"," "],["Special","((?&IDENTIFIER))"],["String","   "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"a call to the subpattern named <"],["Identifier","$^N"],["String",">\"}"],["Special",")"],["","\n"],["String","                    |   P>  "],["Special","((?&IDENTIFIER))"],["String","   "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = \"a call to the subpattern named <"],["Identifier","$^N"],["String",">\"}"],["Special",")"],["","\n"],["String","                    |   "],["Special","[+]?"],["String"," "],["Special","(\\d++)"],["String","            "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a call to subpattern number "],["Identifier","$^N"],["String","'}"],["Special",")"],["","\n"],["String","                    |   "],["Special","[-]"],["String","  "],["Special","(\\d++)"],["String","            "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = "],["Identifier","$^N"],["String"," == 1 ? \"a call to the nearest preceding subpattern\""],["","\n"],["String","                                                                             : \"a call to the subpattern "],["Identifier","$^N"],["String"," back\" }"],["Special",")"],["","\n"],["String","                    |   R                      "],["Special","(?"],["String","{"],["Identifier","$construct_desc"],["String"," = 'a recursive call to the current regex'}"],["Special",")"],["","\n"],["String","                    "],["Special",")"],["","\n"],["String","                    "],["Special","[)]"],["","\n"],["String","                "],["Special",")"],["","\n"],["String","                "],["Special","(?"],["String","<quantifier> "],["Special","(?&QUANTIFIER)"],["String"," "],["Special",")?"],["","\n"],["String","            "],["Special",")"],["","\n"],["String","        |"],["","\n"],["String","            "],["Special","(?"],["String","<misc>        "],["Special","."],["String","    "],["Special",")"],["","\n"],["String","        "],["Special",")"],["","\n\n"],["String","    "],["Special","(?("],["String","DEFINE"],["Special",")"],["","\n"],["String","        # Miscellaneous useful pattern fragments"],["Special","..."],["","\n"],["String","        "],["Special","(?"],["String","<COMMENT>    "],["Special","[(][?][#]"],["String"," "],["Special","(?!"],["String"," "],["Special","\\s*"],["String"," BREAK "],["Special","\\s*"],["String"," "],["Special",")"],["String"," "],["Special",".*?"],["String"," "],["Special","[)]"],["String"," | "],["Special","\\#"],["String"," [^"],["Special","\\n"],["String","]"],["Special","*"],["String"," "],["Special","(?="],["String"," "],["Special","\\n"],["String"," | "],["Special","\\z"],["String"," "],["Special",")"],["String","  "],["Special",")"],["","\n"],["String","        "],["Special","(?"],["String","<CHARSET>    "],["Special","\\["],["String"," "],["Special","\\^?+"],["String"," "],["Special","\\\\?+"],["String"," "],["Special","\\]?+"],["String"," "],["Special","(?:"],["String"," "],["Special","\\["],["String",":"],["Special","\\w+"],["String",":"],["Special","\\]"],["String"," | "],["Special","\\\\"],["String","["],["Special","\\[\\]\\\\"],["String","] | "],["Special","[^]]"],["String"," "],["Special",")*+"],["String"," "],["Special","\\]"],["String"," "],["Special",")"],["","\n"],["String","        "],["Special","(?"],["String","<IDENTIFIER> [^"],["Special","\\W\\d"],["String","]"],["Special","\\w*"],["String","                                   "],["Special",")"],["","\n"],["String","        "],["Special","(?"],["String","<CODEBLOCK>  "],["Special","\\{"],["String","  "],["Special","(?:"],["String"," "],["Special","(?&CODEBLOCK)"],["String"," | "],["Special","."],["String"," "],["Special",")*?"],["String","   "],["Special","\\}"],["String","           "],["Special",")"],["","\n"],["String","        "],["Special","(?"],["String","<MODIFIERS>  "],["Special","[adlupimsx]+"],["String"," "],["Special","(?:"],["String"," - "],["Special","[imsx]+"],["String"," "],["Special",")?"],["","\n"],["String","                    |  - "],["Special","[imsx]+"],["","\n"],["String","                    |  "],["Special","\\^"],["String"," "],["Special","[alupimsx]"],["","\n"],["String","        "],["Special",")"],["","\n"],["String","        "],["Special","(?"],["String","<QUANTIFIER> "],["Special","\\s*"],["String"," "],["Special","(?&UNSPACED_QUANTIFIER)"],["String"," "],["Special",")"],["","\n"],["String","        "],["Special","(?"],["String","<UNSPACED_QUANTIFIER>"],["","\n"],["String","              "],["Special","[*][+]"],["String","         "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = 'zero-or-more times (without backtracking)'          }"],["Special",")"],["","\n"],["String","            | "],["Special","[*][?]"],["String","         "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = 'zero-or-more times (as few as possible)'            }"],["Special",")"],["","\n"],["String","            | "],["Special","[*]"],["String","            "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = 'zero-or-more times (as many as possible)'           }"],["Special",")"],["","\n"],["String","            | "],["Special","[+][+]"],["String","         "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = 'one-or-more times (without backtracking)'           }"],["Special",")"],["","\n"],["String","            | "],["Special","[+][?]"],["String","         "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = 'one-or-more times (as few as possible)'             }"],["Special",")"],["","\n"],["String","            | "],["Special","[+]"],["String","            "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = 'one-or-more times (as many as possible)'            }"],["Special",")"],["","\n"],["String","            | "],["Special","[?][+]"],["String","         "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = 'one-or-zero times (without backtracking)'           }"],["Special",")"],["","\n"],["String","            | "],["Special","[?][?]"],["String","         "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = 'zero-or-one times (as few as possible)'             }"],["Special",")"],["","\n"],["String","            | "],["Special","[?]"],["String","            "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = 'one-or-zero times (as many as possible)'            }"],["Special",")"],["","\n"],["String","            | {"],["Special","\\d"],["String","+,?"],["Special","\\d"],["String","*}"],["Special","[+]"],["String","  "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = 'the specified number of times (without backtracking)' }"],["Special",")"],["","\n"],["String","            | {"],["Special","\\d"],["String","+,?"],["Special","\\d"],["String","*}"],["Special","[?]"],["String","  "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = 'the specified number of times (as few as possible)'   }"],["Special",")"],["","\n"],["String","            | {"],["Special","\\d"],["String","+,?"],["Special","\\d"],["String","*}     "],["Special","(?"],["String","{ "],["Identifier","$quantifier_desc"],["String"," = 'the specified number of times (as many as possible)'  }"],["Special",")"],["","\n"],["String","        "],["Special",")"],["","\n"],["String","        "],["Special","(?"],["String","<NONMETA>  ["],["Special","\\w"],["String","~`!%&=:;\"'<>,/-] "],["Special",")"],["","\n"],["String","    "],["Special",")"],["","\n"],["String","    "],["Statement","}{"],["","\n"],["String","        # Which event is this???"],["","\n"],["String","        my "],["Identifier","$event_ID"],["String"," = "],["Identifier","$next_event_ID"],["String","++;"],["","\n\n"],["String","        # What are we debugging???"],["","\n"],["String","        my "],["Identifier","$construct"],["String"," = "],["Identifier","$+"],["String","{construct};"],["","\n\n"],["String","        # How deep in parens???"],["","\n"],["String","        my "],["Identifier","$depth"],["String","  = scalar("],["Identifier","@paren_stack"],["String",");"],["","\n"],["String","        my "],["Identifier","$indent"],["String"," = "],["Identifier","$INDENT"],["String"," x "],["Identifier","$depth"],["String",";"],["","\n\n"],["String","        # All events get this standard information..."],["","\n"],["String","        my %std_info = ("],["","\n"],["String","            construct_type => (first { /^_/ } keys %+),"],["","\n"],["String","            construct      => "],["Identifier","$construct"],["String",","],["","\n"],["String","            regex_pos      => length("],["Identifier","$clean_regex"],["String","),"],["","\n"],["String","            quantifier     => "],["Identifier","$+"],["String","{quantifier} // q{},"],["","\n"],["String","            depth          => "],["Identifier","$depth"],["String",","],["","\n"],["String","            indent         => "],["Identifier","$indent"],["String",","],["","\n"],["String","        );"],["","\n\n"],["String","#        use Data::Dumper 'Dumper';"],["","\n"],["String","#        warn Dumper { std_info => "],["Special","\\%"],["String","std_info, '%+' => "],["Special","\\%"],["String","+ };"],["","\n\n"],["String","        # Record the construct for display..."],["","\n"],["String","        "],["Identifier","$clean_regex"],["String"," .="],["","\n"],["String","               exists "],["Identifier","$+"],["String","{newline_char}      ?  ("],["Identifier","$std_info{"],["String","construct"],["Identifier","}"],["String"," = q{"],["Special","\\n"],["String","} . "],["Identifier","$std_info{"],["String","quantifier"],["Identifier","}"],["String",")"],["","\n"],["String","             : exists "],["Identifier","$+"],["String","{tab_char}          ?  ("],["Identifier","$std_info{"],["String","construct"],["Identifier","}"],["String"," = q{"],["Special","\\t"],["String","} . "],["Identifier","$std_info{"],["String","quantifier"],["Identifier","}"],["String",")"],["","\n"],["String","             : exists "],["Identifier","$+"],["String","{whitespace_chars}  ?  ("],["Identifier","$std_info{"],["String","construct"],["Identifier","}"],["String"," = q{ } . "],["Identifier","$std_info{"],["String","quantifier"],["Identifier","}"],["String",")"],["","\n"],["String","             :                                 "],["Identifier","$construct"],["","\n"],["String","             ;"],["","\n\n"],["String","        # Determine and remember the necessary translation..."],["","\n"],["String","        my "],["Identifier","$translation"],["String"," = do {"],["","\n\n"],["String","            # Beginning and end of regex..."],["","\n"],["String","            if (exists "],["Identifier","$+"],["String","{start}) {"],["","\n"],["String","                # Prime paren-tracking stack..."],["","\n"],["String","                push "],["Identifier","@paren_stack"],["String",", {};"],["","\n\n"],["String","                # Insert an event to report (re-)starting..."],["","\n"],["String","                _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                    %std_info,"],["","\n"],["String","                    construct_type => '_START',"],["","\n"],["String","                    event_type     => 'pre',"],["","\n"],["String","                    depth          => 1,"],["","\n"],["String","                    lexical_scope  => "],["Identifier","$lexical_scope"],["String",","],["","\n"],["String","                })"],["","\n"],["String","                . '(?:';"],["","\n"],["String","            }"],["","\n\n"],["String","            # At end of regex (if we get here, we matched)..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{end}) {"],["","\n"],["String","                # Insert a final event to report successful match..."],["","\n"],["String","                ')'"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                    %std_info,"],["","\n"],["String","                    construct_type => '_END',"],["","\n"],["String","                    event_type     => 'post',"],["","\n"],["String","                    depth          => 1,"],["","\n"],["String","                    msg            => sub { my "],["Identifier","$steps"],["String"," = "],["Identifier","@{$history_of{"],["String","visual"],["Identifier","}}"],["String",";"],["","\n"],["String","                                            \"Regex matched in "],["Identifier","$steps"],["String"," step\" . ("],["Identifier","$steps"],["String"," != 1 ? 's' : '');"],["","\n"],["String","                                      },"],["","\n"],["String","                })"],["","\n"],["String","                . '|'"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String","+1 => {"],["","\n"],["String","                    %std_info,"],["","\n"],["String","                    construct_type => '_END',"],["","\n"],["String","                    event_type     => 'post',"],["","\n"],["String","                    regex_failed   => 1,"],["","\n"],["String","                    depth          => 1,"],["","\n"],["String","                    msg            => sub { my "],["Identifier","$steps"],["String"," = "],["Identifier","@{$history_of{"],["String","visual"],["Identifier","}}"],["String",";"],["","\n"],["String","                                            \"Regex failed to match after "],["Identifier","$steps"],["String"," step\" . ("],["Identifier","$steps"],["String"," != 1 ? 's' : '');"],["","\n"],["String","                                      },"],["","\n"],["String","                })"],["","\n"],["String","                . '(?!)';"],["","\n"],["String","            }"],["","\n\n"],["String","            # Alternatives marked by a |..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{_alternation}) {"],["","\n"],["String","                # Reset capture numbers if in reset group..."],["","\n"],["String","                if (my "],["Identifier","$reset"],["String"," = "],["Identifier","$paren_stack["],["","-"],["Number","1"],["Identifier","]{"],["String","is_branch_reset"],["Identifier","}"],["String",") {"],["","\n"],["String","                    "],["Identifier","$next_capture_group"],["String"," = "],["Identifier","$reset"],["String","-1;"],["","\n"],["String","                }"],["","\n\n"],["String","                # We need two events, so add an extra one..."],["","\n"],["String","                "],["Identifier","$event_ID"],["String"," = "],["Identifier","$next_event_ID"],["String","++;"],["","\n\n"],["String","                # Insert events to indicate which side of the | we're trying now..."],["","\n"],["String","                  _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String","-1 => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        event_type => 'end',"],["","\n"],["String","                        msg        => 'End of successful alternative',"],["","\n"],["String","                        desc       => 'Or...',"],["","\n"],["String","                        indent     => "],["Identifier","$INDENT"],["String"," x ("],["Identifier","$depth"],["String","-1),"],["","\n"],["String","                  })"],["","\n"],["String","                . "],["Identifier","$construct"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        event_type => 'start',"],["","\n"],["String","                        msg        => 'Trying next alternative',"],["","\n"],["String","                  })"],["","\n"],["String","            }"],["","\n\n"],["String","            # Whitespace has to be treated specially (because it may or may not be significant..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{whitespace}) {"],["","\n"],["String","                # The two events communicate privately via this variable..."],["","\n"],["String","                my "],["Identifier","$shared_str_pos"],["String",";"],["","\n\n"],["String","                # Two events required, so add an extra ID..."],["","\n"],["String","                "],["Identifier","$next_event_ID"],["String","++;"],["","\n\n"],["String","                "],["Identifier","$construct_desc"],["String"," = join q{}, map { "],["Identifier","$_"],["String"," eq \""],["Special","\\n"],["String","\" ? '"],["Special","\\n"],["String","'"],["","\n"],["String","                                                : "],["Identifier","$_"],["String"," eq \""],["Special","\\t"],["String","\" ? '"],["Special","\\t"],["String","'"],["","\n"],["String","                                                : "],["Identifier","$_"],["String"," eq \" \"  ? '"],["Special","\\N"],["String","{SPACE}'"],["","\n"],["String","                                                :               "],["Identifier","$_"],["","\n"],["String","                                                } split '', "],["Identifier","$construct_desc"],["String",";"],["","\n\n"],["String","                # Insert the appropriate events..."],["","\n"],["String","                _build_whitespace_event("],["Identifier","$construct"],["String",", "],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable      => 1,"],["","\n"],["String","                        msg            => \"Trying literal whitespace ('"],["Identifier","$construct_desc"],["String","') "],["Identifier","$quantifier_desc"],["String","\","],["","\n"],["String","                        shared_str_pos => "],["Special","\\$"],["String","shared_str_pos,"],["","\n"],["String","                })"],["","\n"],["String","            }"],["","\n\n"],["String","            # "],["Special","\\L"],["String"," and "],["Special","\\U"],["String"," start case-shifted sequences..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{case_start}) {"],["","\n"],["String","                  _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        event_type => 'pre',"],["","\n"],["String","                        msg        => \"Starting "],["Identifier","$construct_desc"],["String","\","],["","\n"],["String","                        desc       => 'The start of ' . "],["Identifier","$construct_desc"],["String",","],["","\n"],["String","                  })"],["","\n"],["String","            }"],["","\n\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{case_end}) {"],["","\n"],["String","                  _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        event_type => 'pre',"],["","\n"],["String","                        msg        => 'End of autocasing',"],["","\n"],["String","                        desc       => 'The end of autocasing',"],["","\n"],["String","                  })"],["","\n"],["String","            }"],["","\n\n"],["String","            # "],["Special","\\Q"],["String"," starts a quoted sequence..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{quote_start}) {"],["","\n"],["String","                # Set up communication channel between "],["Special","\\Q"],["String"," and "],["Special","\\E"],["String","..."],["","\n"],["String","                my "],["Identifier","$shared_pos"],["String",";"],["","\n"],["String","                "],["Identifier","$shared_quote_pos"],["String"," = "],["Special","\\$"],["String","shared_pos;"],["","\n\n"],["String","                  _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        event_type     => 'pre',"],["","\n"],["String","                        msg            => 'Starting quoted sequence',"],["","\n"],["String","                        desc           => 'The start of a quoted sequence',"],["","\n"],["String","                        shared_str_pos => "],["Identifier","$shared_quote_pos"],["String",","],["","\n"],["String","                  })"],["","\n"],["String","            }"],["","\n\n"],["String","            # "],["Special","\\E"],["String"," ends a quoted sequence..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{quote_end}) {"],["","\n"],["String","                # Retrieve communication channel between "],["Special","\\Q"],["String"," and "],["Special","\\E"],["String","..."],["","\n"],["String","                my "],["Identifier","$shared_pos"],["String"," = "],["Identifier","$shared_quote_pos"],["String",";"],["","\n"],["String","                "],["Identifier","$shared_quote_pos"],["String"," = undef;"],["","\n\n"],["String","                  _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        event_type     => 'post',"],["","\n"],["String","                        msg            => 'End of quoted sequence',"],["","\n"],["String","                        desc           => 'The end of a quoted sequence',"],["","\n"],["String","                        shared_str_pos => "],["Identifier","$shared_pos"],["String",","],["","\n"],["String","                  })"],["","\n"],["String","            }"],["","\n\n\n"],["String","            # Quoted subsequences..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{quote_space}) {"],["","\n"],["String","                # The two events communicate privately via this variable..."],["","\n"],["String","                my "],["Identifier","$shared_str_pos"],["String",";"],["","\n\n"],["String","                # Two events, so add an extra ID..."],["","\n"],["String","                "],["Identifier","$event_ID"],["String"," = "],["Identifier","$next_event_ID"],["String","++;"],["","\n\n"],["String","                  _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String","-1 => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable      => 1,"],["","\n"],["String","                        event_type     => 'pre',"],["","\n"],["String","                        msg            => 'Trying autoquoted literal whitespace',"],["","\n"],["String","                        shared_str_pos => "],["Special","\\$"],["String","shared_str_pos,"],["","\n"],["String","                  })"],["","\n"],["String","                . quotemeta("],["Identifier","$construct"],["String",")"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable      => 1,"],["","\n"],["String","                        event_type     => 'post',"],["","\n"],["String","                        msg            => 'Matched autoquoted literal whitespace',"],["","\n"],["String","                        shared_str_pos => "],["Special","\\$"],["String","shared_str_pos,"],["","\n"],["String","                  })"],["","\n"],["String","            }"],["","\n\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{quote_nonspace}) {"],["","\n"],["String","                # The two events communicate privately via this variable..."],["","\n"],["String","                my "],["Identifier","$shared_str_pos"],["String",";"],["","\n\n"],["String","                # Two events, so add an extra ID..."],["","\n"],["String","                "],["Identifier","$event_ID"],["String"," = "],["Identifier","$next_event_ID"],["String","++;"],["","\n\n"],["String","                  _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String","-1 => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable      => 1,"],["","\n"],["String","                        event_type     => 'pre',"],["","\n"],["String","                        msg            => 'Trying an autoquoted literal character',"],["","\n"],["String","                        desc           => 'Match an autoquoted literal character',"],["","\n"],["String","                        shared_str_pos => "],["Special","\\$"],["String","shared_str_pos,"],["","\n"],["String","                  })"],["","\n"],["String","                . quotemeta("],["Identifier","$construct"],["String",")"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable      => 1,"],["","\n"],["String","                        event_type     => 'post',"],["","\n"],["String","                        msg            => 'Matched a literal character',"],["","\n"],["String","                        shared_str_pos => "],["Special","\\$"],["String","shared_str_pos,"],["","\n"],["String","                  })"],["","\n"],["String","            }"],["","\n\n"],["String","            # Atoms are any elements that match and emit debugging info before and after matching..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{atom}) {"],["","\n"],["String","                # The two events communicate privately via this variable..."],["","\n"],["String","                my "],["Identifier","$shared_str_pos"],["String",";"],["","\n\n"],["String","                # Track depth of subpattern calls..."],["","\n"],["String","                my "],["Identifier","$is_subpattern_call"],["String"," = exists "],["Identifier","$+"],["String","{_named_subpattern_call};"],["","\n"],["String","                my "],["Identifier","$subpattern_call_prefix"],["","\n"],["String","                    = "],["Identifier","$is_subpattern_call"],["","\n"],["String","                        ? q{(?{local "],["Identifier","$"],["Type","Regexp::Debugger::"],["Identifier","subpattern_depth"],["String"," = "],["Identifier","$"],["Type","Regexp::Debugger::"],["Identifier","subpattern_depth"],["String"," + 1})}"],["","\n"],["String","                        : q{};"],["","\n"],["String","                my "],["Identifier","$subpattern_call_suffix"],["","\n"],["String","                    = "],["Identifier","$is_subpattern_call"],["","\n"],["String","                        ? q{(?{local "],["Identifier","$"],["Type","Regexp::Debugger::"],["Identifier","subpattern_depth"],["String"," = "],["Identifier","$"],["Type","Regexp::Debugger::"],["Identifier","subpattern_depth"],["String"," - 1})}"],["","\n"],["String","                        : q{};"],["","\n\n"],["String","                # Two events, so add an extra ID..."],["","\n"],["String","                "],["Identifier","$event_ID"],["String"," = "],["Identifier","$next_event_ID"],["String","++;"],["","\n"],["String","                  _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String","-1 => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable      => 1,"],["","\n"],["String","                        event_type     => 'pre',"],["","\n"],["String","                        msg            => \"Trying "],["Identifier","$construct_desc"],["String","\" . (length("],["Identifier","$quantifier_desc"],["String",") ? \", "],["Identifier","$quantifier_desc"],["String","\" : q{}),"],["","\n"],["String","                        desc           => \"Match "],["Identifier","$construct_desc"],["String","\" . (length("],["Identifier","$quantifier_desc"],["String",") ? \", "],["Identifier","$quantifier_desc"],["String","\" : q{}),"],["","\n"],["String","                        shared_str_pos => "],["Special","\\$"],["String","shared_str_pos,"],["","\n"],["String","                  })"],["","\n"],["String","                . "],["Identifier","$subpattern_call_prefix"],["","\n"],["String","                . "],["Identifier","$construct"],["","\n"],["String","                . "],["Identifier","$subpattern_call_suffix"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable      => 1,"],["","\n"],["String","                        event_type     => 'post',"],["","\n"],["String","                        msg            => 'Matched'"],["","\n"],["String","                                        . ("],["Identifier","$is_subpattern_call"],["String"," ? \" (discarding subpattern's captures)\": q{}),"],["","\n"],["String","                        shared_str_pos => "],["Special","\\$"],["String","shared_str_pos,"],["","\n"],["String","                  })"],["","\n"],["String","            }"],["","\n\n"],["String","            # Code blocks (?{...})..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{code_block}) {"],["","\n"],["String","                # Add an event beforehand to indicate execution of the block..."],["","\n"],["String","                  _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable  => 0,"],["","\n"],["String","                        event_type => 'action',"],["","\n"],["String","                        msg        => 'Executing code block',"],["","\n"],["String","                        desc       => 'Execute a block of code',"],["","\n"],["String","                  })"],["","\n"],["String","                . "],["Identifier","$construct"],["","\n"],["String","            }"],["","\n\n"],["String","            # Code blocks that generate dynamic patterns (??{...})..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{matchable_code_block}) {"],["","\n"],["String","                # These events communicate privately via this variable..."],["","\n"],["String","                my "],["Identifier","$shared_str_pos"],["String",";"],["","\n\n"],["String","                # Modify construct to generate but not match..."],["","\n"],["String","                substr("],["Identifier","$construct"],["String",", 1, 1) = q{};"],["","\n\n"],["String","                # Inserting three events, so add an extra two IDs..."],["","\n"],["String","                "],["Identifier","$event_ID"],["String"," = ("],["Identifier","$next_event_ID"],["String","+=3);"],["","\n"],["String","                  # First event pair reports executing the block..."],["","\n"],["String","                  _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String","-4 => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable  => 0,"],["","\n"],["String","                        event_type => 'action',"],["","\n"],["String","                        msg        => 'Executing code block of postponed subpattern',"],["","\n"],["String","                        desc       => \"Execute a code block, then match the block's final value\","],["","\n"],["String","                  })"],["","\n"],["String","                . "],["Identifier","$construct"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String","-3 => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable  => 0,"],["","\n"],["String","                        event_type => 'action',"],["","\n"],["String","                        msg        => sub { \"Code block returned: '"],["Identifier","$^R"],["String","'\" },"],["","\n"],["String","                  })"],["","\n"],["String","                  # Second event pair reports match of subpattern the block returned..."],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String","-2 => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable      => 1,"],["","\n"],["String","                        event_type     => 'pre',"],["","\n"],["String","                        msg            => sub{ \"Trying: qr{"],["Identifier","$^R"],["String","}\" },"],["","\n"],["String","                        shared_str_pos => "],["Special","\\$"],["String","shared_str_pos,"],["","\n"],["String","                  })"],["","\n"],["String","                . '(??{ "],["Identifier","$^R"],["String"," })'"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String","-1 => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable      => 1,"],["","\n"],["String","                        event_type     => 'post',"],["","\n"],["String","                        msg            => 'Matched',"],["","\n"],["String","                        shared_str_pos => "],["Special","\\$"],["String","shared_str_pos,"],["","\n"],["String","                  })"],["","\n"],["String","            }"],["","\n\n"],["String","            # Keep marker..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{keep_marker}) {"],["","\n"],["String","                # Insert events reporting testing the assertion, and if the test succeeds..."],["","\n"],["String","                  _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable  => 0,"],["","\n"],["String","                        event_type => 'action',"],["","\n"],["String","                        msg        => \"Forgetting everything matched to this point\","],["","\n"],["String","                        desc       => 'Pretend the final match starts here',"],["","\n"],["String","                  })"],["","\n"],["String","                . "],["Identifier","$construct"],["","\n"],["String","                . '(?{ local "],["Identifier","$"],["Type","Regexp::Grammars::"],["Identifier","match_start_pos"],["String"," = pos() })'"],["","\n"],["String","            }"],["","\n\n"],["String","            # Zero-width assertions..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{zero_width}) {"],["","\n"],["String","                # Two events, so add an extra ID..."],["","\n"],["String","                "],["Identifier","$event_ID"],["String"," = "],["Identifier","$next_event_ID"],["String","++;"],["","\n\n"],["String","                # Insert events reporting testing the assertion, and if the test succeeds..."],["","\n"],["String","                  _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String","-1 => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable  => 1,"],["","\n"],["String","                        event_type => 'pre',"],["","\n"],["String","                        msg        => \"Testing if "],["Identifier","$construct_desc"],["String","\","],["","\n"],["String","                        desc       => \"Match only if "],["Identifier","$construct_desc"],["String","\","],["","\n"],["String","                  })"],["","\n"],["String","                . "],["Identifier","$construct"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable  => 1,"],["","\n"],["String","                        event_type => 'post',"],["","\n"],["String","                        msg        => 'Assertion satisfied',"],["","\n"],["String","                  })"],["","\n"],["String","            }"],["","\n\n"],["String","            # Control verbs: (*PRUNE) (*SKIP) (*FAIL) etc..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{control}) {"],["","\n"],["String","                # Two events, so add an extra ID..."],["","\n"],["String","                "],["Identifier","$event_ID"],["String"," = "],["Identifier","$next_event_ID"],["String","++;"],["","\n\n"],["String","                # Insert events to report both the attempt and its success..."],["","\n"],["String","                  _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String","-1 => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable  => 1,"],["","\n"],["String","                        event_type => 'pre',"],["","\n"],["String","                        msg        => 'Executing a control',"],["","\n"],["String","                        desc       => 'Execute a backtracking control',"],["","\n"],["String","                  })"],["","\n"],["String","                . "],["Identifier","$construct"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        matchable  => 1,"],["","\n"],["String","                        event_type => 'post',"],["","\n"],["String","                        msg        => 'Control succeeded',"],["","\n"],["String","                  })"],["","\n"],["String","            }"],["","\n\n"],["String","            # Start of DEFINE block..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{define_block}) {"],["","\n"],["String","                # It's an unbalanced opening paren, so remember it on the stack..."],["","\n"],["String","                push "],["Identifier","@paren_stack"],["String",", {"],["","\n"],["String","                    is_capture     => 0,"],["","\n"],["String","                    construct_type => '_DEFINE_block',"],["","\n"],["String","                    is_definition  => 1,"],["","\n"],["String","                };"],["","\n\n"],["String","                # Insert and event to report skipping the entire block..."],["","\n"],["String","                _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        %{"],["Identifier","$paren_stack["],["","-"],["Number","1"],["Identifier","]"],["String","},"],["","\n"],["String","                        matchable  => 0,"],["","\n"],["String","                        event_type => 'pre',"],["","\n"],["String","                        msg        => 'Skipping definitions',"],["","\n"],["String","                        desc       => 'The start of a definition block (skipped during matching)',"],["","\n"],["String","                  })"],["","\n"],["String","                . "],["Identifier","$construct"],["String"," . '(?:'"],["","\n"],["String","            }"],["","\n\n"],["String","            # Modifier set: (?is-mx) etc..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{modifier_set}) {"],["","\n"],["String","                # Insert an event to report the change of active modifiers..."],["","\n"],["String","                _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        %{"],["Identifier","$paren_stack["],["","-"],["Number","1"],["Identifier","]"],["String","},"],["","\n"],["String","                        matchable  => 0,"],["","\n"],["String","                        event_type => 'compile',"],["","\n"],["String","                        msg        => 'Changing modifiers',"],["","\n"],["String","                        desc       => 'Change current modifiers',"],["","\n"],["String","                  })"],["","\n"],["String","                . "],["Identifier","$construct"],["","\n"],["String","            }"],["","\n\n"],["String","            # Conditional parens: (?(COND) X | Y )..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{conditional_paren}) {"],["","\n"],["String","                # It's an unbalanced opening paren, so remember it on the stack..."],["","\n"],["String","                push "],["Identifier","@paren_stack"],["String",", {"],["","\n"],["String","                    is_capture      => 0,"],["","\n"],["String","                    is_conditional  => 1,"],["","\n"],["String","                    is_pending      => exists "],["Identifier","$+"],["String","{pending_condition}, # ...expecting a lookahead?"],["","\n"],["String","                    construct_type  => '_conditional_group',"],["","\n"],["String","                };"],["","\n\n"],["String","                # Insert an event to report the test..."],["","\n"],["String","                  '(?:'"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                    %std_info,"],["","\n"],["String","                    %{"],["Identifier","$paren_stack["],["","-"],["Number","1"],["Identifier","]"],["String","},"],["","\n"],["String","                    event_type => 'pre',"],["","\n"],["String","                    msg        => 'Testing condition',"],["","\n"],["String","                    desc       => 'The start of a conditional block',"],["","\n"],["String","                  })"],["","\n"],["String","                . "],["Identifier","$construct"],["String",";"],["","\n"],["String","            }"],["","\n\n"],["String","            # Branch-reset parens..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{branch_reset_paren}) {"],["","\n"],["String","                # It's an unbalanced opening paren, so remember it on the stack..."],["","\n"],["String","                push "],["Identifier","@paren_stack"],["String",", {"],["","\n"],["String","                    is_capture      => 0,"],["","\n"],["String","                    is_branch_reset => "],["Identifier","$next_capture_group"],["String","+1,"],["","\n"],["String","                    construct_type  => '_branch_reset_group',"],["","\n"],["String","                };"],["","\n\n"],["String","                # Insert an event to report the start of branch-reseting..."],["","\n"],["String","                  '(?:'"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                    %std_info,"],["","\n"],["String","                    %{"],["Identifier","$paren_stack["],["","-"],["Number","1"],["Identifier","]"],["String","},"],["","\n"],["String","                    event_type => 'pre',"],["","\n"],["String","                    msg        => 'Starting branch-resetting group',"],["","\n"],["String","                    desc       => 'The start of a branch-resetting group',"],["","\n"],["String","                  })"],["","\n"],["String","                . "],["Identifier","$construct"],["String",";"],["","\n"],["String","            }"],["","\n\n"],["String","            # Non-capturing parens..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{noncapturing_paren}) {"],["","\n"],["String","                # Do the non-capturing parens have embedded modifiers???"],["","\n"],["String","                my "],["Identifier","$addendum"],["String"," = length("],["Identifier","$construct"],["String",") > 3 ? ', changing modifiers' : q{};"],["","\n\n"],["String","                # It's an unbalanced opening paren, so remember it on the stack..."],["","\n"],["String","                push "],["Identifier","@paren_stack"],["String",", {"],["","\n"],["String","                    is_capture     => 0,"],["","\n"],["String","                    construct_type => '_noncapture_group',"],["","\n"],["String","                };"],["","\n\n"],["String","                # Insert an event to report the start of a non-capturing group..."],["","\n"],["String","                  '(?:'"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                    %std_info,"],["","\n"],["String","                    %{"],["Identifier","$paren_stack["],["","-"],["Number","1"],["Identifier","]"],["String","},"],["","\n"],["String","                    event_type => 'pre',"],["","\n"],["String","                    msg        => 'Starting non-capturing group' . "],["Identifier","$addendum"],["String",","],["","\n"],["String","                    desc       => 'The start of a non-capturing group',"],["","\n"],["String","                  })"],["","\n"],["String","                . "],["Identifier","$construct"],["String",";"],["","\n"],["String","            }"],["","\n\n"],["String","            # Non-backtracking parens..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{non_backtracking_paren}) {"],["","\n"],["String","                # It's an unbalanced opening paren, so remember it on the stack..."],["","\n"],["String","                push "],["Identifier","@paren_stack"],["String",", {"],["","\n"],["String","                    is_capture      => 0,"],["","\n"],["String","                    is_nonbacktrack => 1,"],["","\n"],["String","                    construct_type  => '_nonbacktracking_group',"],["","\n"],["String","                };"],["","\n\n"],["String","                # Insert an event to report the start of a non-backtracking group..."],["","\n"],["String","                  '(?:'"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                    %std_info,"],["","\n"],["String","                    %{"],["Identifier","$paren_stack["],["","-"],["Number","1"],["Identifier","]"],["String","},"],["","\n"],["String","                    event_type => 'pre',"],["","\n"],["String","                    msg        => 'Starting non-backtracking group',"],["","\n"],["String","                    desc       => 'The start of a non-backtracking group',"],["","\n"],["String","                  })"],["","\n"],["String","                . '(?>';"],["","\n"],["String","            }"],["","\n\n"],["String","            # Positive lookahead/lookbehind parens..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{lookaround_paren}) {"],["","\n"],["String","                # It's an unbalanced opening paren, so remember it on the stack..."],["","\n"],["String","                push "],["Identifier","@paren_stack"],["String",", {"],["","\n"],["String","                    is_capture     => 0,"],["","\n"],["String","                    is_lookaround  => "],["Identifier","$LOOKTYPE{$construct}"],["String",","],["","\n"],["String","                    construct_type => '_lookaround',"],["","\n"],["String","                };"],["","\n\n"],["String","                # Is this lookaround the test of a (?(COND) X | Y) conditional???"],["","\n"],["String","                if ("],["Identifier","$paren_stack["],["","-"],["Number","2"],["Identifier","]{"],["String","is_conditional"],["Identifier","}"],["String"," && "],["Identifier","$paren_stack["],["","-"],["Number","2"],["Identifier","]{"],["String","is_pending"],["Identifier","}"],["String",") {"],["","\n"],["String","                    # If so, the test is no longer pending..."],["","\n"],["String","                    delete "],["Identifier","$paren_stack["],["","-"],["Number","2"],["Identifier","]{"],["String","is_pending"],["Identifier","}"],["String",";"],["","\n\n"],["String","                    # Insert an event to report the test..."],["","\n"],["String","                      "],["Identifier","$construct"],["","\n"],["String","                    . '(?:'"],["","\n"],["String","                    . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        %{"],["Identifier","$paren_stack["],["","-"],["Number","1"],["Identifier","]"],["String","},"],["","\n"],["String","                        event_type => 'pre',"],["","\n"],["String","                        msg        => 'Testing for ' . "],["Identifier","$LOOKTYPE{$construct}"],["String",","],["","\n"],["String","                        desc       => 'Match ' . lc "],["Identifier","$LOOKTYPE{$construct}"],["String",","],["","\n"],["String","                    });"],["","\n"],["String","                }"],["","\n"],["String","                else {"],["","\n"],["String","                    # Otherwise, insert an event to report the start of the lookaround..."],["","\n"],["String","                    '(?:'"],["","\n"],["String","                    . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        %{"],["Identifier","$paren_stack["],["","-"],["Number","1"],["Identifier","]"],["String","},"],["","\n"],["String","                        event_type => 'pre',"],["","\n"],["String","                        msg        => 'Starting ' . "],["Identifier","$LOOKTYPE{$construct}"],["String",","],["","\n"],["String","                        desc       => 'Match ' . "],["Identifier","$LOOKTYPE{$construct}"],["String",","],["","\n"],["String","                    })"],["","\n"],["String","                    . "],["Identifier","$construct"],["String",";"],["","\n"],["String","                }"],["","\n"],["String","            }"],["","\n\n"],["String","            # Capturing parens..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{capturing_paren}) {"],["","\n"],["String","                # The events communicate privately via this variable..."],["","\n"],["String","                my "],["Identifier","$shared_str_pos"],["String",";"],["","\n\n"],["String","                # Get the corresponding capture group number..."],["","\n"],["String","                "],["Identifier","$next_capture_group"],["String","++;"],["","\n\n"],["String","                # Track the maximum group number (for after branch resets)..."],["","\n"],["String","                "],["Identifier","$max_capture_group"],["String"," = max("],["Identifier","$max_capture_group"],["String",", "],["Identifier","$next_capture_group"],["String",");"],["","\n\n"],["String","                # It's an unbalanced opening paren, so remember it on the stack..."],["","\n"],["String","                push "],["Identifier","@paren_stack"],["String",", {"],["","\n"],["String","                    is_capture     => 1,"],["","\n"],["String","                    construct_type => '_capture_group',"],["","\n"],["String","                    capture_name   => '"],["Identifier","$'"],["String","."],["Identifier","$next_capture_group"],["String",","],["","\n"],["String","                    shared_str_pos => "],["Special","\\$"],["String","shared_str_pos,"],["","\n"],["String","                };"],["","\n\n"],["String","                # Insert an event to report the start of capturing..."],["","\n"],["String","                  '('"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                    %std_info,"],["","\n"],["String","                    %{"],["Identifier","$paren_stack["],["","-"],["Number","1"],["Identifier","]"],["String","},"],["","\n"],["String","                    event_type => 'pre',"],["","\n"],["String","                    msg        => 'Capture to "],["Identifier","$'"],["String","."],["Identifier","$next_capture_group"],["String",","],["","\n"],["String","                    desc       => \"The start of a capturing block ("],["Special","\\$"],["Identifier","$next_capture_group"],["String",")\","],["","\n"],["String","                  })"],["","\n"],["String","                . '(?:';"],["","\n"],["String","            }"],["","\n\n"],["String","            # Named capturing parens..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{named_capturing_paren}) {"],["","\n"],["String","                # The events communicate privately via this variable..."],["","\n"],["String","                my "],["Identifier","$shared_str_pos"],["String",";"],["","\n\n"],["String","                # Named capture groups are also numbered, so get the number..."],["","\n"],["String","                "],["Identifier","$next_capture_group"],["String","++;"],["","\n\n"],["String","                # Track the maximum group number (for after branch resets)..."],["","\n"],["String","                "],["Identifier","$max_capture_group"],["String"," = max("],["Identifier","$max_capture_group"],["String",", "],["Identifier","$next_capture_group"],["String",");"],["","\n\n"],["String","                # If this creates a new numbered capture, remember the number..."],["","\n"],["String","                if (!"],["Identifier","@{$capture_names_for[$next_capture_group]"],["","//[]"],["Identifier","}"],["String",") {"],["","\n"],["String","                    push "],["Identifier","@{$capture_names_for[$next_capture_group]}"],["String",", '"],["Identifier","$'"],["String","."],["Identifier","$next_capture_group"],["String",";"],["","\n"],["String","                }"],["","\n\n"],["String","                # Add this name to the list of aliases for the same numbered capture..."],["","\n"],["String","                # (Needed because named captures in two reset branches may alias"],["","\n"],["String","                # to the same underlying numbered capture variable. See perlre)"],["","\n"],["String","                push "],["Identifier","@{$capture_names_for[$next_capture_group]}"],["String",", '"],["Identifier","$+"],["String","{'."],["Identifier","$+"],["String","{capture_name}.'}';"],["","\n\n"],["String","                # It's an unbalanced opening paren, so remember it on the stack..."],["","\n"],["String","                push "],["Identifier","@paren_stack"],["String",", {"],["","\n"],["String","                    is_capture     => 1,"],["","\n"],["String","                    construct_type => '_capture_group',"],["","\n"],["String","                    capture_name   => "],["Identifier","$capture_names_for[$next_capture_group]"],["String",","],["","\n"],["String","                    shared_str_pos => "],["Special","\\$"],["String","shared_str_pos,"],["","\n"],["String","                };"],["","\n\n"],["String","                # Insert an event to report the start of the named capture..."],["","\n"],["String","                  "],["Identifier","$construct"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                    %std_info,"],["","\n"],["String","                    %{"],["Identifier","$paren_stack["],["","-"],["Number","1"],["Identifier","]"],["String","},"],["","\n"],["String","                    event_type => 'pre',"],["","\n"],["String","                    msg        => "],["Identifier","$capture_names_for[$next_capture_group]"],["String",","],["","\n"],["String","                    desc       => \"The start of a named capturing block (also "],["Special","\\$"],["Identifier","$next_capture_group"],["String",")\","],["","\n"],["String","                  })"],["","\n"],["String","                . '(?:';"],["","\n"],["String","            }"],["","\n\n"],["String","            # Closing parens have to be deciphered..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{closing_paren}) {"],["","\n"],["String","                # The top of the paren stack tells us what kind of group we're closing..."],["","\n"],["String","                my "],["Identifier","$paren_data"],["String"," = pop("],["Identifier","@paren_stack"],["String",") // { type=>'unmatched closing )' };"],["","\n\n"],["String","                # Update the next capture group number, if after a branch reset group..."],["","\n"],["String","                if ("],["Identifier","$paren_data->{"],["String","is_branch_reset"],["Identifier","}"],["String",") {"],["","\n"],["String","                    "],["Identifier","$next_capture_group"],["String"," = "],["Identifier","$max_capture_group"],["String",";"],["","\n"],["String","                }"],["","\n\n"],["String","                # Generate an appropriate message for the type of group being closed..."],["","\n"],["String","                my "],["Identifier","$msg"],["String"," = "],["Identifier","$paren_data->{"],["String","is_capture"],["Identifier","}"],["String"," && ref "],["Identifier","$paren_data->{"],["String","capture_name"],["Identifier","}"],["","\n"],["String","                                                         ? "],["Identifier","$paren_data->{"],["String","capture_name"],["Identifier","}"],["","\n"],["String","                        : "],["Identifier","$paren_data->{"],["String","is_capture"],["Identifier","}"],["String","      ? 'End of ' . "],["Identifier","$paren_data->{"],["String","capture_name"],["Identifier","}"],["","\n"],["String","                        : "],["Identifier","$paren_data->{"],["String","is_definition"],["Identifier","}"],["String","   ? 'End of definition block'"],["","\n"],["String","                        : "],["Identifier","$paren_data->{"],["String","is_branch_reset"],["Identifier","}"],["String"," ? 'End of branch-resetting group'"],["","\n"],["String","                        : "],["Identifier","$paren_data->{"],["String","is_lookaround"],["Identifier","}"],["String","   ? 'End of ' . "],["Identifier","$paren_data->{"],["String","is_lookaround"],["Identifier","}"],["","\n"],["String","                        : "],["Identifier","$paren_data->{"],["String","is_conditional"],["Identifier","}"],["String","  ? 'End of conditional group'"],["","\n"],["String","                        : "],["Identifier","$paren_data->{"],["String","is_nonbacktrack"],["Identifier","}"],["String"," ? 'End of non-backtracking group'"],["","\n"],["String","                        :                                  'End of non-capturing group'"],["","\n"],["String","                        ;"],["","\n\n"],["String","                if (length("],["Identifier","$std_info{"],["String","quantifier"],["Identifier","}"],["String",")) {"],["","\n"],["String","                    "],["Identifier","$msg"],["String"," .= \" (matching "],["Identifier","$quantifier_desc"],["String",")\";"],["","\n"],["String","                }"],["","\n\n"],["String","                # Two events, so add an extra ID..."],["","\n"],["String","                "],["Identifier","$event_ID"],["String"," = "],["Identifier","$next_event_ID"],["String","++;"],["","\n\n"],["String","                # Append an event reporting the completion of the group..."],["","\n"],["String","                  ')'"],["","\n"],["String","                . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String","-1 => {"],["","\n"],["String","                    %std_info,"],["","\n"],["String","                    %{"],["Identifier","$paren_data"],["String","},"],["","\n"],["String","                    event_type => 'post',"],["","\n"],["String","                    msg        => "],["Identifier","$msg"],["String",","],["","\n"],["String","                    desc       => ( ref "],["Identifier","$msg"],["String"," ? 'The end of the named capturing block' : 'The e' . substr("],["Identifier","$msg"],["String",",1) ),"],["","\n"],["String","                    depth      => "],["Identifier","$depth"],["String"," - 1,"],["","\n"],["String","                    indent     => "],["Identifier","$INDENT"],["String"," x ("],["Identifier","$depth"],["String"," - 1),"],["","\n"],["String","                  })"],["","\n"],["String","                . ("],["Identifier","$paren_data->{"],["String","is_nonbacktrack"],["Identifier","}"],["","\n"],["String","                        ? '|'"],["","\n"],["String","                        . _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                            %std_info,"],["","\n"],["String","                            %{"],["Identifier","$paren_data"],["String","},"],["","\n"],["String","                            event_type => 'failed_nonbacktracking',"],["","\n"],["String","                            msg        => 'non-backtracking group',"],["","\n"],["String","                            depth      => "],["Identifier","$depth"],["String"," - 1,"],["","\n"],["String","                            indent     => "],["Identifier","$INDENT"],["String"," x ("],["Identifier","$depth"],["String"," - 1),"],["","\n"],["String","                          })"],["","\n"],["String","                        . q{(?!)}"],["","\n"],["String","                        : q{}"],["","\n"],["String","                  )"],["","\n"],["String","                . ')'"],["","\n"],["String","                . "],["Identifier","$std_info{"],["String","quantifier"],["Identifier","}"],["String",";"],["","\n"],["String","            }"],["","\n\n"],["String","            # Skip comments..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{break_comment}) {"],["","\n"],["String","                # Insert an event reporting that the break comment is being skipped..."],["","\n"],["String","                _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        %{"],["Identifier","$paren_stack["],["","-"],["Number","1"],["Identifier","]"],["String","},"],["","\n"],["String","                        matchable  => 0,"],["","\n"],["String","                        event_type => 'break',"],["","\n"],["String","                        msg        => 'Breaking at (and skipping) comment',"],["","\n"],["String","                        desc       => 'Ignore this comment (but Regexp::Debugger will break here)',"],["","\n"],["String","                  })"],["","\n"],["String","            }"],["","\n\n"],["String","            # Skip comments..."],["","\n"],["String","            elsif (exists "],["Identifier","$+"],["String","{comment}) {"],["","\n"],["String","                # Insert an event reporting that the comment is being skipped..."],["","\n"],["String","                _build_event("],["Identifier","$regex_ID"],["String",", "],["Identifier","$event_ID"],["String"," => {"],["","\n"],["String","                        %std_info,"],["","\n"],["String","                        %{"],["Identifier","$paren_stack["],["","-"],["Number","1"],["Identifier","]"],["String","},"],["","\n"],["String","                        matchable  => 0,"],["","\n"],["String","                        event_type => 'skip',"],["","\n"],["String","                        msg        => 'Skipping comment',"],["","\n"],["String","                        desc       => 'Ignore this comment',"],["","\n"],["String","                  })"],["","\n"],["String","            }"],["","\n\n"],["String","            # Ignore (but preserve) anything else..."],["","\n"],["String","            else {"],["","\n"],["String","                "],["Identifier","$construct"],["String",";"],["","\n"],["String","            }"],["","\n"],["String","        };"],["","\n"],["String","    "],["Statement","}exmsg"],["",";\n\n    "],["Comment","# Remember the regex..."],["","\n    "],["Identifier","$state{$regex_ID}{"],["String","regex_src"],["Identifier","}"],[""," = "],["Identifier","$clean_regex"],["",";\n\n    "],["Comment","# Add a preface to reset state variables in the event handler..."],["","\n    "],["Identifier","$raw_regex"],[""," = "],["String","\"(?>"],["Special","\\\\"],["String","A(?{Regexp::Debugger::_reset_debugger_state()})(?!))|(?:"],["Identifier","$raw_regex"],["String",")\""],["",";\n\n    "],["Statement","return"],[""," "],["String","\"(?#R_d:"],["Identifier","$regex_ID"],["String",")\""],["","."],["Identifier","$raw_regex"],["",";\n}\n\n"],["Comment","#====[ Dispatch in-regex events ]================================"],["","\n\n"],["Comment","# How big the display window is..."],["","\n"],["Statement","my"],[""," "],["Identifier","$MAX_WIDTH"],["","  = "],["Number","80"],["",";\n"],["Statement","my"],[""," "],["Identifier","$MAX_HEIGHT"],[""," = "],["Number","60"],["",";\n\n"],["Comment","# What to print so as to \"clear\" the screen..."],["","\n"],["Statement","my"],[""," "],["Identifier","$CLEAR_SCREEN"],[""," = "],["String","\""],["Special","\\n"],["String","\""],[""," x "],["Identifier","$MAX_HEIGHT"],["",";\n\n"],["Comment","# How wide is each column in event mode..."],["","\n"],["Statement","my"],[""," "],["Identifier","$EVENT_COL_WIDTH"],[""," = "],["Number","15"],["",";\n\n\n"],["Keyword","sub "],["Function","_show_if_active "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$data_mode"],["",", "],["Identifier","$display_mode"],["",", "],["Identifier","$event_desc"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Comment","# Accumulate history..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$history_to_date"],["","\n        = "],["Identifier","@{$history_of{$data_mode}"],["","//[]"],["Identifier","}"],[""," ? "],["Identifier","$history_of{$data_mode}["],["","-"],["Number","1"],["Identifier","]{"],["String","display"],["Identifier","}"],[""," : "],["String","q{}"],["",";\n\n    "],["Comment","# Remember, always...."],["","\n    "],["Statement","push"],[""," "],["Identifier","@{$history_of{$data_mode}}"],["",", {\n        "],["String","display"],[""," => "],["Identifier","$history_to_date"],[""," . "],["Identifier","$event_desc"],[""," . "],["String","\""],["Special","\\n"],["String","\""],["","\n    };\n\n    "],["Comment","# Show, if appropriate..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$display_mode"],[""," "],["Operator","eq"],[""," "],["Identifier","$data_mode"],["",") {\n        "],["Conditional","if"],[""," (!"],["Identifier","$lexical_config->{"],["String","save_to_fh"],["Identifier","}"],[""," || "],["Identifier","$data_mode"],[""," "],["Operator","ne"],[""," "],["String","'JSON'"],["",") {\n            _print "],["Identifier","$CLEAR_SCREEN"],["",";\n            _say "],["Identifier","$history_of{$data_mode}["],["","-"],["Number","1"],["Identifier","]{"],["String","display"],["Identifier","}"],["",";\n        }\n    }\n\n}\n\n"],["Keyword","sub "],["Function","_show_JSON    "],["","{ _show_if_active("],["String","'JSON'"],["",",    "],["Identifier","@_"],["",") }\n"],["Keyword","sub "],["Function","_show_event   "],["","{ _show_if_active("],["String","'events'"],["",",  "],["Identifier","@_"],["",") }\n\n\n"],["Comment","# Add a new animation \"frame\"..."],["","\n"],["Keyword","sub "],["Function","_new_visualize "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$data_mode"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","push"],[""," "],["Identifier","@{$history_of{$data_mode}}"],["",", { "],["String","display"],["","=>"],["String","q{}"],["",", "],["String","is_match"],[""," => "],["Number","0"],[""," };\n}\n\n"],["Comment","# Output the args and also add them to the current animation \"frame\""],["","\n"],["Keyword","sub "],["Function","_visualize "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$data_mode"],["",", "],["Identifier","@output"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","state"],[""," "],["Identifier","$NO_MATCH"],[""," = "],["Number","0"],["",";\n    "],["Statement","state"],[""," "],["Identifier","$NO_FAIL"],["","  = "],["Number","0"],["",";\n    _visualize_matchfail("],["Identifier","$data_mode"],["",", "],["Identifier","$NO_MATCH"],["",", "],["Identifier","$NO_FAIL"],["",", "],["Identifier","@output"],["",");\n}\n\n"],["Keyword","sub "],["Function","_visualize_matchfail "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$data_mode"],["",", "],["Identifier","$is_match"],["",", "],["Identifier","$is_fail"],["",", "],["Identifier","@output"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$output"],[""," = "],["Statement","join"],[""," "],["String","q{}"],["",", "],["Statement","grep"],[""," "],["Statement","{"],["Operator","defined"],["Statement","}"],[""," "],["Identifier","@output"],["",";\n    "],["Conditional","if"],[""," ("],["Identifier","$display_mode"],[""," "],["Operator","eq"],[""," "],["Identifier","$data_mode"],["",") {\n        _say "],["Identifier","$output"],["",";\n    }\n    "],["Identifier","$history_of{$data_mode}["],["","-"],["Number","1"],["Identifier","]{"],["String","is_fail"],["Identifier","}"],["","   = "],["Number","1"],[""," "],["Conditional","if"],[""," "],["Identifier","$is_fail"],["",";\n    "],["Identifier","$history_of{$data_mode}["],["","-"],["Number","1"],["Identifier","]{"],["String","is_match"],["Identifier","}"],["","  = "],["Number","1"],[""," "],["Conditional","if"],[""," "],["Identifier","$is_match"],["",";\n    "],["Identifier","$history_of{$data_mode}["],["","-"],["Number","1"],["Identifier","]{"],["String","display"],["Identifier","}"],["","  .= "],["Identifier","$output"],[""," . "],["String","\""],["Special","\\n"],["String","\""],["",";\n}\n\n"],["Comment","# Show previous animation frames..."],["","\n"],["Keyword","sub "],["Function","_revisualize "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$regex_ID"],["",", "],["Identifier","$step"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Comment","# Start at the previous step unless otherwise specified..."],["","\n    "],["Identifier","$step"],[""," //= max("],["Number","0"],["",", "],["Identifier","@{$history_of{$display_mode}}"],["","-"],["Number","2"],["",");\n\n    "],["Statement","my"],[""," "],["Identifier","$input"],[""," = "],["String","'-'"],["",";\n"],["Label","    STEP:"],["","\n    "],["Repeat","while"],[""," ("],["Number","1"],["",") {\n        "],["Comment","# Did we fall out of available history???"],["","\n        "],["Statement","last"],[""," STEP "],["Conditional","if"],[""," "],["Identifier","$step"],[""," >= "],["Identifier","@{$history_of{$display_mode}}"],["",";\n\n        "],["Comment","# Clear display and show the requested step..."],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$input"],[""," "],["Operator","ne"],[""," "],["String","'?'"],["",") {\n            _print "],["Identifier","$CLEAR_SCREEN"],["",";\n            _print "],["Identifier","$history_of{$display_mode}[$step]{"],["String","display"],["Identifier","}"],["",";\n            "],["Conditional","if"],[""," ("],["Identifier","$display_mode"],[""," "],["Operator","eq"],[""," "],["String","'events'"],[""," || "],["Identifier","$display_mode"],[""," "],["Operator","eq"],[""," "],["String","'JSON'"],["",") {\n                "],["Conditional","if"],[""," (!"],["Identifier","$lexical_config->{"],["String","save_to_fh"],["Identifier","}"],["",") {\n                    "],["Statement","say"],[""," _info_colourer(\n                        "],["String","qq{"],["Special","\\n\\n"],["String","["],["Special","\\u"],["Identifier","$display_mode"],["String"," of regex at "],["Identifier","$state{$regex_ID}{"],["String","location"],["Identifier","}"],["String","]}"],["","\n                      . "],["String","qq{         [step: "],["Identifier","$step"],["String","]}"],["","\n                    );\n                }\n            }\n        }\n\n        "],["Comment","# Next input (but use starting cmd if one given)..."],["","\n        "],["Identifier","$input"],[""," = _interact();\n\n        "],["Comment","# A <CTRL-C> terminates the process..."],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","\""],["Special","\\cC"],["String","\""],["",") {\n            "],["Statement","kill"],[""," "],["Number","9"],["",", "],["Identifier","$$"],["",";\n        }\n\n        "],["Comment","# An 'x' exits the process..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'x'"],["",") {\n            "],["Statement","exit"],["","("],["Number","0"],["",");\n        }\n\n        "],["Comment","# A <CTRL-L> redraws the screen..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","\""],["Special","\\cL"],["String","\""],["",") {\n            "],["Statement","next"],[""," STEP;\n        }\n\n        "],["Comment","# Step back (if possible)..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'-'"],["",") {\n            "],["Identifier","$step"],[""," = max("],["Number","0"],["",", "],["Identifier","$step"],["","-"],["Number","1"],["",");\n            "],["Statement","next"],[""," STEP;\n        }\n\n        "],["Comment","# Display explanation of regex..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'d'"],["",") {\n            _show_regex_description("],["Identifier","$regex_ID"],["",");\n            "],["Statement","next"],[""," STEP;\n        }\n\n        "],["Comment","# Help!"],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'?'"],["",") {\n            _show_help();\n            "],["Statement","next"],[""," STEP;\n        }\n\n        "],["Comment","# Swap to requested mode..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'v'"],["",") {\n            "],["Identifier","$display_mode"],[""," = "],["String","'visual'"],["",";\n            "],["Statement","next"],[""," STEP;\n        }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'h'"],["",") {\n            "],["Comment","# Can we use heatmap mode?"],["","\n            "],["Conditional","if"],[""," ("],["Identifier","$heatmaps_invisible"],["",") {\n                "],["Statement","say"],[""," "],["String","'Cannot show heatmaps (Term::ANSIColor unavailable)'"],["",";\n                "],["Statement","say"],[""," "],["String","\"Try 'H' instead\""],["",";\n                "],["Identifier","$input"],[""," = "],["String","'?'"],["",";\n            }\n            "],["Comment","# If heatmaps available, check for misuse of 'h' instead of '?'..."],["","\n            "],["Conditional","else"],[""," {\n                "],["Statement","my"],[""," "],["Identifier","$prompt_help"],[""," = "],["Identifier","$display_mode"],[""," "],["Operator","eq"],[""," "],["String","'heatmap'"],["",";\n                "],["Identifier","$display_mode"],[""," = "],["String","'heatmap'"],["",";\n                "],["Conditional","if"],[""," ("],["Identifier","$prompt_help"],["",") {\n                    "],["Statement","say"],[""," "],["String","\"(Type '?' for help)\""],["",";\n                }\n            }\n            "],["Statement","next"],[""," STEP;\n        }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'e'"],["",") {\n            "],["Identifier","$display_mode"],[""," = "],["String","'events'"],["",";\n            "],["Statement","say"],[""," _info_colourer(\n                "],["String","qq{"],["Special","\\n\\n"],["String","[Events of regex at "],["Identifier","$state{$regex_ID}{"],["String","location"],["Identifier","}"],["String","]}"],["","\n              . "],["String","qq{         [step: "],["Identifier","$step"],["String","]}"],["","\n            );\n            "],["Statement","next"],[""," STEP;\n        }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'j'"],["",") {\n            "],["Identifier","$display_mode"],[""," = "],["String","'JSON'"],["",";\n            "],["Statement","next"],[""," STEP;\n            "],["Statement","say"],[""," _info_colourer(\n                "],["String","qq{"],["Special","\\n\\n"],["String","[JSON data of regex at "],["Identifier","$state{$regex_ID}{"],["String","location"],["Identifier","}"],["String","]}"],["","\n              . "],["String","qq{         [step: "],["Identifier","$step"],["String","]}"],["","\n            );\n        }\n\n        "],["Comment","# Continue with actual matching..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'c'"],["",") {\n            "],["Repeat","while"],[""," ("],["Identifier","$step"],[""," < "],["Identifier","@{$history_of{$display_mode}}"],["",") {\n                _print "],["Identifier","$CLEAR_SCREEN"],["",";\n                _print "],["Identifier","$history_of{$display_mode}[$step"],["","++"],["Identifier","]{"],["String","display"],["Identifier","}"],["",";\n                _pause("],["Float","0.1"],["",");\n            }\n            "],["Statement","last"],[""," STEP;\n        }\n\n        "],["Comment","# Quit entirely..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'q'"],[""," || "],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","\""],["Special","\\cD"],["String","\""],["",") {\n            "],["Statement","last"],[""," STEP;\n        }\n\n        "],["Comment","# Take a snapshot..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'V'"],["",") { _save_snapshot("],["String","'full_visual'"],["",",  "],["Identifier","$step"],["",")     ; "],["Statement","next"],[""," STEP; }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'H'"],["",") { _save_snapshot("],["String","'full_heatmap'"],["",", "],["Identifier","$step"],["",")     ; "],["Statement","next"],[""," STEP; }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'E'"],["",") { _save_snapshot("],["String","'events'"],["",",       "],["Identifier","$step"],["",")     ; "],["Statement","next"],[""," STEP; }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'J'"],["",") { _save_snapshot("],["String","'JSON'"],["",",         "],["Identifier","$step"],["",")     ; "],["Statement","next"],[""," STEP; }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'D'"],["",") { _show_regex_description("],["Identifier","$regex_ID"],["",","],["String","'save'"],["",") ; "],["Statement","next"],[""," STEP; }\n\n        "],["Comment","# Step forward to match..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'m'"],["",") {\n            "],["Identifier","$step"],["","++;\n            "],["Repeat","while"],[""," (!"],["Identifier","$history_of{$display_mode}[$step]{"],["String","is_match"],["Identifier","}"],["",") {\n                "],["Statement","last"],[""," STEP "],["Conditional","if"],[""," "],["Identifier","$step"],[""," == "],["Identifier","@{$history_of{$display_mode}}"],["","-"],["Number","1"],["",";\n                "],["Identifier","$step"],["","++;\n            }\n        }\n\n        "],["Comment","# Step forward to fail..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'f'"],["",") {\n            "],["Identifier","$step"],["","++;\n            "],["Repeat","while"],[""," (!"],["Identifier","$history_of{$display_mode}[$step]{"],["String","is_fail"],["Identifier","}"],["",") {\n                "],["Statement","last"],[""," STEP "],["Conditional","if"],[""," "],["Identifier","$step"],[""," == "],["Identifier","@{$history_of{$display_mode}}"],["","-"],["Number","1"],["",";\n                "],["Identifier","$step"],["","++;\n            }\n        }\n        "],["Comment","# Otherwise just step forward..."],["","\n        "],["Conditional","else"],[""," {\n            "],["Identifier","$step"],["","++;\n        }\n    }\n\n    "],["Comment","# Return final command..."],["","\n    "],["Statement","return"],[""," ("],["Identifier","$input"],["",", "],["Identifier","$step"],["",");\n}\n\n"],["Keyword","sub "],["Function","_build_visualization "],["","{\n    "],["Comment","# Unpack all the info needed..."],["","\n    "],["Statement","my"],[""," ("],["Identifier","$data_mode"],["",", "],["Identifier","$named_args_ref"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," ("],["Identifier","$regex_ID"],["",", "],["Identifier","$regex_src"],["",", "],["Identifier","$regex_pos"],["",", "],["Identifier","$construct_len"],["",",\n        "],["Identifier","$str_src"],["",", "],["Identifier","$str_pos"],["",",\n        "],["Identifier","$is_match"],["",", "],["Identifier","$is_fail"],["",", "],["Identifier","$is_trying"],["",", "],["Identifier","$is_capture"],["",",\n        "],["Identifier","$backtrack"],["",", "],["Identifier","$forward_step"],["",", "],["Identifier","$nested_because"],["",",\n        "],["Identifier","$msg"],["",", "],["Identifier","$colourer"],["",", "],["Identifier","$no_window"],["",", "],["Identifier","$step"],["",")\n                = "],["Identifier","@{$named_args_ref}{"],["String","qw("],["","\n"],["String","                    regex_ID regex_src regex_pos construct_len"],["","\n"],["String","                    str_src str_pos"],["","\n"],["String","                    is_match is_fail is_trying is_capture"],["","\n"],["String","                    backtrack forward_step nested_because"],["","\n"],["String","                    msg colourer no_window step"],["","\n"],["String","                )"],["Identifier","}"],["",";\n\n    "],["Comment","# Clear screen..."],["","\n    _new_visualize("],["Identifier","$data_mode"],["",");\n    "],["Conditional","if"],[""," (!"],["Identifier","$no_window"],["",") {\n        _visualize "],["Identifier","$data_mode"],["",", "],["String","q{}"],[""," "],["Repeat","for"],[""," "],["Float","1."],["","."],["Identifier","$MAX_HEIGHT"],["",";\n    }\n\n    "],["Comment","# Remember originals..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$raw_str_src"],["","   = "],["Identifier","$str_src"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$raw_regex_src"],[""," = "],["Identifier","$regex_src"],["",";\n\n    "],["Comment","# Unwindowed displays show the title first..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$no_window"],["",") {\n        _visualize "],["Identifier","$data_mode"],["",",\n                _info_colourer(\n                    "],["String","qq{"],["Special","\\n"],["String","["],["Special","\\u"],["Identifier","$data_mode"],["String"," of regex at "],["Identifier","$state{$regex_ID}{"],["String","location"],["Identifier","}"],["String","]"],["Special","\\n\\n"],["String","}"],["","\n                  . "],["String","qq{         [step: "],["Identifier","$step"],["String","]}"],["","\n                );\n    }\n\n    "],["Comment","# Visualize capture vars, if available..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$max_name_width"],[""," = "],["Number","1"],[""," + max "],["Statement","map"],[""," "],["Statement","{length}"],[""," "],["Number","0"],["",", "],["Statement","keys"],[""," "],["Identifier","%capture"],["",";\n"],["Label","    CAPVAR:"],["","\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$name"],[""," ("],["Operator","do"],["","{ "],["Statement","no warnings"],[""," "],["String","'numeric'"],["","; "],["Statement","sort"],[""," "],["Statement","{"],[""," "],["Statement","substr"],["","("],["Identifier","$a"],["",","],["Number","1"],["",") <=> "],["Statement","substr"],["","("],["Identifier","$b"],["",","],["Number","1"],["",") "],["Statement","}"],[""," "],["Statement","keys"],[""," "],["Identifier","%capture"],["","}) {\n        "],["Comment","# Remove any captures that are invalidated by backtracking..."],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$capture{$name}{"],["String","start_pos"],["Identifier","}"],[""," > "],["Identifier","$regex_pos"],["",") {\n            "],["Statement","delete"],[""," "],["Identifier","@{$capture{$name}}{"],["String","'from'"],["",","],["String","'to'"],["Identifier","}"],["",";\n        }\n\n        "],["Comment","# Clean up and visualize each remaining variable..."],["","\n        "],["Statement","my"],[""," "],["Identifier","$start"],["","   = "],["Identifier","$capture{$name}{"],["String","from"],["Identifier","}"],[""," // "],["Statement","next"],[""," CAPVAR;\n        "],["Statement","my"],[""," "],["Identifier","$end"],["","     = "],["Identifier","$capture{$name}{"],["String","to"],["Identifier","}"],["","   // "],["Statement","next"],[""," CAPVAR;\n        "],["Statement","my"],[""," "],["Identifier","$cap_str"],[""," = _quote_ws("],["Statement","substr"],["","("],["Identifier","$_"],["",","],["Identifier","$start"],["",","],["Identifier","$end"],["","-"],["Identifier","$start"],["","));\n\n        "],["Comment","# Truncate captured value to maximum width by removing middle..."],["","\n        "],["Statement","my"],[""," "],["Identifier","$cap_len"],[""," = "],["Statement","length"],["","("],["Identifier","$cap_str"],["",");\n        "],["Conditional","if"],[""," ("],["Identifier","$cap_len"],[""," > "],["Identifier","$MAX_WIDTH"],["",") {\n            "],["Statement","my"],[""," "],["Identifier","$middle"],[""," = "],["Identifier","$MAX_WIDTH"],["","/"],["Number","2"],[""," - "],["Number","2"],["",";\n            "],["Statement","substr"],["","("],["Identifier","$cap_str"],["",", "],["Identifier","$middle"],["",", -"],["Identifier","$middle"],["",", "],["String","'....'"],["",");\n        }\n\n        "],["Comment","# Display capture var and value..."],["","\n        _visualize "],["Identifier","$data_mode"],["",",\n            _info_colourer("],["Statement","sprintf"],[""," "],["String","qq{%*s = '%s'}"],["",", "],["Identifier","$max_name_width"],["",", "],["Identifier","$name"],["",", "],["Identifier","$cap_str"],["",");\n    }\n\n    "],["Comment","# Visualize special var, if used in regex..."],["","\n    _visualize "],["Identifier","$data_mode"],["",", "],["String","q{}"],["",";\n    "],["Conditional","if"],[""," ("],["Statement","index"],["","("],["Identifier","$raw_regex_src"],["",", "],["String","'$^N'"],["",") >= "],["Number","0"],[""," && "],["Operator","defined"],[""," "],["Identifier","$^N"],["",") {\n        "],["Statement","my"],[""," "],["Identifier","$special_val"],[""," = "],["Identifier","$^N"],["",";\n\n        "],["Comment","# Truncate captured value to maximum width by removing middle..."],["","\n        "],["Statement","my"],[""," "],["Identifier","$cap_len"],[""," = "],["Statement","length"],["","("],["Identifier","$special_val"],["",");\n        "],["Conditional","if"],[""," ("],["Identifier","$cap_len"],[""," > "],["Identifier","$MAX_WIDTH"],["",") {\n            "],["Statement","my"],[""," "],["Identifier","$middle"],[""," = "],["Identifier","$MAX_WIDTH"],["","/"],["Number","2"],[""," - "],["Number","2"],["",";\n            "],["Statement","substr"],["","("],["Identifier","$special_val"],["",", "],["Identifier","$middle"],["",", -"],["Identifier","$middle"],["",", "],["String","'....'"],["",");\n        }\n\n        "],["Comment","# Display capture var and value..."],["","\n        _visualize "],["Identifier","$data_mode"],["",",\n            _info_colourer("],["Statement","sprintf"],[""," "],["String","qq{%*s = '%s'}"],["",", "],["Identifier","$max_name_width"],["",", "],["String","'$^N'"],["",", "],["Identifier","$special_val"],["",");\n    }\n\n    "],["Comment","# Leave a gap..."],["","\n    _visualize "],["Identifier","$data_mode"],["",", "],["String","q{}"],[""," "],["Repeat","for"],[""," "],["Float","1..2"],["",";\n\n    "],["Comment","# Show matching..."],["","\n    _visualize_matchfail "],["Identifier","$data_mode"],["",", "],["Identifier","$is_match"],["",", "],["Identifier","$is_fail"],["",";\n\n    "],["Comment","# Reconfigure regex within visible window..."],["","\n    ("],["Identifier","$regex_src"],["",", "],["Identifier","$regex_pos"],["",")\n        = _make_window(\n                 "],["String","text"],[""," => "],["Identifier","$regex_src"],["",",\n                  "],["String","pos"],[""," => "],["Identifier","$regex_pos"],["",",\n                 "],["String","heat"],[""," => "],["Statement","substr"],["","("],["Identifier","$data_mode"],["",", -"],["Number","7"],["",") "],["Operator","eq"],[""," "],["String","'heatmap'"],[""," ?  "],["Identifier","$history_of{"],["String","match_heatmap"],["Identifier","}"],[""," : [],\n            "],["String","ws_colour"],[""," => "],["Statement","substr"],["","("],["Identifier","$data_mode"],["",", -"],["Number","7"],["",") "],["Operator","eq"],[""," "],["String","'heatmap'"],["",",\n            "],["String","no_window"],[""," => "],["Identifier","$no_window"],["",",\n        );\n\n    "],["Comment","# How wide is the display???"],["","\n    "],["Statement","my"],[""," "],["Identifier","$display_width"],["","\n        = "],["Identifier","$no_window"],[""," ? "],["Identifier","$regex_pos"],["","\n        :              min("],["Identifier","$regex_pos"],["",", "],["Identifier","$MAX_WIDTH"],[""," - "],["Statement","length"],["","("],["Identifier","$msg"],["","));\n\n    "],["Comment","# Draw the regex with a message and a positional marker..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$data_mode"],[""," "],["Operator","ne"],[""," "],["String","'full_heatmap'"],["",") {\n        _visualize "],["Identifier","$data_mode"],["",", "],["String","q{ }"],["",", "],["String","q{ }"],[""," x "],["Identifier","$display_width"],["",", "],["Identifier","$colourer"],["","->("],["Identifier","$msg"],["",");\n        _visualize "],["Identifier","$data_mode"],["",", "],["String","q{ }"],["",", "],["String","q{ }"],[""," x "],["Identifier","$regex_pos"],["","    , "],["Identifier","$colourer"],["","->("],["String","'|'"],["",");\n        _visualize "],["Identifier","$data_mode"],["",", "],["String","q{ }"],["",", "],["String","q{ }"],[""," x "],["Identifier","$regex_pos"],["","    , "],["Identifier","$colourer"],["","->("],["String","'V'"],["",") x ("],["Identifier","$construct_len"],[""," || "],["Number","1"],["",");\n    }\n    "],["Conditional","else"],[""," {\n        _visualize "],["Identifier","$data_mode"],["",", "],["String","q{ }"],["",", "],["String","q{ }"],[""," x "],["Identifier","$regex_pos"],[""," , _info_colourer("],["String","'|'"],["",");\n        _visualize "],["Identifier","$data_mode"],["",", "],["String","q{ }"],["",", "],["String","q{ }"],[""," x "],["Identifier","$regex_pos"],[""," , _info_colourer("],["String","'V'"],[""," x ("],["Identifier","$construct_len"],[""," || "],["Number","1"],["",") );\n    }\n\n    "],["Comment","# Draw regex itself..."],["","\n    _visualize "],["Identifier","$data_mode"],["",", "],["String","q{/}"],["",", "],["Identifier","$regex_src"],["",", "],["String","q{/}"],["",";\n\n    "],["Comment","# Leave a gap..."],["","\n    _visualize "],["Identifier","$data_mode"],["",", "],["String","q{ }"],[""," "],["Repeat","for"],[""," "],["Float","1..2"],["",";\n\n    "],["Comment","# Create marker for any match or capture within string..."],["","\n    "],["Identifier","$forward_step"],[""," = min("],["Identifier","$forward_step"],["",", "],["Identifier","$MAX_WIDTH"],["",");\n    "],["Statement","my"],[""," "],["Identifier","$last_match_marker"],["","\n        = ("],["String","q{ }"],[""," x ("],["Identifier","$str_pos"],[""," - max("],["Number","0"],["",","],["Identifier","$forward_step"],["",")))\n        . ( "],["Identifier","$nested_because"],[""," "],["Operator","eq"],[""," "],["String","'failed'"],["","       ? "],["String","q{}"],["","\n          : "],["Identifier","$is_capture"],[""," && "],["Identifier","$forward_step"],[""," == "],["Number","1"],[""," ? "],["String","'V'"],["","\n          : "],["Identifier","$is_capture"],[""," && "],["Identifier","$forward_step"],[""," > "],["Number","1"],["","  ? "],["String","'"],["Special","\\\\"],["String","'"],[""," . ("],["String","'_'"],[""," x ("],["Identifier","$forward_step"],["","-"],["Number","2"],["",")) . "],["String","'/'"],["","\n          :                                      "],["String","'^'"],[""," x "],["Identifier","$forward_step"],["","\n          )\n        ;\n\n\n    "],["Comment","# Reconfigure string within visible window..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$match_start"],["",";\n    ("],["Identifier","$str_src"],["",", "],["Identifier","$str_pos"],["",", "],["Identifier","$match_start"],["",", "],["Identifier","$last_match_marker"],["",")\n        = _make_window(\n                 "],["String","text"],[""," => "],["Identifier","$str_src"],["",",\n                  "],["String","pos"],[""," => "],["Identifier","$str_pos"],["",",\n                "],["String","start"],[""," => "],["Identifier","$"],["Type","Regexp::Grammars::"],["Identifier","match_start_pos"],["",",\n                 "],["String","heat"],[""," => "],["Statement","substr"],["","("],["Identifier","$data_mode"],["",", -"],["Number","7"],["",") "],["Operator","eq"],[""," "],["String","'heatmap'"],[""," ?  "],["Identifier","$history_of{"],["String","string_heatmap"],["Identifier","}"],[""," : [],\n            "],["String","ws_colour"],[""," => "],["Statement","substr"],["","("],["Identifier","$data_mode"],["",", -"],["Number","7"],["",") "],["Operator","eq"],[""," "],["String","'heatmap'"],["",",\n               "],["String","marker"],[""," => "],["Identifier","$last_match_marker"],["",",\n            "],["String","no_window"],[""," => "],["Identifier","$no_window"],["",",\n          );\n\n    "],["Comment","# Trim match start position..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$match_start"],[""," > "],["Identifier","$str_pos"],["",") {\n        "],["Identifier","$match_start"],[""," = "],["Identifier","$str_pos"],["",";\n    }\n\n    "],["Comment","# Colour match marker..."],["","\n    "],["Identifier","$last_match_marker"],["","\n        = "],["Statement","substr"],["","("],["Identifier","$last_match_marker"],["",","],["Number","0"],["",","],["Number","1"],["",") "],["Operator","eq"],[""," "],["String","'^'"],[""," ? _match_colourer("],["Identifier","$last_match_marker"],["",", "],["String","'reverse'"],["",")\n        :                                         _info_colourer("],["Identifier","$last_match_marker"],["",");\n\n    "],["Comment","# Draw the string with a positional marker..."],["","\n    _visualize "],["Identifier","$data_mode"],["",",\n        "],["String","q{ }"],["",", _info_colourer( "],["Statement","substr"],["","("],["String","q{ }"],[""," x "],["Identifier","$str_pos"],[""," . "],["String","'|'"],[""," .  "],["Identifier","$backtrack"],["",", "],["Number","0"],["",", "],["Identifier","$MAX_WIDTH"],["","-"],["Number","2"],["",") );\n    _visualize "],["Identifier","$data_mode"],["",",\n        "],["String","q{ }"],["",", "],["String","q{ }"],[""," x "],["Identifier","$match_start"],["",", _match_colourer("],["Identifier","$MATCH_DRAG"],[""," x ("],["Identifier","$str_pos"],["","-"],["Identifier","$match_start"],["",")), _info_colourer("],["String","'V'"],["",");\n    "],["Identifier","$str_src"],[""," = "],["Comment","# Heatmap is already coloured..."],["","\n               "],["Statement","substr"],["","("],["Identifier","$data_mode"],["",", -"],["Number","7"],["",") "],["Operator","eq"],[""," "],["String","'heatmap'"],[""," ?\n                    "],["Identifier","$str_src"],["","\n\n               "],["Comment","# On failure, fail-colour to current position..."],["","\n             : "],["Identifier","$nested_because"],[""," "],["Operator","eq"],[""," "],["String","'failed'"],[""," ?\n                    _fail_colourer( "],["Statement","substr"],["","("],["Identifier","$str_src"],["",", "],["Number","0"],["",", "],["Identifier","$str_pos"],["","), "],["String","'ws'"],[""," )\n                  . _ws_colourer(   "],["Statement","substr"],["","("],["Identifier","$str_src"],["",", "],["Identifier","$str_pos"],["",")          )\n\n               "],["Comment","# When trying, try-colour current position"],["","\n             : "],["Identifier","$is_trying"],[""," ?\n                    _fail_colourer(  "],["Statement","substr"],["","("],["Identifier","$str_src"],["",", "],["Number","0"],["",", "],["Identifier","$match_start"],["","),                                  "],["String","'ws'"],[""," )\n                  . _match_colourer( "],["Statement","substr"],["","("],["Identifier","$str_src"],["",", "],["Identifier","$match_start"],["",", "],["Identifier","$str_pos"],["","-"],["Identifier","$match_start"],["","), "],["String","'underline'"],["",", "],["String","'ws'"],[""," )\n                  . _try_colourer(   "],["Statement","substr"],["","("],["Identifier","$str_src"],["",", "],["Identifier","$str_pos"],["",", "],["Number","1"],["","), "],["String","'underline bold'"],["",",                    "],["String","'ws'"],[""," )\n                  . _ws_colourer(    "],["Statement","substr"],["","("],["Identifier","$str_src"],["",", min("],["Statement","length"],["","("],["Identifier","$str_src"],["","),"],["Identifier","$str_pos"],["","+"],["Number","1"],["","))                       )\n\n             : "],["Comment","# Otherwise, report pre-failure and current match..."],["","\n                    _fail_colourer(  "],["Statement","substr"],["","("],["Identifier","$str_src"],["",", "],["Number","0"],["",", "],["Identifier","$match_start"],["","),                                  "],["String","'ws'"],[""," )\n                  . _match_colourer( "],["Statement","substr"],["","("],["Identifier","$str_src"],["",", "],["Identifier","$match_start"],["",", "],["Identifier","$str_pos"],["","-"],["Identifier","$match_start"],["","), "],["String","'underline'"],["",", "],["String","'ws'"],[""," )\n                  . _ws_colourer(    "],["Statement","substr"],["","("],["Identifier","$str_src"],["",", "],["Identifier","$str_pos"],["",")                                               );\n\n    _visualize "],["Identifier","$data_mode"],["",", "],["String","q{'}"],["",", "],["Identifier","$str_src"],["",", "],["String","q{'}"],["",";  "],["Comment","# String itself"],["","\n\n    "],["Comment","# Draw a marker for any match or capture within the string..."],["","\n    _visualize "],["Identifier","$data_mode"],["",", "],["String","q{ }"],["",", "],["Identifier","$last_match_marker"],["",";\n\n    "],["Comment","# Windowed displays show the title last..."],["","\n    "],["Conditional","if"],[""," (!"],["Identifier","$no_window"],["",") {\n        _visualize "],["Identifier","$data_mode"],["",",\n                _info_colourer(\n                    "],["String","qq{"],["Special","\\n"],["String","["],["Special","\\u"],["Identifier","$data_mode"],["String"," of regex at "],["Identifier","$state{$regex_ID}{"],["String","location"],["Identifier","}"],["String","]}"],["","\n                  . "],["String","qq{         [step: "],["Identifier","$step"],["String","]}"],["","\n                );\n    }\n\n    "],["Comment","# Special case: full heatmaps are reported as a table too..."],["","\n    "],["Conditional","if"],[""," ( "],["Identifier","$data_mode"],[""," "],["Operator","eq"],[""," "],["String","'full_heatmap'"],[""," ) {\n        "],["Comment","# Tabulate regex..."],["","\n        _visualize "],["Identifier","$data_mode"],["",", _info_colourer("],["String","\""],["Special","\\n\\n"],["String","Heatmap for regex:"],["Special","\\n"],["String","\""],["",");\n        _visualize "],["Identifier","$data_mode"],["",", _build_tabulated_heatmap("],["Identifier","$raw_regex_src"],["",", "],["Identifier","$history_of{"],["String","match_heatmap"],["Identifier","}"],["",");\n\n        "],["Comment","# Tabulate string..."],["","\n        _visualize "],["Identifier","$data_mode"],["",", _info_colourer("],["String","\""],["Special","\\n\\n"],["String","Heatmap for string:"],["Special","\\n"],["String","\""],["",");\n        _visualize "],["Identifier","$data_mode"],["",", _build_tabulated_heatmap("],["Identifier","$raw_str_src"],["",", "],["Identifier","$history_of{"],["String","string_heatmap"],["Identifier","}"],["",");\n    }\n}\n\n"],["Comment","# Convert a heatmapped string to a table..."],["","\n"],["Statement","my"],[""," "],["Identifier","$TABLE_STR_WIDTH"],[""," = "],["Number","15"],["",";\n"],["Keyword","sub "],["Function","_build_tabulated_heatmap "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$str"],["",", "],["Identifier","$heatmap_ref"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Comment","# Normalized data..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$max_heat"],[""," = max("],["Number","1"],["",", "],["Statement","map"],[""," "],["Statement","{"],[""," "],["Identifier","$_"],[""," // "],["Number","0"],[""," "],["Statement","}"],[""," "],["Identifier","@{$heatmap_ref}"],["",");\n    "],["Statement","my"],[""," "],["Identifier","@heat"],[""," = "],["Statement","map"],[""," "],["Statement","{"],[""," ("],["Identifier","$_"],["","//"],["Number","0"],["",") / "],["Identifier","$max_heat"],[""," "],["Statement","}"],[""," "],["Identifier","@{$heatmap_ref}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$count_size"],[""," = "],["Statement","length"],["","("],["Identifier","$max_heat"],["",");\n\n    "],["Comment","# Determine colours to be used..."],["","\n    "],["Statement","my"],[""," "],["Identifier","@HEAT_COLOUR"],[""," = "],["Identifier","@{$lexical_config->{"],["String","heatmap_col"],["Identifier","}}"],["",";\n\n    "],["Comment","# Accumulate graph"],["","\n    "],["Statement","my"],[""," "],["Identifier","@graph"],["",";\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$index"],[""," ("],["Float","0."],["","."],["Statement","length"],["","("],["Identifier","$str"],["",")-"],["Number","1"],["",") {\n\n        "],["Comment","# Locate next char and its heat value..."],["","\n        "],["Statement","my"],[""," "],["Identifier","$char"],[""," = "],["Statement","substr"],["","("],["Identifier","$str"],["",", "],["Identifier","$index"],["",", "],["Number","1"],["",");\n        "],["Statement","my"],[""," "],["Identifier","$abs_heat"],[""," = "],["Identifier","$heatmap_ref->[$index]"],[""," // "],["Number","0"],["",";\n        "],["Statement","my"],[""," "],["Identifier","$display_char"],[""," = "],["Identifier","$char"],[""," "],["Operator","eq"],[""," "],["String","\""],["Special","\\n"],["String","\""],[""," ? "],["String","'\\n'"],["","\n                         : "],["Identifier","$char"],[""," "],["Operator","eq"],[""," "],["String","\""],["Special","\\t"],["String","\""],[""," ? "],["String","'\\t'"],["","\n                         :                 "],["Identifier","$char"],["",";\n\n        "],["Comment","# Graph it..."],["","\n        "],["Conditional","if"],[""," ("],["Identifier","@graph"],[""," && "],["Statement","length"],["","("],["Identifier","$graph["],["","-"],["Number","1"],["Identifier","]{"],["String","text"],["Identifier","}"],[""," . "],["Identifier","$display_char"],["",") < "],["Identifier","$TABLE_STR_WIDTH"],[""," && "],["Identifier","$graph["],["","-"],["Number","1"],["Identifier","]{"],["String","heat"],["Identifier","}"],[""," == "],["Identifier","$abs_heat"],["",") {\n            "],["Identifier","$graph["],["","-"],["Number","1"],["Identifier","]{"],["String","text"],["Identifier","}"],[""," .= "],["Identifier","$display_char"],["",";\n        }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$char"],[""," "],["Operator","ne"],[""," "],["String","q{ }"],[""," || "],["Identifier","$abs_heat"],[""," != "],["Number","0"],["",") {\n            "],["Statement","my"],[""," "],["Identifier","$rel_heat"],[""," = "],["Identifier","$heat[$index]"],[""," // "],["Number","0"],["",";\n            "],["Statement","push"],[""," "],["Identifier","@graph"],["",", {\n                    "],["String","text"],[""," => "],["Identifier","$display_char"],["",",\n                    "],["String","heat"],[""," => "],["Identifier","$abs_heat"],["",",\n                "],["String","rel_heat"],[""," => "],["Identifier","$rel_heat"],["",",\n                     "],["String","bar"],[""," => "],["String","q{*}"],[""," x (("],["Identifier","$MAX_WIDTH"],["","-"],["Identifier","$TABLE_STR_WIDTH"],["",") * "],["Identifier","$rel_heat"],["","),\n            };\n        }\n    }\n\n    "],["Comment","# Draw table..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$table"],["",";\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$entry"],[""," ("],["Identifier","@graph"],["",") {\n        "],["Statement","my"],[""," "],["Identifier","$colour_index"],[""," = "],["Statement","int"],["","( "],["Float","0.5"],[""," + "],["Identifier","$#HEAT_COLOUR"],[""," * "],["Identifier","$entry->{"],["String","rel_heat"],["Identifier","}"],[""," );\n        "],["Identifier","$table"],[""," .=\n            "],["String","q{    }"],[""," .\n            Term::ANSIColor::colored(\n                "],["Statement","substr"],["","("],["Identifier","$entry->{"],["String","text"],["Identifier","}"],[""," . "],["String","q{ }"],[""," x "],["Identifier","$TABLE_STR_WIDTH"],["",", "],["Number","0"],["",", "],["Identifier","$TABLE_STR_WIDTH"],["",") .\n                "],["Statement","sprintf"],["","("],["String","\"| %-*s |%s"],["Special","\\n"],["String","\""],["",", "],["Identifier","$count_size"],["",", "],["Identifier","$entry->{"],["String","heat"],["Identifier","}"],[""," || "],["String","q{ }"],["",", "],["Identifier","$entry->{"],["String","bar"],["Identifier","}"],["","),\n                "],["Identifier","$HEAT_COLOUR[$colour_index]"],["","\n            );\n    }\n\n    "],["Statement","return"],[""," "],["Identifier","$table"],["",";\n}\n\n"],["Comment","# These need to be localized within regexes, so have to be package vars..."],["","\n"],["Statement","our"],["","   "],["Identifier","$subpattern_depth"],["","; "],["Comment","# ...how many levels down in named subpatterns?"],["","\n\n"],["Comment","# Reset debugger variables at start of match..."],["","\n"],["Keyword","sub "],["Function","_reset_debugger_state "],["","{\n    "],["Identifier","$prev_regex_pos"],["","   = "],["Number","0"],["",";     "],["Comment","# ...start of regex"],["","\n    "],["Identifier","$prev_str_pos"],["","     = "],["Number","0"],["",";     "],["Comment","# ...start of string"],["","\n    "],["Identifier","$pre_is_pending"],["","   = "],["Operator","undef"],["","; "],["Comment","# ...no try is pending"],["","\n    "],["Identifier","$interaction_mode"],[""," = "],["String","'s'"],["",";   "],["Comment","# ...always start in step-by-step mode"],["","\n    "],["Identifier","$interaction_quit"],[""," = "],["Number","0"],["",";     "],["Comment","# ...reset quit command for each regex"],["","\n    "],["Identifier","$subpattern_depth"],[""," = "],["Number","0"],["",";     "],["Comment","# ...start at top level of named subcalls"],["","\n\n    "],["Identifier","$"],["Type","Regexp::Grammars::"],["Identifier","match_start_pos"],["","  = "],["Number","0"],["",";     "],["Comment","# ...start matching at start of string"],["","\n\n    "],["Comment","# Also leave a gap in the event history and JSON representations..."],["","\n    _show_event "],["Identifier","$lexical_config->{"],["String","display_mode"],["Identifier","}"],["",", "],["String","q{}"],["",";\n    _show_JSON  "],["Identifier","$lexical_config->{"],["String","display_mode"],["Identifier","}"],["",", "],["String","q{}"],["",";\n}\n\n\n"],["Comment","# Set up a JSON encoder..."],["","\n"],["Statement","my"],[""," ("],["Identifier","$JSON_encoder"],["",", "],["Identifier","$JSON_decoder"],["",");\n"],["PreProc","BEGIN "],["","{\n    ("],["Identifier","$JSON_encoder"],["",", "],["Identifier","$JSON_decoder"],["",") =\n        "],["Statement","eval"],["","{ "],["Statement","require"],[""," JSON::XS;   } ? "],["Operator","do"],[""," {\n                                         "],["Statement","my"],[""," "],["Identifier","$json"],[""," = JSON::XS->new->utf8("],["Number","1"],["",")->pretty("],["Number","1"],["",");\n                                         (\n                                             "],["Keyword","sub "],["","{ "],["Statement","return"],[""," "],["Identifier","$json"],["","->encode("],["Statement","shift"],["",") },\n                                             "],["Keyword","sub "],["","{ "],["Statement","return"],[""," "],["Identifier","$json"],["","->decode("],["Statement","shift"],["",") },\n                                         )\n                                      }\n      : "],["Statement","eval"],["","{ "],["Statement","require"],[""," JSON;       } ? "],["Operator","do"],[""," {\n                                         "],["Statement","my"],[""," "],["Identifier","$json"],[""," = JSON->new->pretty("],["Number","1"],["",");\n                                         (\n                                             "],["Keyword","sub "],["","{ "],["Statement","return"],[""," "],["Identifier","$json"],["","->encode("],["Statement","shift"],["",") },\n                                             "],["Keyword","sub "],["","{ "],["Statement","return"],[""," "],["Identifier","$json"],["","->decode("],["Statement","shift"],["",") },\n                                         )\n                                      }\n      : "],["Statement","eval"],["","{ "],["Statement","require"],[""," "],["Float","5.014"],["",";\n              "],["Statement","require"],[""," JSON::DWIW; } ? (\n                                         "],["Keyword","sub "],["","{ JSON::DWIW->to_json("],["Statement","shift"],["",",   {"],["String","pretty"],["","=>"],["Number","1"],["","}) },\n                                         "],["Keyword","sub "],["","{ JSON::DWIW->from_json("],["Statement","shift"],["",", {"],["String","pretty"],["","=>"],["Number","1"],["","}) },\n                                      )\n      : "],["Statement","eval"],["","{ "],["Statement","require"],[""," JSON::Syck; } ? (\n                                         \\"],["Identifier","&"],["Type","JSON::Syck::"],["Identifier","Dump"],["",",\n                                         \\"],["Identifier","&"],["Type","JSON::Syck::"],["Identifier","Load"],["",",\n                                      )\n      :                               (\n                                        "],["Keyword","sub "],["","{ "],["String","'{}'"],[""," },\n                                        "],["Keyword","sub "],["","{  {}  },\n                                      );\n}\n\n"],["Comment","# Report some activity within the regex match..."],["","\n"],["Keyword","sub "],["Function","_report_event "],["","{\n    "],["Comment","# Did the user quit the interactive debugger???"],["","\n    "],["Statement","return"],[""," "],["Conditional","if"],[""," "],["Identifier","$interaction_quit"],["",";\n\n    "],["Comment","# What are we matching...."],["","\n    "],["Statement","my"],[""," "],["Identifier","$str_src"],[""," = "],["Identifier","$_"],["",";\n\n    "],["Comment","# Which regex? Which event? Where in the string? Is this a recursive call?"],["","\n    "],["Statement","my"],[""," ("],["Identifier","$regex_ID"],["",", "],["Identifier","$event_ID"],["",", "],["Identifier","$str_pos"],["",", "],["Identifier","%opt"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$nested_because"],["","  = "],["Identifier","$opt{"],["String","nested_because"],["Identifier","}"],[""," // "],["String","q{}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$non_interactive"],[""," = "],["Identifier","$opt{"],["String","non_iteractive"],["Identifier","}"],["",";\n\n    "],["Comment","# Locate state info for this event..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$state_ref"],[""," = "],["Identifier","$state{$regex_ID}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$event_ref"],[""," = "],["Identifier","$state_ref->{$event_ID}"],["",";\n\n    "],["Comment","# Unpack the necessary info..."],["","\n    "],["Statement","my"],[""," ("],["Identifier","$matchable"],["",", "],["Identifier","$is_capture"],["",", "],["Identifier","$event_type"],["",", "],["Identifier","$construct"],["",")\n        = "],["Identifier","@{$event_ref}{"],["String","qw< matchable is_capture event_type construct>"],["Identifier","}"],["",";\n    "],["Statement","my"],[""," ("],["Identifier","$construct_type"],["",", "],["Identifier","$quantifier"],["",", "],["Identifier","$regex_pos"],["",", "],["Identifier","$capture_name"],["",", "],["Identifier","$msg"],["",")\n        = "],["Identifier","@{$event_ref}{"],["String","qw< construct_type quantifier regex_pos capture_name msg>"],["Identifier","}"],["",";\n    "],["Identifier","$construct_type"],[""," //= "],["String","q{}"],["",";\n\n    "],["Comment","# Reset display_mode, capture variables, and starting position on every restart..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$construct_type"],[""," "],["Operator","eq"],[""," "],["String","'_START'"],["",") {\n        "],["Identifier","%capture"],[""," = ();\n        "],["Identifier","$"],["Type","Regexp::Grammars::"],["Identifier","match_start_pos"],[""," = "],["Statement","pos"],["","();\n        "],["Identifier","$lexical_config"],[""," = "],["Identifier","$config[$event_ref->{"],["String","lexical_scope"],["Identifier","}]"],["",";\n\n        "],["Comment","# Reset display mode only on start (i.e. not on restart)..."],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$str_pos"],[""," == "],["Number","0"],["",") {\n            "],["Identifier","$display_mode"],[""," = "],["Identifier","$lexical_config->{"],["String","display_mode"],["Identifier","}"],["",";\n        }\n    }\n\n    "],["Comment","# Ignore final failure messages, except at the very end..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$event_ref->{"],["String","regex_failed"],["Identifier","}"],["",") {\n        "],["Statement","return"],[""," "],["Conditional","if"],[""," ("],["Identifier","$str_pos"],["","//"],["Number","0"],["",") < "],["Statement","length"],["","("],["Identifier","$str_src"],["",");\n    }\n\n    "],["Comment","# This variable allows us to query the start position of a submatch when at the end of the submatch..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$shared_str_pos_ref"],[""," = "],["Identifier","$event_ref->{"],["String","shared_str_pos"],["Identifier","}"],["",";\n\n    "],["Comment","# Use the shared string pos on failure..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$nested_because"],[""," "],["Operator","eq"],[""," "],["String","'failed'"],["",") {\n        "],["Identifier","$str_pos"],[""," = "],["Identifier","${$shared_str_pos_ref"],[""," // \\"],["Identifier","$prev_str_pos}"],[""," // "],["Identifier","$str_pos"],["",";\n    }\n\n    "],["Comment","# Flatten aliased capture name(s)..."],["","\n    "],["Conditional","if"],[""," ("],["Operator","ref"],[""," "],["Identifier","$capture_name"],["",") {\n        "],["Identifier","$capture_name"],[""," = "],["Statement","join"],[""," "],["String","' and '"],["",", "],["Identifier","@{$capture_name}"],["","\n    }\n\n    "],["Comment","# If we've matched, what did we match???"],["","\n    "],["Statement","my"],[""," "],["Identifier","$forward_step"],[""," = "],["Number","0"],["","; "],["Comment","# ... will eventually contain how far forward we stepped"],["","\n    "],["Conditional","if"],[""," (("],["Identifier","$matchable"],[""," || "],["Identifier","$is_capture"],["",") && "],["Identifier","$event_type"],[""," "],["Operator","eq"],[""," "],["String","'post'"],[""," && "],["Identifier","$construct"],[""," "],["Operator","ne"],[""," "],["String","'|'"],["",") {\n        "],["Identifier","$forward_step"],[""," = "],["Identifier","$str_pos"],[""," - ("],["Identifier","$shared_str_pos_ref"],[""," ? "],["Identifier","${$shared_str_pos_ref}"],[""," : "],["Identifier","$str_pos"],["",");\n    }\n\n    "],["Statement","my"],[""," "],["Identifier","$backtrack"],[""," = "],["String","q{}"],["",";        "],["Comment","# ...will store the arrow demonstrating the backtracking"],["","\n\n    "],["Comment","# Are we backtracking?"],["","\n    "],["Statement","my"],[""," "],["Identifier","$str_backtrack_len"],["","   = min("],["Identifier","$EVENT_COL_WIDTH"],["","-"],["Number","1"],["",", "],["Identifier","$prev_str_pos"],["","-"],["Identifier","$str_pos"],["",");\n    "],["Statement","my"],[""," "],["Identifier","$regex_backtrack_len"],[""," = min("],["Identifier","$EVENT_COL_WIDTH"],["","-"],["Number","1"],["",", "],["Identifier","$prev_regex_pos"],["","-"],["Identifier","$regex_pos"],["",");\n    "],["Statement","my"],[""," "],["Identifier","$event_str"],["","           = "],["String","'<'"],[""," . "],["String","'~'"],[""," x "],["Identifier","$str_backtrack_len"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$event_regex"],["","         = "],["String","'<'"],[""," . "],["String","'~'"],[""," x "],["Identifier","$regex_backtrack_len"],["",";\n    "],["Conditional","if"],[""," ("],["Identifier","$nested_because"],[""," "],["Operator","ne"],[""," "],["String","'failed'"],["",") {\n        "],["Comment","# Generate backtracking arrow..."],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$str_pos"],[""," < ("],["Identifier","$prev_str_pos"],["","//"],["Number","0"],["",")) {\n            "],["Identifier","$backtrack"],[""," = "],["String","'<'"],[""," . "],["String","'~'"],[""," x ("],["Identifier","$prev_str_pos"],["","-"],["Identifier","$str_pos"],["","-"],["Number","1"],["",");\n        }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$regex_pos"],[""," < ("],["Identifier","$prev_regex_pos"],["","//"],["Number","0"],["",")) {\n            "],["Identifier","$backtrack"],[""," = "],["String","' '"],["",";\n        }\n\n        "],["Comment","# Remember where we were..."],["","\n        "],["Identifier","$prev_str_pos"],["","   = "],["Identifier","$str_pos"],["",";\n        "],["Identifier","$prev_regex_pos"],[""," = "],["Identifier","$regex_pos"],["",";\n    }\n\n    "],["Comment","# Was there a failed pending attempt???"],["","\n    "],["Statement","my"],[""," "],["Identifier","$pending_event_ID"],[""," = "],["Identifier","$pre_is_pending"],["",";\n    "],["Identifier","$pre_is_pending"],[""," = "],["Operator","undef"],["",";\n    "],["Conditional","if"],[""," (("],["Identifier","$event_type"],[""," "],["Operator","ne"],[""," "],["String","'post'"],[""," || "],["Identifier","$backtrack"],["",") && "],["Operator","defined"],[""," "],["Identifier","$pending_event_ID"],["",") {\n        _report_event("],["Identifier","$regex_ID"],["",", "],["Identifier","$pending_event_ID"],["",", "],["Operator","undef"],["",", "],["String","nested_because"],["","=>"],["String","'failed'"],["",");\n    }\n\n    "],["Comment","# Get the source code of the regex..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$regex_src"],[""," = "],["Identifier","$state_ref->{"],["String","regex_src"],["Identifier","}"],["",";\n\n    "],["Comment","# How long is this piece of the regex???"],["","\n    "],["Statement","my"],[""," "],["Identifier","$construct_len"],[""," = "],["Statement","length"],[""," "],["Identifier","$construct"],["",";\n\n    "],["Comment","# Build msg if it's dynamic..."],["","\n    "],["Conditional","if"],[""," ("],["Operator","ref"],["","("],["Identifier","$msg"],["",") "],["Operator","eq"],[""," "],["String","'CODE'"],["",") {\n        "],["Identifier","$msg"],[""," = "],["Identifier","$msg"],["","->();\n    }\n\n    "],["Comment","# Construct status message (if necessary)..."],["","\n    "],["Identifier","$msg"],[""," = "],["Identifier","$nested_because"],[""," "],["Operator","eq"],[""," "],["String","'failed'"],["","        ?  "],["String","q{Failed}"],["","\n         : "],["Identifier","$event_type"],[""," "],["Operator","eq"],[""," "],["String","'pre'"],["","  && "],["Operator","ref"],[""," "],["Identifier","$msg"],["","  ?  "],["String","'Capture to '"],[""," . "],["Statement","join"],[""," "],["String","' and '"],["",", "],["Identifier","@{$msg}"],["","\n         : "],["Identifier","$event_type"],[""," "],["Operator","eq"],[""," "],["String","'post'"],[""," && "],["Operator","ref"],[""," "],["Identifier","$msg"],["","  ?  "],["String","'End of '"],[""," . "],["Statement","join"],[""," "],["String","' and '"],["",", "],["Identifier","@{$msg}"],["","\n         : "],["Operator","defined"],[""," "],["Identifier","$msg"],["","                       ?  "],["Identifier","$msg"],["","\n         : "],["Identifier","$construct_type"],[""," "],["Operator","eq"],[""," "],["String","'_START'"],["","        ?  "],["String","q{Starting regex match}"],["","\n         :                                       "],["String","q{}"],["","\n         ;\n\n    "],["Comment","# Report back-tracking occurred (but not when returning from named subpatterns)..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$backtrack"],[""," && "],["Identifier","$event_type"],[""," "],["Operator","eq"],[""," "],["String","'failed_nonbacktracking'"],["",") {\n        "],["Identifier","$msg"],[""," = "],["String","q{Back-tracking past }"],[""," . "],["Statement","lc"],["","("],["Identifier","$msg"],["",") . "],["String","q{ without rematching}"],["",";\n    }\n    "],["Conditional","elsif"],[""," ("],["Identifier","$backtrack"],[""," && "],["Identifier","$construct_type"],[""," "],["Operator","ne"],[""," "],["String","'_named_subpattern_call'"],["",") {\n        "],["Identifier","$msg"],[""," = "],["String","q{Back-tracked within regex and re}"],[""," . "],["Statement","lc"],["","("],["Identifier","$msg"],["",");\n    }\n\n    "],["Comment","# Track trying and matching..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$is_match"],["","    = "],["Statement","index"],["","("],["Identifier","$msg"],["",", "],["String","'matched'"],["",")   >= "],["Number","0"],[""," || "],["Statement","index"],["","("],["Identifier","$msg"],["",", "],["String","'Matched'"],["",")   >= "],["Number","0"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$is_rematch"],["","  = "],["Statement","index"],["","("],["Identifier","$msg"],["",", "],["String","'rematched'"],["",") >= "],["Number","0"],[""," || "],["Statement","index"],["","("],["Identifier","$msg"],["",", "],["String","'Rematched'"],["",") >= "],["Number","0"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$is_trying"],["","   = "],["Statement","index"],["","("],["Identifier","$msg"],["",", "],["String","'trying'"],["",")    >= "],["Number","0"],[""," || "],["Statement","index"],["","("],["Identifier","$msg"],["",", "],["String","'Trying'"],["",")    >= "],["Number","0"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$is_skip"],["","     = "],["Statement","index"],["","("],["Identifier","$msg"],["",", "],["String","'skipping'"],["",")  >= "],["Number","0"],[""," || "],["Statement","index"],["","("],["Identifier","$msg"],["",", "],["String","'Skipping'"],["",")  >= "],["Number","0"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$is_fail"],["","     = "],["Statement","index"],["","("],["Identifier","$msg"],["",", "],["String","'failed'"],["",")    >= "],["Number","0"],[""," || "],["Statement","index"],["","("],["Identifier","$msg"],["",", "],["String","'Failed'"],["",")    >= "],["Number","0"],["",";\n\n    "],["Comment","# Track string heatmap..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$forward_step"],["",") {\n        "],["Statement","my"],[""," "],["Identifier","@str_range"],[""," = "],["Identifier","$str_pos"],["","-"],["Identifier","$forward_step"],["","+"],["Number","1"],[""," .. "],["Identifier","$str_pos"],["","-"],["Number","1"],["",";\n        "],["Identifier","$_"],["","++ "],["Repeat","for"],[""," "],["Identifier","@{$history_of{"],["String","string_heatmap"],["Identifier","}}[@str_range]"],["",";\n    }\n    "],["Conditional","elsif"],[""," ("],["Identifier","$is_trying"],["",") {\n        "],["Identifier","$history_of{"],["String","string_heatmap"],["Identifier","}[$str_pos]"],["","++;\n    }\n\n    "],["Comment","# Trace regex heatmap..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$is_rematch"],[""," || !"],["Identifier","$is_match"],[""," && !"],["Identifier","$is_fail"],[""," && !"],["Identifier","$is_skip"],["",") {\n        "],["Statement","my"],[""," "],["Identifier","@regex_range"],[""," = "],["Identifier","$regex_pos"],["",".."],["Identifier","$regex_pos"],["","+"],["Statement","length"],["","("],["Identifier","$construct"],["",")-"],["Number","1"],["",";\n        "],["Identifier","$_"],["","++ "],["Repeat","for"],[""," "],["Identifier","@{$history_of{"],["String","match_heatmap"],["Identifier","}}[@regex_range]"],["",";\n    }\n\n    "],["Comment","# Track start and end positions for each capture..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$construct_type"],[""," "],["Operator","eq"],[""," "],["String","'_capture_group'"],["",") {\n        "],["Conditional","if"],[""," ("],["Identifier","$event_type"],[""," "],["Operator","eq"],[""," "],["String","'pre'"],["",") {\n            "],["Identifier","$capture{$capture_name}{"],["String","from"],["Identifier","}"],["","      = "],["Identifier","$str_pos"],["",";\n            "],["Identifier","$capture{$capture_name}{"],["String","start_pos"],["Identifier","}"],[""," = "],["Identifier","$regex_pos"],["",";\n        }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$event_type"],[""," "],["Operator","eq"],[""," "],["String","'post'"],["",") {\n            "],["Identifier","$capture{$capture_name}{"],["String","to"],["Identifier","}"],[""," = "],["Identifier","$str_pos"],["",";\n        }\n    }\n\n    "],["Comment","# Remember when a match/fail is pending..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$is_pending"],[""," = "],["Identifier","$matchable"],["","\n                  && "],["Identifier","$event_type"],[""," "],["Operator","eq"],[""," "],["String","'pre'"],["","\n                  && "],["Identifier","$construct_type"],[""," "],["Operator","ne"],[""," "],["String","'_named_subpattern_call'"],["",";\n    "],["Conditional","if"],[""," ("],["Identifier","$is_pending"],["",") {\n        "],["Comment","# Pre- and post- events have adjacent IDs so add 1 to get post ID..."],["","\n        "],["Identifier","$pre_is_pending"],[""," = "],["Identifier","$event_ID"],[""," + "],["Number","1"],["",";\n    }\n\n    "],["Comment","# Send starting position to corresponding post- event..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$shared_str_pos_ref"],[""," && "],["Identifier","$event_type"],[""," "],["Operator","eq"],[""," "],["String","'pre'"],[""," && "],["Identifier","$construct"],[""," "],["Operator","ne"],[""," "],["String","'|'"],["",") {\n        "],["Identifier","${$shared_str_pos_ref}"],[""," = "],["Identifier","$str_pos"],["",";\n    }\n\n    "],["Comment","# Compute indent for message (from paren depth + subcall depth)..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$indent"],[""," = "],["Identifier","$INDENT"],[""," x ("],["Identifier","$event_ref->{"],["String","depth"],["Identifier","}"],[""," + "],["Identifier","$subpattern_depth"],["",");\n\n    "],["Comment","# Indicate any backtracking..."],["","\n    "],["Conditional","if"],[""," ("],["Statement","length"],["","("],["Identifier","$event_str"],["",") > "],["Number","1"],[""," || "],["Statement","length"],["","("],["Identifier","$event_regex"],["",") > "],["Number","1"],["",") {\n        "],["Identifier","$event_str"],["","   = "],["String","q{}"],[""," "],["Conditional","if"],[""," "],["Statement","length"],["","("],["Identifier","$event_str"],["",") == "],["Number","1"],["",";\n        "],["Identifier","$event_regex"],[""," = "],["String","q{}"],[""," "],["Conditional","if"],[""," "],["Statement","length"],["","("],["Identifier","$event_regex"],["",") == "],["Number","1"],["",";\n        "],["Statement","my"],[""," "],["Identifier","$backtrack_msg"],["","\n            = "],["Identifier","$event_str"],[""," && "],["Identifier","$event_regex"],[""," ? "],["String","'Back-tracking in both regex and string'"],["","\n            : "],["Identifier","$event_str"],["","                 ? "],["String","'Back-tracking '"],[""," . "],["Identifier","$str_backtrack_len"],["","\n                                           . "],["String","' character'"],["","\n                                           . ("],["Identifier","$str_backtrack_len"],[""," == "],["Number","1"],[""," ? "],["String","q{}"],[""," : "],["String","'s'"],["",")\n                                           . "],["String","' in string'"],["","\n            :                              "],["String","\"Back-tracking in regex\""],["","\n            ;\n        "],["Identifier","$backtrack_msg"],[""," = _info_colourer("],["Identifier","$backtrack_msg"],["",");\n        "],["Identifier","$event_regex"],[""," .= "],["String","q{ }"],[""," x ("],["Identifier","$EVENT_COL_WIDTH"],[""," - "],["Statement","length"],[""," "],["Identifier","$event_regex"],["",");\n        "],["Identifier","$event_str"],["","   .= "],["String","q{ }"],[""," x ("],["Identifier","$EVENT_COL_WIDTH"],[""," - "],["Statement","length"],[""," "],["Identifier","$event_str"],["",");\n        _show_event "],["Identifier","$display_mode"],["",",\n                    "],["Statement","sprintf"],["","("],["String","\"%s | %s | %s\""],["",",\n                             _info_colourer("],["Identifier","$event_str"],["","),\n                                  _info_colourer("],["Identifier","$event_regex"],["","),\n                                       "],["Identifier","$indent"],[""," . "],["Identifier","$backtrack_msg"],["",");\n    }\n\n    "],["Comment","# Colour the message..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$colourer"],[""," = _colourer_for("],["Identifier","$msg"],["",");\n\n    "],["Comment","# Log (and perhaps display) event..."],["","\n    _show_event "],["Identifier","$display_mode"],["",",\n               "],["Statement","sprintf"],["","("],["String","\"%-s | %-"],["Identifier","${EVENT_COL_WIDTH}"],["String","s | %s\""],["",",\n                        _ws_colourer("],["Statement","substr"],["","("],["Identifier","$str_src"],[""," . ("],["String","q{ }"],[""," x "],["Identifier","$EVENT_COL_WIDTH"],["","), "],["Identifier","$str_pos"],["",", "],["Identifier","$EVENT_COL_WIDTH"],["",")),\n                            "],["Statement","substr"],["","("],["Identifier","$regex_src"],["",", "],["Identifier","$regex_pos"],["",", "],["Identifier","$EVENT_COL_WIDTH"],["","),\n                                "],["Identifier","$indent"],[""," . "],["Identifier","$colourer"],["","->("],["Identifier","$msg"],["","));\n\n    "],["Comment","# Display event mode line, if appropriate..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$display_mode"],[""," "],["Operator","eq"],[""," "],["String","'events'"],[""," && !"],["Identifier","$lexical_config->{"],["String","save_to_fh"],["Identifier","}"],["",") {\n        "],["Statement","say"],[""," _info_colourer( "],["String","qq{"],["Special","\\n"],["String","[Events of regex at "],["Identifier","$state{$regex_ID}{"],["String","location"],["Identifier","}"],["String","]}"],[""," );\n    }\n\n    "],["Comment","# Generate (and perhaps display) the JSON..."],["","\n    {\n        "],["Comment","# The data we're encoding..."],["","\n        "],["Statement","my"],[""," "],["Identifier","$data"],[""," = {\n            "],["String","regex_pos"],[""," => "],["Identifier","$regex_pos"],["",",\n            "],["String","str_pos"],["","   => "],["Identifier","$str_pos"],["",",\n            "],["String","event"],["","     => { "],["Identifier","%{$event_ref}"],["",", "],["String","msg"],[""," => "],["Identifier","$msg"],[""," },\n        };\n\n        "],["Comment","# But sanitize any procedural msg..."],["","\n        "],["Conditional","if"],[""," ("],["Operator","ref"],[""," "],["Identifier","$data->{"],["String","event"],["Identifier","}{"],["String","msg"],["Identifier","}"],[""," "],["Operator","eq"],[""," "],["String","'CODE'"],["",") {\n            "],["Statement","delete"],[""," "],["Identifier","$data->{"],["String","event"],["Identifier","}{"],["String","msg"],["Identifier","}"],["",";\n        }\n\n        "],["Comment","# And sanitize any reference to internal communications channel..."],["","\n        "],["Statement","my"],[""," "],["Identifier","$starting_str_pos"],[""," = "],["Statement","delete"],[""," "],["Identifier","$data->{"],["String","event"],["Identifier","}{"],["String","shared_str_pos"],["Identifier","}"],["",";\n        "],["Conditional","if"],[""," ("],["Operator","ref"],[""," "],["Identifier","$starting_str_pos"],[""," "],["Operator","eq"],[""," "],["String","'SCALAR'"],[""," && "],["Identifier","${$starting_str_pos}"],[""," && "],["Identifier","${$starting_str_pos}"],[""," "],["Operator","ne"],[""," "],["Identifier","$str_pos"],["",") {\n            "],["Identifier","$data->{"],["String","starting_str_pos"],["Identifier","}"],[""," = "],["Identifier","${$starting_str_pos}"],["",";\n        }\n\n        "],["Statement","my"],[""," "],["Identifier","$json_rep"],[""," = "],["Identifier","$JSON_encoder"],["","->("],["Identifier","$data"],["",");\n\n        "],["Comment","# Display opening delimiter at start..."],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$construct_type"],[""," "],["Operator","eq"],[""," "],["String","'_START'"],[""," && "],["Identifier","$str_pos"],[""," == "],["Number","0"],["",") {\n            _show_JSON "],["Identifier","$display_mode"],["",", "],["String","'['"],["",";\n        }\n\n        "],["Comment","# Display event data (with comma, if needed)..."],["","\n        "],["Statement","my"],[""," "],["Identifier","$comma"],[""," = "],["Identifier","$construct_type"],[""," "],["Operator","eq"],[""," "],["String","'_END'"],[""," ? "],["String","q{}"],[""," : "],["String","q{,}"],["",";\n        _show_JSON "],["Identifier","$display_mode"],["",", "],["String","qq{    "],["Identifier","$json_rep$comma"],["String","}"],["",";\n\n        "],["Comment","# Display closing delimiter at end..."],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$construct_type"],[""," "],["Operator","eq"],[""," "],["String","'_END'"],["",") {\n            _show_JSON "],["Identifier","$display_mode"],["",", "],["String","']'"],["",";\n        }\n\n        "],["Comment","# Display mode line..."],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$display_mode"],[""," "],["Operator","eq"],[""," "],["String","'JSON'"],[""," && !"],["Identifier","$lexical_config->{"],["String","save_to_fh"],["Identifier","}"],["",") {\n            "],["Statement","say"],[""," _info_colourer( "],["String","qq{"],["Special","\\n"],["String","[JSON data of regex at "],["Identifier","$state{$regex_ID}{"],["String","location"],["Identifier","}"],["String","]}"],[""," );\n        }\n    }\n\n    "],["Comment","# Build and display (if appropriate) the \"2D\" visualizations..."],["","\n    "],["Statement","my"],[""," "],["Identifier","%data"],[""," = (\n        "],["String","regex_ID"],["","       =>  "],["Identifier","$regex_ID"],["",",\n        "],["String","regex_src"],["","      =>  "],["Identifier","$regex_src"],["",",\n        "],["String","regex_pos"],["","      =>  "],["Identifier","$regex_pos"],["",",\n        "],["String","construct_len"],["","  =>  "],["Identifier","$construct_len"],["",",\n        "],["String","str_src"],["","        =>  "],["Identifier","$str_src"],["",",\n        "],["String","str_pos"],["","        =>  "],["Identifier","$str_pos"],["",",\n        "],["String","is_match"],["","       =>  "],["Identifier","$is_match"],["",",\n        "],["String","is_fail"],["","        =>  "],["Identifier","$is_fail"],["",",\n        "],["String","is_trying"],["","      =>  "],["Identifier","$is_trying"],["",",\n        "],["String","is_capture"],["","     =>  "],["Identifier","$is_capture"],["",",\n        "],["String","backtrack"],["","      =>  "],["Identifier","$backtrack"],["",",\n        "],["String","forward_step"],["","   =>  "],["Identifier","$forward_step"],["",",\n        "],["String","nested_because"],[""," =>  "],["Identifier","$nested_because"],["",",\n        "],["String","msg"],["","            =>  "],["Identifier","$msg"],["",",\n        "],["String","colourer"],["","       =>  "],["Identifier","$colourer"],["",",\n        "],["String","step"],["","           =>  "],["Statement","scalar"],[""," "],["Identifier","@{$history_of{"],["String","visual"],["Identifier","}"],["","||[]"],["Identifier","}"],["",",\n    );\n    _build_visualization("],["String","'visual'"],["",",  \\"],["Identifier","%data"],["",");\n    _build_visualization("],["String","'heatmap'"],["",", \\"],["Identifier","%data"],["",");\n\n    "],["Identifier","$data{"],["String","no_window"],["Identifier","}"],[""," = "],["Number","1"],["",";\n    _build_visualization("],["String","'full_visual'"],["",",  \\"],["Identifier","%data"],["",");\n    _build_visualization("],["String","'full_heatmap'"],["",", \\"],["Identifier","%data"],["",");\n\n    "],["Comment","# Do any interaction..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$input"],["",";\n"],["Label","    INPUT:"],["","\n    "],["Repeat","while"],[""," (!"],["Identifier","$non_interactive"],["",") {\n        "],["Comment","# Adaptive rate of display when skipping interactions..."],["","\n        "],["Statement","state"],[""," "],["Identifier","$skip_rate"],[""," = "],["Float","0.1"],["",";\n        "],["Statement","state"],[""," "],["Identifier","$MIN_SKIP_RATE"],[""," = "],["Float","0.001"],["",";\n        "],["Identifier","$skip_rate"],[""," = max("],["Identifier","$MIN_SKIP_RATE"],["",", "],["Identifier","$skip_rate"],[""," * "],["Float","0.98"],["",");\n        _pause("],["Identifier","$skip_rate"],["",");\n\n        "],["Comment","# Skip interactions if current mode does not require them..."],["","\n        "],["Statement","last"],[""," INPUT "],["Conditional","if"],[""," "],["Identifier","$event_type"],[""," "],["Operator","ne"],[""," "],["String","'break'"],[""," && (\n                           "],["Comment","# Skip-to-match mode..."],["","\n                           "],["Identifier","$interaction_mode"],[""," "],["Operator","eq"],[""," "],["String","'m'"],["","\n                        && !"],["Identifier","$is_match"],["","\n                        && "],["Statement","index"],["","("],["Identifier","$msg"],["",","],["String","'Back-tracked'"],["",") < "],["Number","0"],["","\n                      ||\n                           "],["Comment","# Skip-to-fail mode..."],["","\n                           "],["Identifier","$interaction_mode"],[""," "],["Operator","eq"],[""," "],["String","'f'"],["","\n                        && !"],["Identifier","$is_fail"],["","\n                      ||\n                           "],["Comment","# Skip-to-end mode..."],["","\n                           "],["Identifier","$interaction_mode"],[""," "],["Operator","eq"],[""," "],["String","'c'"],["","\n                        && "],["Identifier","$construct_type"],[""," "],["Operator","ne"],[""," "],["String","'_END'"],["","\n                    );\n\n        "],["Comment","# Reset adaptive skip rate on any interaction..."],["","\n        "],["Identifier","$skip_rate"],[""," = "],["Float","0.1"],["",";\n\n        "],["Comment","# Reset to step mode on a break..."],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$event_type"],[""," "],["Operator","eq"],[""," "],["String","'break'"],["",") {\n            "],["Identifier","$interaction_mode"],[""," = "],["String","'s'"],["",";\n        }\n\n        "],["Comment","# Do what, John???"],["","\n        "],["Identifier","$input"],[""," = _interact();\n\n        "],["Comment","# A <CTRL-C> terminates the process..."],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","\""],["Special","\\cC"],["String","\""],["",") {\n            "],["Statement","kill"],[""," "],["Number","9"],["",", "],["Identifier","$$"],["",";\n        }\n\n        "],["Comment","# An 'x' exits the process..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'x'"],["",") {\n            "],["Statement","exit"],["","("],["Number","0"],["",");\n        }\n\n        "],["Comment","# A <CTRL-L> redraws the screen..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","\""],["Special","\\cL"],["String","\""],["",") {\n            _print "],["Identifier","$history_of{$display_mode}["],["","-"],["Number","1"],["Identifier","]{"],["String","display"],["Identifier","}"],["",";\n            "],["Conditional","if"],[""," ("],["Identifier","$display_mode"],[""," "],["Operator","eq"],[""," "],["String","'events'"],[""," || "],["Identifier","$display_mode"],[""," "],["Operator","eq"],[""," "],["String","'JSON'"],["",") {\n                "],["Statement","say"],[""," _info_colourer( "],["String","qq{"],["Special","\\n\\n"],["String","["],["Special","\\u"],["Identifier","$display_mode"],["String"," of regex at "],["Identifier","$state{$regex_ID}{"],["String","location"],["Identifier","}"],["String","]}"],[""," );\n            }\n            "],["Statement","next"],[""," INPUT;\n        }\n\n        "],["Comment","# Display explanation of regex..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'d'"],["",") {\n            _show_regex_description("],["Identifier","$regex_ID"],["",");\n            "],["Statement","next"],[""," INPUT;\n        }\n\n        "],["Comment","# Help!"],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'?'"],["",") {\n            _show_help();\n            "],["Statement","next"],[""," INPUT;\n        }\n\n        "],["Comment","# Quit all debugging???"],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'q'"],[""," || "],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","\""],["Special","\\cD"],["String","\""],["",") {\n            "],["Identifier","$interaction_quit"],[""," = "],["Number","1"],["",";\n            "],["Statement","last"],[""," INPUT;\n        }\n\n        "],["Comment","# Step backwards..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'-'"],["",") {\n            ("],["Identifier","$input"],["",") = _revisualize("],["Identifier","$regex_ID"],["",");\n            "],["Conditional","if"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'q'"],[""," || "],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","\""],["Special","\\cD"],["String","\""],["",") {\n                "],["Identifier","$interaction_quit"],[""," = "],["Number","1"],["",";\n                "],["Statement","last"],[""," INPUT;\n            }\n            "],["Statement","next"],[""," INPUT;\n        }\n\n        "],["Comment","# Switch between visualizer/event/heatmap/JSON modes..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'v'"],["",") {\n            "],["Identifier","$display_mode"],[""," = "],["String","'visual'"],["",";\n            _print "],["Identifier","$history_of{"],["String","'visual'"],["Identifier","}["],["","-"],["Number","1"],["Identifier","]{"],["String","display"],["Identifier","}"],["",";\n            "],["Statement","next"],[""," INPUT;\n        }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'h'"],["",") {\n            "],["Comment","# Can we use heatmap mode?"],["","\n            "],["Conditional","if"],[""," ("],["Identifier","$heatmaps_invisible"],["",") {\n                "],["Statement","say"],[""," "],["String","'Cannot show heatmaps (Term::ANSIColor unavailable)'"],["",";\n                "],["Statement","say"],[""," "],["String","\"Try 'H' instead\""],["",";\n                "],["Identifier","$input"],[""," = "],["String","'?'"],["",";\n            }\n            "],["Comment","# If heatmaps available, check for misuse of 'h' instead of '?'..."],["","\n            "],["Conditional","else"],[""," {\n                "],["Statement","my"],[""," "],["Identifier","$prompt_help"],[""," = "],["Identifier","$display_mode"],[""," "],["Operator","eq"],[""," "],["String","'heatmap'"],["",";\n                "],["Identifier","$display_mode"],[""," = "],["String","'heatmap'"],["",";\n                _print "],["Identifier","$CLEAR_SCREEN"],["",";\n                _print "],["Identifier","$history_of{"],["String","'heatmap'"],["Identifier","}["],["","-"],["Number","1"],["Identifier","]{"],["String","display"],["Identifier","}"],["",";\n                "],["Conditional","if"],[""," ("],["Identifier","$prompt_help"],["",") {\n                    "],["Statement","say"],[""," "],["String","\"(Type '?' for help)\""],["",";\n                }\n            }\n            "],["Statement","next"],[""," INPUT;\n        }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'e'"],["",") {\n            "],["Identifier","$display_mode"],[""," = "],["String","'events'"],["",";\n            _print "],["Identifier","$CLEAR_SCREEN"],["",";\n            _print "],["Identifier","$history_of{"],["String","'events'"],["Identifier","}["],["","-"],["Number","1"],["Identifier","]{"],["String","display"],["Identifier","}"],["",";\n            "],["Statement","say"],[""," _info_colourer( "],["String","qq{"],["Special","\\n\\n"],["String","[Events of regex at "],["Identifier","$state{$regex_ID}{"],["String","location"],["Identifier","}"],["String","]}"],[""," );\n            "],["Statement","next"],[""," INPUT;\n        }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'j'"],["",") {\n            "],["Identifier","$display_mode"],[""," = "],["String","'JSON'"],["",";\n            _print "],["Identifier","$CLEAR_SCREEN"],["",";\n            _print "],["Identifier","$history_of{"],["String","'JSON'"],["Identifier","}["],["","-"],["Number","1"],["Identifier","]{"],["String","display"],["Identifier","}"],["",";\n            "],["Statement","say"],[""," _info_colourer( "],["String","qq{"],["Special","\\n\\n"],["String","[JSON data of regex at "],["Identifier","$state{$regex_ID}{"],["String","location"],["Identifier","}"],["String","]}"],[""," );\n            "],["Statement","next"],[""," INPUT;\n        }\n\n        "],["Comment","# Take a snapshot..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'V'"],["",") { _save_snapshot("],["String","'full_visual'"],["",")             ; "],["Statement","next"],[""," INPUT; }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'H'"],["",") { _save_snapshot("],["String","'full_heatmap'"],["",")            ; "],["Statement","next"],[""," INPUT; }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'E'"],["",") { _save_snapshot("],["String","'events'"],["",")                  ; "],["Statement","next"],[""," INPUT; }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'J'"],["",") { _save_snapshot("],["String","'JSON'"],["",")                    ; "],["Statement","next"],[""," INPUT; }\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'D'"],["",") { _show_regex_description("],["Identifier","$regex_ID"],["",","],["String","'save'"],["",") ; "],["Statement","next"],[""," INPUT; }\n\n        "],["Comment","# Require an explicit quit request at end of match..."],["","\n"],["Comment","#        elsif ($construct_type eq '_END') {"],["","\n"],["Comment","#            print $history_of{$display_mode}[-1]{display};"],["","\n"],["Comment","#            say Term::ANSIColor::colored(\"(type 'q' to leave visualization)\", $ERR_COL);"],["","\n"],["Comment","#            next INPUT;"],["","\n"],["Comment","#        }"],["","\n\n        "],["Comment","# Change of interaction mode???"],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," ~~ ["],["String","'f'"],["",","],["String","'m'"],["",","],["String","'s'"],["",","],["String","'c'"],["","]) {\n            "],["Identifier","$interaction_mode"],[""," = "],["Identifier","$input"],["",";\n            "],["Statement","last"],[""," INPUT;\n        }\n\n        "],["Comment","# Otherwise, move on..."],["","\n        "],["Conditional","else"],[""," {\n            "],["Statement","last"],[""," INPUT;\n        }\n    }\n\n    "],["Comment","# At end of debugging, save data to file (if requested), and clean up..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$construct_type"],[""," "],["Operator","eq"],[""," "],["String","'_END'"],["",") {\n        _save_to_fh("],["Identifier","$regex_ID"],["",", "],["Identifier","$str_src"],["",");\n\n        "],["Identifier","%history_of"],[""," = ();\n        "],["Identifier","$history_of{"],["String","match_heatmap"],["Identifier","}"],[""," = [];\n        "],["Identifier","$history_of{"],["String","string_heatmap"],["Identifier","}"],[""," = [];\n    }\n\n    "],["Statement","return"],[""," "],["Identifier","$input"],["",";\n}\n\n"],["Comment","# Dump all history and config data to a stream..."],["","\n"],["Keyword","sub "],["Function","_save_to_fh "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$regex_ID"],["",", "],["Identifier","$str_src"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Comment","# No-op if not saving to file..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$fh"],[""," = "],["Statement","delete"],[""," "],["Identifier","$lexical_config->{"],["String","save_to_fh"],["Identifier","}"],["","\n        "],["Operator","or"],[""," "],["Statement","return"],["",";\n\n    "],["Comment","# Extract data to correct level..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$match_heatmap"],["","  = "],["Statement","delete"],[""," "],["Identifier","$history_of{"],["String","match_heatmap"],["Identifier","}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$string_heatmap"],[""," = "],["Statement","delete"],[""," "],["Identifier","$history_of{"],["String","string_heatmap"],["Identifier","}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$location"],["","       = "],["Identifier","$state{$regex_ID}{"],["String","location"],["Identifier","}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$regex_display"],["","  = "],["Identifier","$state{$regex_ID}{"],["String","regex_src"],["Identifier","}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$regex_original"],[""," = "],["Identifier","$state{$regex_ID}{"],["String","raw_regex"],["Identifier","}"],["",";\n\n    "],["Comment","# Ensure print prints everything..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$prev_select"],[""," = "],["Statement","select"],[""," "],["Identifier","$fh"],["",";\n    "],["Statement","local"],[""," "],["Identifier","$|"],["","="],["Number","1"],["",";\n\n    "],["Comment","# Encode and print..."],["","\n    "],["Statement","print"],[""," "],["Statement","{"],["Identifier","$fh"],["Statement","}"],[""," "],["Identifier","$JSON_encoder"],["","->({\n        "],["String","regex_ID"],["","       => "],["Identifier","$regex_ID"],["",",\n        "],["String","regex_location"],[""," => "],["Identifier","$location"],["",",\n        "],["String","regex_original"],[""," => "],["Identifier","$regex_original"],["",",\n        "],["String","regex_display"],["","  => "],["Identifier","$regex_display"],["",",\n        "],["String","string_display"],[""," => "],["Identifier","$str_src"],["",",\n        "],["String","config"],["","         => "],["Identifier","$lexical_config"],["",",\n        "],["String","match_data"],["","     => "],["Identifier","$JSON_decoder"],["","->("],["Identifier","$history_of{"],["String","JSON"],["Identifier","}["],["","-"],["Number","1"],["Identifier","]{"],["String","display"],["Identifier","}"],["","),\n        "],["String","match_heatmap"],["","  => "],["Identifier","$match_heatmap"],["",",\n        "],["String","string_heatmap"],[""," => "],["Identifier","$string_heatmap"],["",",\n        "],["String","visualization"],["","  => \\"],["Identifier","%history_of"],["",",\n    }), "],["String","\""],["Special","\\n"],["String","\""],["",";\n\n    "],["Comment","# Restore filehandles..."],["","\n    "],["Statement","select"],[""," "],["Identifier","$prev_select"],["",";\n    "],["Identifier","$lexical_config->{"],["String","save_to_fh"],["Identifier","}"],[""," = "],["Identifier","$fh"],["",";\n}\n\n"],["Keyword","sub "],["Function","_show_regex_description "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$regex_ID"],["",", "],["Identifier","$save"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Comment","# How wide to display regex components..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$MAX_DISPLAY"],[""," = "],["Number","20"],["",";\n\n    "],["Comment","# The info we're displaying..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$info"],[""," = "],["Identifier","$state{$regex_ID}"],["",";\n\n    "],["Comment","# Coloured separator..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$separator"],[""," = "],["Identifier","$save"],[""," ? "],["String","q{}"],["","\n                  :         Term::ANSIColor::colored(\n                                "],["String","q{ }"],[""," x "],["Identifier","$MAX_WIDTH"],[""," . "],["String","\""],["Special","\\n"],["String","\""],["",",\n                                "],["Identifier","$lexical_config->{"],["String","desc_sep_col"],["Identifier","}"],["","\n                            );\n\n    "],["Comment","# Direct the output..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$STDOUT"],["",";\n    "],["Conditional","if"],[""," ("],["Identifier","$save"],["",") {\n        "],["Identifier","$STDOUT"],[""," = _prompt_for_file("],["String","'description'"],["",");\n    }\n    "],["Conditional","else"],[""," {\n        "],["Statement","my"],[""," "],["Identifier","$pager"],["","  = "],["Identifier","$ENV{"],["String","PAGER"],["Identifier","}"],[""," // "],["String","'more'"],["",";\n        "],["Conditional","if"],[""," ("],["Identifier","$pager"],[""," "],["Operator","eq"],[""," "],["String","'less'"],["",") {\n            "],["Identifier","$pager"],[""," .= "],["String","' -R'"],["",";\n        }\n        "],["Statement","open"],[""," "],["Identifier","$STDOUT"],["",", "],["String","'|-'"],["",", "],["Identifier","$pager"],[""," "],["Operator","or"],[""," "],["Statement","return"],["",";\n    }\n\n    "],["Comment","# Build the display..."],["","\n    "],["Statement","say"],[""," "],["Statement","{"],["Identifier","$STDOUT"],["Statement","}"],["","\n        "],["Identifier","$separator"],["","\n      . "],["Statement","join"],[""," "],["String","q{}"],["",",\n        "],["Statement","map"],[""," "],["Statement","{"],["","\n            "],["Statement","my"],[""," "],["Identifier","$indent"],["","    = "],["Identifier","$info->{$_}{"],["String","indent"],["Identifier","}"],["",";\n            "],["Statement","my"],[""," "],["Identifier","$construct"],[""," = "],["Statement","sprintf"],["","("],["String","'%-*s'"],["",", "],["Identifier","$MAX_DISPLAY"],["",", "],["Identifier","$indent"],[""," . "],["Identifier","$info->{$_}{"],["String","construct"],["Identifier","}"],["",");\n            "],["Statement","my"],[""," "],["Identifier","$desc"],["","      = "],["Identifier","$indent"],[""," . "],["Identifier","$info->{$_}{"],["String","desc"],["Identifier","}"],["",";\n\n            "],["Comment","# Decorate according to destination..."],["","\n            "],["Conditional","if"],[""," ("],["Identifier","$save"],["",") {\n                "],["Identifier","$desc"],[""," = "],["String","'#'"],[""," . "],["Identifier","$desc"],["","\n            }\n            "],["Conditional","else"],[""," {\n                "],["Identifier","$construct"],[""," = Term::ANSIColor::colored("],["Identifier","$construct"],["",", "],["Identifier","$lexical_config->{"],["String","desc_regex_col"],["Identifier","}"],["",");\n                "],["Identifier","$desc"],["","      = Term::ANSIColor::colored("],["Identifier","$desc"],["",",      "],["Identifier","$lexical_config->{"],["String","desc_text_col"],["Identifier","}"],["",");\n            }\n\n            "],["Comment","# Format and return..."],["","\n            "],["Conditional","if"],[""," ("],["Statement","length"],["","("],["Identifier","$indent"],[""," . "],["Identifier","$info->{$_}{"],["String","construct"],["Identifier","}"],["",") > "],["Number","20"],["",") {\n                  "],["Identifier","$construct"],[""," . "],["String","\""],["Special","\\n"],["String","\""],["","\n                . "],["String","q{ }"],[""," x ("],["Identifier","$MAX_DISPLAY"],["","+"],["Number","2"],["",") . "],["String","\""],["Identifier","$desc"],["Special","\\n"],["String","\""],["","\n                . "],["Identifier","$separator"],["","\n            }\n            "],["Conditional","else"],[""," {\n                  "],["String","\""],["Identifier","$construct"],["String","  "],["Identifier","$desc"],["Special","\\n"],["String","\""],["","\n                . "],["Identifier","$separator"],["","\n            }\n        "],["Statement","}"],["","\n        "],["Statement","sort"],[""," "],["Statement","{"],[""," "],["Identifier","$a"],[""," <=> "],["Identifier","$b"],[""," "],["Statement","}"],["","\n        "],["Statement","grep"],[""," "],["Statement","{"],[""," "],["Statement","/"],["String","^"],["Special","\\d+"],["String","$"],["Statement","/"],[""," && "],["Statement","exists"],[""," "],["Identifier","$info->{$_}{"],["String","desc"],["Identifier","}"],[""," "],["Statement","}"],["","\n        "],["Statement","keys"],[""," "],["Identifier","%$info"],["",";\n}\n\n"],["Keyword","sub "],["Function","_show_help "],["","{\n    "],["Statement","say"],[""," "],["String","<<'END_HELP'"],["",";\n"],["String","________________________________________________/ Help \\______"],["","\n\n"],["String","  Motion:    s : step forwards"],["","\n"],["String","             - : step backwards"],["","\n"],["String","             m : continue to next partial match"],["","\n"],["String","             f : continue to next partial failure"],["","\n"],["String","             c : continue to end of full match"],["","\n"],["String","         <RET> : repeat last motion"],["","\n\n"],["String","  Display:   v : change to visualization"],["","\n"],["String","             e : change to event log"],["","\n"],["String","             h : change to heatmaps"],["","\n"],["String","             j : change to JSON representation"],["","\n"],["String","             d : describe the regex in detail"],["","\n\n"],["String","  Snapshot:  V : take snapshot of current visualization"],["","\n"],["String","             E : take snapshot of current event log"],["","\n"],["String","             H : take snapshot of current heatmaps"],["","\n"],["String","             J : take snapshot of current JSON representation"],["","\n"],["String","             D : take snapshot of regex description"],["","\n\n"],["String","  Control:   q : quit debugger and continue program"],["","\n"],["String","             x : exit debugger and terminate program"],["","\n\n"],["String","______________________________________________________________"],["","\n"],["String","END_HELP"],["","\n}\n\n"],["Comment","# Take a snapshot of the current debugger state..."],["","\n"],["Statement","my"],[""," "],["Identifier","@ERR_MODE"],[""," = ( "],["String","-timeout"],[""," => "],["Number","10"],["",", "],["String","-style"],[""," => "],["Identifier","$ERR_COL"],["",", -single);\n\n"],["Keyword","sub "],["Function","_prompt_for_file "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$data_mode"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Conditional","if"],[""," (!"],["Statement","eval"],[""," { "],["Statement","require"],[""," Time::HiRes; }) {\n        *Time::HiRes::time = "],["Keyword","sub "],["","{ "],["Statement","time"],[""," };\n    }\n\n    "],["Comment","# Default target for save..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$open_mode"],[""," = "],["String","'>'"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$filename"],["","  = "],["String","'rxrx_'"],[""," . "],["Identifier","$data_mode"],[""," . "],["String","'_'"],[""," . Time::HiRes::time();\n\n    "],["Comment","# Request a filename..."],["","\n    "],["Statement","print"],[""," "],["String","\"Save "],["Identifier","$data_mode"],["String"," snapshot as: \""],["",";\n    "],["Statement","my"],[""," "],["Identifier","$input"],[""," = _interact();\n\n    "],["Comment","# Default to paged-to-screen..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","\""],["Special","\\n"],["String","\""],["",") {\n        "],["Statement","say"],[""," "],["String","'<screen>'"],["",";\n        "],["Identifier","$open_mode"],[""," = "],["String","'|-'"],["",";\n        "],["Identifier","$filename"],["","  = "],["Identifier","$ENV{"],["String","PAGER"],["Identifier","}"],[""," // "],["String","'more'"],["",";\n        "],["Conditional","if"],[""," ("],["Identifier","$filename"],[""," "],["Operator","eq"],[""," "],["String","'less'"],["",") {\n            "],["Identifier","$filename"],[""," .= "],["String","' -R'"],["",";\n        }\n    }\n\n    "],["Comment","# <TAB> selects precomputed filename..."],["","\n    "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","\""],["Special","\\t"],["String","\""],["",") {\n        "],["Statement","say"],[""," "],["Identifier","$filename"],["",";\n        _pause("],["Number","2"],["",");\n    }\n\n    "],["Comment","# Otherwise, use whatever they type..."],["","\n    "],["Conditional","else"],[""," {\n        "],["Identifier","$filename"],[""," = "],["Identifier","$input"],["",";\n        "],["Statement","print"],[""," "],["Identifier","$input"],["",";\n        "],["Identifier","$filename"],[""," .= "],["Statement","readline"],[""," *STDIN;\n        "],["Statement","chomp"],[""," "],["Identifier","$filename"],["",";\n    }\n\n    "],["Comment","# Set up the output stream..."],["","\n    "],["Statement","open"],[""," "],["Statement","my"],[""," "],["Identifier","$fh"],["",", "],["Identifier","$open_mode"],["",", "],["Identifier","$filename"],[""," "],["Operator","or"],[""," "],["Operator","do"],[""," {\n        "],["Statement","say"],[""," Term::ANSIColor::colored("],["String","\"Can't open "],["Identifier","$filename"],["String",": "],["Identifier","$!"],["String","\""],["",", "],["Identifier","$ERR_COL"],["",");\n        "],["Statement","say"],[""," Term::ANSIColor::colored("],["String","\"(Hit any key to continue)\""],["",", "],["Identifier","$ERR_COL"],["",");\n        _interact();\n        "],["Statement","return"],["",";\n    };\n\n    "],["Statement","return"],[""," "],["Identifier","$fh"],["",";\n}\n\n"],["Keyword","sub "],["Function","_save_snapshot "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$data_mode"],["",", "],["Identifier","$step"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$step"],[""," //= -"],["Number","1"],["",";\n\n    "],["Comment","# Open the save target..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$fh"],[""," = _prompt_for_file("],["Identifier","$data_mode"],["",");\n\n    "],["Comment","# Output current state (appropriately trimmed)..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$state"],[""," = "],["Identifier","$history_of{$data_mode}[$step]{"],["String","display"],["Identifier","}"],["",";\n    "],["Repeat","while"],[""," ("],["Statement","substr"],["","("],["Identifier","$state"],["",", "],["Number","0"],["",", "],["Number","1"],["",") "],["Operator","eq"],[""," "],["String","\""],["Special","\\n"],["String","\""],["",") {\n        "],["Statement","substr"],["","("],["Identifier","$state"],["",", "],["Number","0"],["",", "],["Number","1"],["",", "],["String","q{}"],["",");\n    }\n    "],["Statement","print"],[""," "],["Statement","{"],["Identifier","$fh"],["Statement","}"],[""," "],["Identifier","$state"],["",";\n\n    "],["Comment","# JSON output may be partial..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$data_mode"],[""," "],["Operator","eq"],[""," "],["String","'JSON'"],[""," && "],["Statement","substr"],["","("],["Identifier","$state"],["",", -"],["Number","2"],["",") "],["Operator","eq"],[""," "],["String","\","],["Special","\\n"],["String","\""],["",") {\n        "],["Statement","print"],[""," "],["Statement","{"],["Identifier","$fh"],["Statement","}"],[""," "],["String","\"    { MATCH_INCOMPLETE => 1 }"],["Special","\\n"],["String","]"],["Special","\\n"],["String","\""],["",";\n    }\n\n    "],["Comment","# Clean up..."],["","\n    "],["Statement","close"],[""," "],["Identifier","$fh"],["",";\n\n    "],["Comment","# Restore previous visuals..."],["","\n    _print "],["Identifier","$history_of{$display_mode}["],["","-"],["Number","1"],["Identifier","]{"],["String","display"],["Identifier","}"],["",";\n\n    "],["Statement","return"],["",";\n}\n\n"],["Keyword","sub "],["Function","_build_heatmap "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$str"],["",", "],["Identifier","$count_ref"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Comment","# Determine colours to be used..."],["","\n    "],["Statement","my"],[""," "],["Identifier","@HEAT_COLOUR"],[""," = "],["Identifier","@{$lexical_config->{"],["String","heatmap_col"],["Identifier","}}"],["",";\n\n    "],["Comment","# Normalize counts to match @HEAT_COLOUR entries..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$max"],[""," = max "],["Number","1"],["",", "],["Statement","map"],[""," "],["Statement","{"],[""," "],["Identifier","$_"],[""," // "],["Number","0"],[""," "],["Statement","}"],[""," "],["Identifier","@{$count_ref}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","@count"],[""," = "],["Statement","map"],[""," "],["Statement","{"],[""," "],["Statement","int"],["","( "],["Float","0.5"],[""," + "],["Identifier","$#HEAT_COLOUR"],[""," * ("],["Identifier","$_"],["","//"],["Number","0"],["",") / "],["Identifier","$max"],[""," ) "],["Statement","}"],[""," "],["Identifier","@{$count_ref}"],["",";\n\n    "],["Comment","# Colour each character..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$heatmap"],[""," = "],["String","q{}"],["",";\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$n"],[""," ("],["Float","0."],["","."],["Statement","length"],["","("],["Identifier","$str"],["",")-"],["Number","1"],["",") {\n        "],["Statement","my"],[""," "],["Identifier","$heat"],[""," = "],["Identifier","$HEAT_COLOUR[$count[$n]"],[""," // "],["Number","0"],["Identifier","]"],["",";\n        "],["Identifier","$heatmap"],[""," .= _ws_colourer("],["Statement","substr"],["","("],["Identifier","$str"],["",","],["Identifier","$n"],["",","],["Number","1"],["","), "],["Identifier","$heat"],["",");\n    }\n\n    "],["Statement","return"],[""," "],["Identifier","$heatmap"],["",";\n}\n\n"],["Comment","# Extract a window-into-string to fit it on screen..."],["","\n"],["Keyword","sub "],["Function","_make_window "],["","{\n    "],["Statement","my"],[""," "],["Identifier","%arg"],[""," = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$src"],["","       =    "],["Identifier","$arg{"],["String","text"],["Identifier","}"],["","  // "],["String","q{}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$pos"],["","       =    "],["Identifier","$arg{"],["String","pos"],["Identifier","}"],["","   // "],["Number","0"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$start_pos"],[""," =    "],["Identifier","$arg{"],["String","start"],["Identifier","}"],[""," // "],["Number","0"],["",";\n    "],["Statement","my"],[""," "],["Identifier","@heatmap"],["","   = "],["Identifier","@{"],[""," "],["Identifier","$arg{"],["String","heat"],["Identifier","}"],["","  // [] "],["Identifier","}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$ws_colour"],[""," =    "],["Identifier","$arg{"],["String","ws_colour"],["Identifier","}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$window"],["","    =   !"],["Identifier","$arg{"],["String","no_window"],["Identifier","}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$marker"],["","    =   "],["Identifier","$arg{"],["String","marker"],["Identifier","}"],["",";\n\n    "],["Comment","# Extend heatmap and marker to length of text..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","@heatmap"],["",") {\n        "],["Statement","push"],[""," "],["Identifier","@heatmap"],["",", ("],["Number","0"],["",") x ("],["Statement","length"],["","("],["Identifier","$src"],["",") - "],["Identifier","@heatmap"],["",");\n    }\n    "],["Conditional","if"],[""," ("],["Identifier","$marker"],["",") {\n        "],["Identifier","$marker"],[""," .= "],["String","q{ }"],[""," x ("],["Statement","length"],["","("],["Identifier","$src"],["",") - "],["Statement","length"],["","("],["Identifier","$marker"],["","));\n    }\n\n    "],["Comment","# Crop to window, if necessary..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","$window"],["",") {\n\n        "],["Comment","# How big is the space we have to fill???"],["","\n        "],["Statement","my"],[""," "],["Identifier","$window_width"],[""," = "],["Identifier","$MAX_WIDTH"],[""," - "],["Number","2"],["","; "],["Comment","# ...allow 2 chars for delimiters"],["","\n        "],["Statement","my"],[""," "],["Identifier","$mid_window"],[""," = "],["Identifier","$MAX_WIDTH"],["","/"],["Number","2"],["",";\n\n        "],["Comment","# Only modify values if content longer than window..."],["","\n        "],["Conditional","if"],[""," ("],["Statement","length"],["","("],["Identifier","$src"],["",") > "],["Identifier","$window_width"],["",") {\n            "],["Comment","# At the start of the string, chop off the end..."],["","\n            "],["Conditional","if"],[""," ("],["Identifier","$pos"],[""," <= "],["Identifier","$mid_window"],["",") {\n                "],["Conditional","if"],[""," ("],["Identifier","$marker"],["",") {\n                    "],["Identifier","$marker"],[""," = "],["Statement","substr"],["","("],["Identifier","$marker"],["",", "],["Number","0"],["",", "],["Identifier","$window_width"],["",");\n                }\n                "],["Identifier","$src"],[""," = "],["Statement","substr"],["","("],["Identifier","$src"],["",", "],["Number","0"],["",", "],["Identifier","$window_width"],["",");\n                "],["Statement","substr"],["","("],["Identifier","$src"],["",",-"],["Number","3"],["",","],["Number","3"],["",","],["String","q{...}"],["",");\n            }\n            "],["Comment","# At the end of the string, chop off the start..."],["","\n            "],["Conditional","elsif"],[""," ("],["Statement","length"],["","("],["Identifier","$src"],["",") - "],["Identifier","$pos"],[""," < "],["Identifier","$mid_window"],["",") {\n                "],["Identifier","$pos"],["","       = "],["Identifier","$window_width"],[""," - "],["Statement","length"],["","("],["Identifier","$src"],["",") + "],["Identifier","$pos"],["",";\n                "],["Identifier","$start_pos"],[""," = "],["Identifier","$window_width"],[""," - "],["Statement","length"],["","("],["Identifier","$src"],["",") + "],["Identifier","$start_pos"],["",";\n                "],["Conditional","if"],[""," ("],["Identifier","@heatmap"],["",") {\n                    "],["Identifier","@heatmap"],[""," = "],["Identifier","@heatmap["],["Statement","length"],["","("],["Identifier","$src"],["",")-"],["Identifier","$window_width"],["",".."],["Identifier","$#heatmap]"],["",";\n                }\n                "],["Conditional","if"],[""," ("],["Identifier","$marker"],["",") {\n                    "],["Identifier","$marker"],[""," = "],["Statement","substr"],["","("],["Identifier","$marker"],["",", "],["Statement","length"],["","("],["Identifier","$src"],["",")-"],["Identifier","$window_width"],["",", "],["Identifier","$window_width"],["",");\n                }\n                "],["Identifier","$src"],["","       = "],["Statement","substr"],["","("],["Identifier","$src"],["",", -"],["Identifier","$window_width"],["",");\n                "],["Statement","substr"],["","("],["Identifier","$src"],["",","],["Number","0"],["",","],["Number","3"],["",","],["String","q{...}"],["",");\n            }\n            "],["Comment","# In the middle of the string, centre the window on the position..."],["","\n            "],["Conditional","else"],[""," {\n                "],["Identifier","$src"],["","        = "],["Statement","substr"],["","("],["Identifier","$src"],["",", "],["Identifier","$pos"],["","-"],["Identifier","$mid_window"],["","+"],["Number","1"],["",", "],["Identifier","$window_width"],["",");\n                "],["Conditional","if"],[""," ("],["Identifier","@heatmap"],["",") {\n                    "],["Identifier","@heatmap"],["","= "],["Statement","splice"],["","("],["Identifier","@heatmap"],["",", "],["Identifier","$pos"],["","-"],["Identifier","$mid_window"],["","+"],["Number","1"],["",", "],["Identifier","$window_width"],["",");\n                }\n                "],["Conditional","if"],[""," ("],["Identifier","$marker"],["",") {\n                    "],["Identifier","$marker"],[""," = "],["Statement","substr"],["","("],["Identifier","$marker"],["",", "],["Identifier","$pos"],["","-"],["Identifier","$mid_window"],["","+"],["Number","1"],["",", "],["Identifier","$window_width"],["",");\n                }\n                "],["Identifier","$start_pos"],[""," -= "],["Identifier","$pos"],["",";\n                "],["Identifier","$pos"],["","        = "],["Identifier","$window_width"],["","/"],["Number","2"],["",";\n                "],["Identifier","$start_pos"],[""," += "],["Identifier","$pos"],["",";\n                "],["Statement","substr"],["","("],["Identifier","$src"],["",","],["Number","0"],["",","],["Number","3"],["",","],["String","q{...}"],["",");\n                "],["Statement","substr"],["","("],["Identifier","$src"],["",",-"],["Number","3"],["",","],["Number","3"],["",","],["String","q{...}"],["",");\n            }\n        }\n    }\n\n    "],["Comment","# Convert to heatmap, if requested..."],["","\n    "],["Conditional","if"],[""," ("],["Identifier","@heatmap"],["",") {\n        "],["Identifier","$src"],[""," = _build_heatmap("],["Identifier","$src"],["",", \\"],["Identifier","@heatmap"],["",");\n    }\n    "],["Conditional","elsif"],[""," ("],["Identifier","$ws_colour"],["",") {\n        "],["Identifier","$src"],[""," = _ws_colourer("],["Identifier","$src"],["",");\n    }\n\n    "],["Comment","# Trim trailing whitespace from marker..."],["","\n    "],["Repeat","while"],[""," ("],["Identifier","$marker"],[""," && "],["Statement","substr"],["","("],["Identifier","$marker"],["",",-"],["Number","1"],["",") "],["Operator","eq"],[""," "],["String","q{ }"],["",") {\n        "],["Statement","substr"],["","("],["Identifier","$marker"],["",", -"],["Number","1"],["",") = "],["String","q{}"],["",";\n    }\n\n    "],["Statement","return"],[""," ("],["Identifier","$src"],["",", "],["Identifier","$pos"],["",", max("],["Identifier","$start_pos"],["",","],["Number","0"],["","), "],["Identifier","$marker"],["",");\n}\n\n"],["Comment","# Colour message appropriately..."],["","\n"],["Keyword","sub "],["Function","_fail_colourer  "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$str"],["",", "],["Identifier","$ws_colouring"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$colourer"],[""," = "],["Identifier","$ws_colouring"],[""," ? \\"],["Identifier","&_ws_colourer"],[""," : \\"],["Identifier","&"],["Type","Term::ANSIColor::"],["Identifier","colored"],["",";\n    "],["Statement","return"],[""," "],["Identifier","$colourer"],["","->("],["Identifier","$str"],["",", "],["Identifier","$lexical_config->{"],["String","fail_col"],["Identifier","}"],["",");\n}\n\n"],["Keyword","sub "],["Function","_info_colourer  "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$str"],["",", "],["Identifier","$ws_colouring"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$colourer"],[""," = "],["Identifier","$ws_colouring"],[""," ? \\"],["Identifier","&_ws_colourer"],[""," : \\"],["Identifier","&"],["Type","Term::ANSIColor::"],["Identifier","colored"],["",";\n    "],["Statement","return"],[""," "],["Identifier","$colourer"],["","->("],["Identifier","$str"],["",", "],["Identifier","$lexical_config->{"],["String","info_col"],["Identifier","}"],["",");\n}\n\n"],["Keyword","sub "],["Function","_try_colourer "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$str"],["",", "],["Identifier","$extras"],["",", "],["Identifier","$ws_colouring"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$extras"],[""," //= "],["String","q{}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$colourer"],[""," = "],["Identifier","$ws_colouring"],[""," ? \\"],["Identifier","&_ws_colourer"],[""," : \\"],["Identifier","&"],["Type","Term::ANSIColor::"],["Identifier","colored"],["",";\n    "],["Statement","return"],[""," "],["Identifier","$colourer"],["","->("],["Identifier","$str"],["",", "],["String","\""],["Identifier","$lexical_config->{"],["String","try_col"],["Identifier","}"],["String"," "],["Identifier","$extras"],["String","\""],["",");\n}\n\n"],["Keyword","sub "],["Function","_match_colourer "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$str"],["",", "],["Identifier","$extras"],["",", "],["Identifier","$ws_colouring"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$extras"],[""," //= "],["String","q{}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$colourer"],[""," = "],["Identifier","$ws_colouring"],[""," ? \\"],["Identifier","&_ws_colourer"],[""," : \\"],["Identifier","&"],["Type","Term::ANSIColor::"],["Identifier","colored"],["",";\n    "],["Statement","return"],[""," "],["Identifier","$colourer"],["","->("],["Identifier","$str"],["",", "],["String","\""],["Identifier","$lexical_config->{"],["String","match_col"],["Identifier","}"],["String"," "],["Identifier","$extras"],["String","\""],["",");\n}\n\n"],["Statement","my"],[""," "],["Identifier","%DISPLAY_FOR"],[""," = (\n    "],["String","\""],["Special","\\n"],["String","\""],[""," => "],["String","'n'"],["",",\n    "],["String","\""],["Special","\\t"],["String","\""],[""," => "],["String","'t'"],["",",\n    "],["String","\""],["Special","\\r"],["String","\""],[""," => "],["String","'r'"],["",",\n    "],["String","\""],["Special","\\f"],["String","\""],[""," => "],["String","'f'"],["",",\n    "],["String","\""],["Special","\\b"],["String","\""],[""," => "],["String","'b'"],["",",\n    "],["String","\""],["Special","\\a"],["String","\""],[""," => "],["String","'a'"],["",",\n    "],["String","\""],["Special","\\e"],["String","\""],[""," => "],["String","'e'"],["",",\n    "],["String","\""],["Special","\\0"],["String","\""],[""," => "],["String","'0'"],["",",\n);\n\n"],["Keyword","sub "],["Function","_ws_colourer "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$str"],["",", "],["Identifier","$colour_scheme"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Comment","# How to colour the text..."],["","\n    "],["Identifier","$colour_scheme"],[""," //= "],["String","'clear'"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$ws_colour_scheme"],[""," = "],["String","\""],["Identifier","$colour_scheme"],["String"," "],["Identifier","$lexical_config->{"],["String","ws_col"],["Identifier","}"],["String","\""],["",";\n\n    "],["Comment","# Accumulate the text..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$coloured_str"],[""," = "],["String","q{}"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$prefix"],[""," = "],["String","q{}"],["",";\n\n    "],["Comment","# Step through char-by-char..."],["","\n"],["Label","    CHAR:"],["","\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$n"],[""," ("],["Float","0."],["","."],["Statement","length"],["","("],["Identifier","$str"],["",")-"],["Number","1"],["",") {\n        "],["Statement","my"],[""," "],["Identifier","$char"],[""," = "],["Statement","substr"],["","("],["Identifier","$str"],["",", "],["Identifier","$n"],["",", "],["Number","1"],["",");\n\n        "],["Comment","# If it's special, handle it..."],["","\n        "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$special_char"],[""," ("],["Statement","keys"],[""," "],["Identifier","%DISPLAY_FOR"],["",") {\n            "],["Conditional","if"],[""," ("],["Identifier","$char"],[""," "],["Operator","eq"],[""," "],["Identifier","$special_char"],["",") {\n                "],["Conditional","if"],[""," ("],["Statement","length"],["","("],["Identifier","$prefix"],["",")) {\n                    "],["Identifier","$coloured_str"],[""," .= Term::ANSIColor::colored("],["Identifier","$prefix"],["",", "],["Identifier","$colour_scheme"],["",");\n                    "],["Identifier","$prefix"],[""," = "],["String","q{}"],["",";\n                }\n                "],["Identifier","$coloured_str"],[""," .= Term::ANSIColor::colored("],["Identifier","$DISPLAY_FOR{$special_char}"],["",", "],["Identifier","$ws_colour_scheme"],["",");\n                "],["Statement","next"],[""," CHAR;\n            }\n        }\n\n        "],["Comment","# Otherwise, accumulate it..."],["","\n        "],["Identifier","$prefix"],[""," .= "],["Identifier","$char"],["",";\n    }\n\n    "],["Comment","# Clean up any remaining text..."],["","\n    "],["Conditional","if"],[""," ("],["Statement","length"],["","("],["Identifier","$prefix"],["",")) {\n        "],["Identifier","$coloured_str"],[""," .= Term::ANSIColor::colored("],["Identifier","$prefix"],["",", "],["Identifier","$colour_scheme"],["",");\n    }\n\n    "],["Statement","return"],[""," "],["Identifier","$coloured_str"],["",";\n}\n\n"],["Keyword","sub "],["Function","_colourer_for "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$msg"],[""," = "],["Statement","shift"],["",";\n\n    "],["Conditional","if"],[""," ("],["Statement","index"],["","("],["Identifier","$msg"],["",","],["String","'forgetting'"],["",") >= "],["Number","0"],[""," || "],["Statement","index"],["","("],["Identifier","$msg"],["",","],["String","'Forgetting'"],["",") >= "],["Number","0"],["",") {\n        "],["Statement","return"],[""," \\"],["Identifier","&_info_colourer"],["",";\n    }\n    "],["Conditional","if"],[""," ("],["Statement","index"],["","("],["Identifier","$msg"],["",","],["String","'try'"],["",") >= "],["Number","0"],[""," || "],["Statement","index"],["","("],["Identifier","$msg"],["",","],["String","'Try'"],["",") >= "],["Number","0"],["",") {\n        "],["Statement","return"],[""," \\"],["Identifier","&_try_colourer"],["",";\n    }\n    "],["Conditional","if"],[""," ("],["Statement","index"],["","("],["Identifier","$msg"],["",","],["String","'failed'"],["",") >= "],["Number","0"],[""," || "],["Statement","index"],["","("],["Identifier","$msg"],["",","],["String","'Failed'"],["",") >= "],["Number","0"],["",") {\n        "],["Statement","return"],[""," \\"],["Identifier","&_fail_colourer"],["",";\n    }\n    "],["Conditional","if"],[""," ("],["Statement","index"],["","("],["Identifier","$msg"],["",","],["String","'matched'"],["",") >= "],["Number","0"],[""," || "],["Statement","index"],["","("],["Identifier","$msg"],["",","],["String","'Matched'"],["",") >= "],["Number","0"],["",") {\n        "],["Statement","return"],[""," \\"],["Identifier","&_match_colourer"],["",";\n    }\n    "],["Statement","return"],[""," \\"],["Identifier","&_info_colourer"],["",";\n}\n\n"],["Comment","# Set up interaction as spiffily as possible..."],["","\n\n"],["Conditional","if"],[""," ("],["Statement","eval"],["","{ "],["Statement","require"],[""," Term::ReadKey }) {\n    *_interact = "],["Keyword","sub "],["","{\n        "],["Comment","# No interactions when piping output to a filehandle..."],["","\n        "],["Statement","return"],[""," "],["String","'c'"],[""," "],["Conditional","if"],[""," "],["Identifier","$lexical_config->{"],["String","save_to_fh"],["Identifier","}"],["",";\n\n        "],["Comment","# Otherwise grab a single key and return it..."],["","\n        Term::ReadKey::ReadMode("],["String","'raw'"],["",");\n        "],["Statement","my"],[""," "],["Identifier","$input"],[""," = Term::ReadKey::ReadKey("],["Number","0"],["",");\n        Term::ReadKey::ReadMode("],["String","'restore'"],["",");\n        "],["Statement","return"],[""," "],["Identifier","$input"],["",";\n    }\n}\n"],["Conditional","else"],[""," {\n    *_interact = "],["Keyword","sub "],["","{\n        "],["Comment","# No interactions when piping output to a filehandle..."],["","\n        "],["Statement","return"],[""," "],["String","'c'"],[""," "],["Conditional","if"],[""," "],["Identifier","$lexical_config->{"],["String","save_to_fh"],["Identifier","}"],["",";\n\n        "],["Comment","# Otherwise return the first letter typed..."],["","\n        "],["Statement","my"],[""," "],["Identifier","$input"],[""," = "],["Statement","readline"],["",";\n        "],["Statement","return"],[""," "],["Statement","substr"],["","("],["Identifier","$input"],["",", "],["Number","0"],["",", "],["Number","1"],["",");\n    }\n}\n\n\n"],["Comment","#====[ REPL (a.k.a. rxrx) ]======================="],["","\n\n"],["Comment","# Deal with v5.16 weirdness..."],["","\n"],["PreProc","BEGIN "],["","{\n    "],["Conditional","if"],[""," ("],["Identifier","$]"],[""," >= "],["Float","5.016"],["",") {\n        "],["Statement","require"],[""," feature;\n        feature->"],["Statement","import"],["","("],["String","'evalbytes'"],["",");\n        *evaluate = \\"],["Identifier","&"],["Type","CORE::"],["Identifier","evalbytes"],["",";\n    }\n    "],["Conditional","else"],[""," {\n        *evaluate = "],["Keyword","sub"],["","{ "],["Statement","eval"],[""," "],["Statement","shift"],[""," };\n    }\n}\n\n"],["Statement","my"],[""," "],["Identifier","$FROM_START"],[""," = "],["Number","0"],["",";\n\n"],["Keyword","sub "],["Function","rxrx "],["","{\n    "],["Comment","# Handle: rxrx <filename>"],["","\n    "],["Conditional","if"],[""," ("],["Identifier","@_"],["",") {\n        "],["Statement","local"],[""," "],["Identifier","@ARGV"],[""," = "],["Identifier","@_"],["",";\n\n        "],["Comment","# If file is a debugger dump, decode and step through it..."],["","\n        "],["Statement","my"],[""," "],["Identifier","$filetext"],[""," = "],["Operator","do"],[""," { "],["Statement","local"],[""," "],["Identifier","$/"],["","; <> };\n        "],["Statement","my"],[""," "],["Identifier","$dumped_data"],[""," = "],["Statement","eval"],[""," { "],["Identifier","$JSON_decoder"],["","->("],["Identifier","$filetext"],["",") };\n        "],["Conditional","if"],[""," ("],["Operator","ref"],["","("],["Identifier","$dumped_data"],["",") "],["Operator","eq"],[""," "],["String","'HASH'"],[""," && "],["Operator","defined"],[""," "],["Identifier","$dumped_data->{"],["String","regex_ID"],["Identifier","}"],[""," ) {\n            "],["Comment","# Reconstruct internal state..."],["","\n            "],["Statement","my"],[""," "],["Identifier","$regex_ID"],["","                = "],["Identifier","$dumped_data->{"],["String","regex_ID"],["Identifier","}"],["",";\n            "],["Identifier","%history_of"],["","                 = "],["Identifier","%{"],[""," "],["Identifier","$dumped_data->{"],["String","visualization"],["Identifier","}"],[""," "],["Identifier","}"],["",";\n            "],["Identifier","$history_of{"],["String","match_heatmap"],["Identifier","}"],["","  = "],["Identifier","$dumped_data->{"],["String","match_heatmap"],["Identifier","}"],["",";\n            "],["Identifier","$history_of{"],["String","string_heatmap"],["Identifier","}"],[""," = "],["Identifier","$dumped_data->{"],["String","string_heatmap"],["Identifier","}"],["",";\n            "],["Identifier","$display_mode"],["","               = "],["Identifier","$dumped_data->{"],["String","config"],["Identifier","}{"],["String","display_mode"],["Identifier","}"],["",";\n            "],["Identifier","$state{$regex_ID}{"],["String","location"],["Identifier","}"],[""," = "],["Identifier","$dumped_data->{"],["String","regex_location"],["Identifier","}"],["",";\n\n            "],["Comment","# Display..."],["","\n            "],["Statement","my"],[""," "],["Identifier","$step"],[""," = "],["Identifier","$FROM_START"],["",";\n            "],["Statement","my"],[""," "],["Identifier","$cmd"],["",";\n            "],["Repeat","while"],[""," ("],["Number","1"],["",") {\n                ("],["Identifier","$cmd"],["",", "],["Identifier","$step"],["",") = _revisualize("],["Identifier","$regex_ID"],["",", "],["Identifier","$step"],["",");\n                "],["Statement","last"],[""," "],["Conditional","if"],[""," "],["Identifier","$cmd"],[""," =~ "],["Statement","/"],["Special","[q]"],["Statement","/i"],["",";\n                "],["Identifier","$step"],[""," = min("],["Identifier","$step"],["",", "],["Identifier","@{$history_of{"],["String","visual"],["Identifier","}}"],["","-"],["Number","1"],["",");\n            }\n            "],["Statement","exit"],["",";\n        }\n\n        "],["Comment","# Otherwise, assume it's a perl source file and debug it..."],["","\n        "],["Conditional","else"],[""," {\n            "],["Statement","exec"],[""," "],["Identifier","$^X"],["",", "],["String","'-MRegexp::Debugger'"],["",", "],["Identifier","@_"],["","\n                "],["Operator","or"],[""," "],["Statement","die"],[""," "],["String","\"Couldn't invoke perl: "],["Identifier","$!"],["String","\""],["",";\n        }\n    }\n\n    "],["Comment","# Otherwise, be interactive..."],["","\n\n    "],["Comment","# Track input history..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$str_history"],["","   = [];\n    "],["Statement","my"],[""," "],["Identifier","$regex_history"],[""," = [];\n\n    "],["Comment","# Start with empty data..."],["","\n    "],["Statement","my"],[""," "],["Identifier","$input_regex"],[""," = "],["String","''"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$regex"],["","       = "],["String","''"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$regex_flags"],[""," = "],["String","''"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$string"],["","      = "],["String","''"],["",";\n\n    "],["Comment","# And display it..."],["","\n    _display("],["Identifier","$string"],["",", "],["Identifier","$input_regex"],["",","],["String","q{}"],["",");\n\n"],["Label","    INPUT:"],["","\n    "],["Repeat","while"],[""," ("],["Number","1"],["",") {\n        "],["Statement","my"],[""," "],["Identifier","$input"],[""," = _prompt("],["String","'>'"],["",");\n\n        "],["Comment","# String history mode?"],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$input"],[""," =~ "],["Statement","/"],["String","^"],["Special","['\"]"],["String","$"],["Statement","/"],["",") {\n            "],["Identifier","$input"],[""," = _rxrx_history("],["Identifier","$str_history"],["",");\n        }\n\n        "],["Comment","# Regex history mode?"],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," "],["Operator","eq"],[""," "],["String","'/'"],["",") {\n            "],["Identifier","$input"],[""," = _rxrx_history("],["Identifier","$regex_history"],["",");\n        }\n\n        "],["Comment","# Are we updating the regex or string???"],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$input"],[""," =~ "],["Statement","m{"],["String","^ "],["Special","(?"],["String","<cmd> "],["Special","[/\"'])"],["String","  "],["Special","(?"],["String","<data> "],["Special",".*?)"],["String"," "],["Special","(?"],["String","<endcmd> "],["Special","\\k<cmd>"],["String"," "],["Special","(?"],["String","<flags> "],["Special","[imsxlaud]*)"],["String"," "],["Special",")?"],["String"," "],["Special","\\s*"],["String","  "],["Special","\\z"],["String"," "],["Statement","}x"],["",") {\n\n            "],["Comment","# Compile and save the new regex..."],["","\n            "],["Conditional","if"],[""," ("],["Identifier","$+"],["","{cmd} "],["Operator","eq"],[""," "],["String","q{/}"],["",") {\n                "],["Conditional","if"],[""," ("],["Identifier","$+"],["","{data} "],["Operator","eq"],[""," "],["String","q{}"],["",") {\n                    "],["Statement","state"],[""," "],["Identifier","$NULL_REGEX"],[""," = "],["Statement","eval"],[""," "],["String","q{use Regexp::Debugger; qr{(?#NULL)}; }"],["",";\n                    "],["Identifier","$regex"],[""," = "],["Identifier","$NULL_REGEX"],["",";\n                }\n                "],["Conditional","else"],[""," {\n                    "],["Identifier","$input_regex"],[""," = "],["Identifier","$+"],["","{data};\n                    "],["Identifier","$regex_flags"],[""," = "],["Identifier","$+"],["","{flags} // "],["String","'x'"],["",";\n                    "],["Identifier","$regex"],[""," = evaluate "],["String","qq{"],["Special","\\n"],["String","# line 0 rxrx"],["Special","\\n"],["String","use Regexp::Debugger; qr{"],["Identifier","$+"],["String","{data}}"],["Identifier","$regex_flags"],["String",";}"],["",";\n                }\n\n                "],["Comment","# Report any errors..."],["","\n                "],["Statement","print"],[""," "],["String","\""],["Identifier","$@"],["Special","\\n"],["String","\""],[""," "],["Conditional","if"],[""," "],["Identifier","$@"],["",";\n                "],["Statement","print"],[""," "],["String","\"Invalid input"],["Special","\\n"],["String","\""],[""," "],["Conditional","if"],[""," !"],["Operator","defined"],[""," "],["Identifier","$regex"],["",";\n\n                "],["Comment","# Remember it..."],["","\n                "],["Statement","push"],[""," "],["Identifier","@{$regex_history}"],["",", "],["Identifier","$input"],["",";\n            }\n\n            "],["Comment","# Otherwise compile the string (interpolated or not)..."],["","\n            "],["Conditional","elsif"],[""," ("],["Identifier","$+"],["","{cmd} "],["Operator","eq"],[""," "],["String","q{\"}"],["",") {\n                "],["Identifier","$string"],[""," = evaluate "],["String","qq{\""],["Identifier","$+"],["String","{data}\"}"],["",";\n\n                "],["Comment","# Report any errors..."],["","\n                "],["Statement","print"],[""," "],["String","\""],["Identifier","$@"],["Special","\\n"],["String","\""],[""," "],["Conditional","if"],[""," "],["Identifier","$@"],["",";\n                "],["Statement","print"],[""," "],["String","\"Invalid input"],["Special","\\n"],["String","\""],[""," "],["Conditional","if"],[""," !"],["Operator","defined"],[""," "],["Identifier","$string"],["",";\n\n                "],["Comment","# Remember it..."],["","\n                "],["Statement","push"],[""," "],["Identifier","@{$str_history}"],["",", "],["Identifier","$input"],["",";\n            }\n            "],["Conditional","elsif"],[""," ("],["Identifier","$+"],["","{cmd} "],["Operator","eq"],[""," "],["String","q{'}"],["",") {\n                "],["Identifier","$string"],[""," = evaluate "],["String","qq{'"],["Identifier","$+"],["String","{data}'}"],["",";\n\n                "],["Comment","# Report any errors..."],["","\n                "],["Statement","print"],[""," "],["String","\""],["Identifier","$@"],["Special","\\n"],["String","\""],[""," "],["Conditional","if"],[""," "],["Identifier","$@"],["",";\n                "],["Statement","print"],[""," "],["String","\"Invalid input"],["Special","\\n"],["String","\""],[""," "],["Conditional","if"],[""," !"],["Operator","defined"],[""," "],["Identifier","$string"],["",";\n\n                "],["Comment","# Remember it..."],["","\n                "],["Statement","push"],[""," "],["Identifier","@{$str_history}"],["",", "],["Identifier","$input"],["",";\n            }\n        }\n\n        "],["Comment","# Quit if quitting requested..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," =~ "],["Statement","/"],["String","^ "],["Special","\\s*"],["String"," "],["Special","[xXqQ]"],["Statement","/x"],["",") {\n            "],["Statement","say"],[""," "],["String","q{}"],["",";\n            "],["Statement","last"],[""," INPUT;\n        }\n\n        "],["Comment","# Help..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," =~ "],["Statement","/"],["String","^ "],["Special","\\s*"],["String"," "],["Special","[?hH]"],["Statement","/x"],["",") {\n            "],["Statement","print"],[""," "],["String","\""],["Special","\\n"],["String","\""],[""," x "],["Number","2"],["",";\n            "],["Statement","say"],[""," "],["String","'____________________________________________/ Help \\____'"],["",";\n            "],["Statement","say"],[""," "],["String","'                                         '"],["",";\n            "],["Statement","say"],[""," "],["String","'     / : Enter a pattern'"],["",";\n            "],["Statement","say"],[""," "],["String","\"     ' : Enter a new literal string\""],["",";\n            "],["Statement","say"],[""," "],["String","'     \" : Enter a new double-quoted string'"],["",";\n            "],["Conditional","if"],[""," ("],["Statement","eval"],[""," { "],["Statement","require"],[""," IO::Prompter }) {\n                "],["Statement","say"],[""," "],["String","''"],["",";\n                "],["Statement","say"],[""," "],["String","'CTRL-R : History completion - move backwards one input'"],["",";\n                "],["Statement","say"],[""," "],["String","'CTRL-N : History completion - move forwards one input'"],["",";\n                "],["Statement","say"],[""," "],["String","''"],["",";\n                "],["Statement","say"],[""," "],["String","'CTRL-B : Cursor motion - move back one character'"],["",";\n                "],["Statement","say"],[""," "],["String","'CTRL-F : Cursor motion - move forwards one character'"],["",";\n                "],["Statement","say"],[""," "],["String","'CTRL-A : Cursor motion - move to start of input'"],["",";\n                "],["Statement","say"],[""," "],["String","'CTRL-E : Cursor motion - move to end of input'"],["",";\n            }\n            "],["Statement","say"],[""," "],["String","''"],["",";\n            "],["Statement","say"],[""," "],["String","'     m : Match current string against current pattern'"],["",";\n            "],["Statement","say"],[""," "],["String","''"],["",";\n            "],["Statement","say"],[""," "],["String","'q or x : quit debugger and exit'"],["",";\n            "],["Statement","next"],[""," INPUT;\n        }\n\n        "],["Comment","# Visualize the match..."],["","\n        "],["Conditional","elsif"],[""," ("],["Identifier","$input"],[""," =~ "],["Statement","/"],["String","m"],["Statement","/i"],["",") {\n            "],["Identifier","$string"],[""," =~ "],["Identifier","$regex"],["",";\n        }\n\n        "],["Comment","# Redisplay the new regex and/or string..."],["","\n        "],["Conditional","if"],[""," ("],["Operator","defined"],[""," "],["Identifier","$string"],[""," && "],["Operator","defined"],[""," "],["Identifier","$input_regex"],["",") {\n            _display("],["Identifier","$string"],["",", "],["Identifier","$input_regex"],["",", "],["Identifier","$regex_flags"],["",");\n        }\n    }\n}\n\n"],["Comment","# Lay out the regex and string as does Regexp::Debugger..."],["","\n"],["Keyword","sub "],["Function","_display "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$string"],["",", "],["Identifier","$regex"],["",", "],["Identifier","$flags"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","say"],[""," "],["String","\""],["Special","\\n"],["String","\""],[""," x "],["Number","100"],["",";\n    "],["Statement","say"],[""," Term::ANSIColor::colored("],["String","'regex:'"],["",", "],["String","'white'"],["",");\n    "],["Statement","say"],[""," "],["String","qq{/"],["Identifier","$regex"],["String","/"],["Identifier","$flags"],["Special","\\n\\n\\n"],["String","}"],["",";\n    "],["Statement","say"],[""," Term::ANSIColor::colored("],["String","'string:'"],["",", "],["String","'white'"],["",");\n    "],["Statement","say"],[""," "],["String","q{'}"],[""," . _ws_colourer("],["Identifier","$string"],["",") . "],["String","qq{'"],["Special","\\n\\n\\n"],["String","}"],["",";\n}\n\n\n"],["Comment","# Make whitespace characters visible (without using a regex)..."],["","\n"],["Keyword","sub "],["Function","_quote_ws "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$str"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$index"],["",";\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$ws_char"],[""," ( ["],["String","\""],["Special","\\n"],["String","\""],["","=>"],["String","'\\n'"],["","], ["],["String","\""],["Special","\\t"],["String","\""],["","=>"],["String","'\\n'"],["","] ) {\n"],["Label","        SEARCH:"],["","\n        "],["Repeat","while"],[""," ("],["Number","1"],["",") {\n            "],["Identifier","$index"],[""," = "],["Statement","index"],["","("],["Identifier","$str"],["",", "],["Identifier","$ws_char->["],["Number","0"],["Identifier","]"],["",");\n            "],["Statement","last"],[""," SEARCH "],["Conditional","if"],[""," "],["Identifier","$index"],[""," < "],["Number","0"],["",";\n            "],["Statement","substr"],["","("],["Identifier","$str"],["",", "],["Identifier","$index"],["",", "],["Number","1"],["",", "],["Identifier","$ws_char->["],["Number","1"],["Identifier","]"],["",");\n        }\n    }\n\n    "],["Statement","return"],[""," "],["Identifier","$str"],["",";\n}\n\n"],["Comment","# Hi-res sleep..."],["","\n"],["Keyword","sub "],["Function","_pause "],["","{\n    "],["Statement","select"],[""," "],["Operator","undef"],["",", "],["Operator","undef"],["",", "],["Operator","undef"],["",", "],["Statement","shift"],["",";\n}\n\n"],["Comment","# Simple prompter..."],["","\n*_prompt = "],["Statement","eval"],[""," { "],["Statement","require"],[""," IO::Prompter }\n    ? "],["Keyword","sub "],["","{\n            "],["Statement","return"],[""," IO::Prompter::prompt("],["Identifier","@_"],["",")\n      }\n    : "],["Keyword","sub "],["","{\n            "],["Statement","my"],[""," ("],["Identifier","$prompt"],["",") = "],["Identifier","@_"],["",";\n\n            "],["Statement","print"],[""," "],["String","\""],["Identifier","$prompt"],["String"," \""],["",";\n            "],["Statement","my"],[""," "],["Identifier","$input"],[""," = "],["Statement","readline"],[""," *STDIN;\n            "],["Statement","chomp"],[""," "],["Identifier","$input"],["",";\n            "],["Statement","return"],[""," "],["Identifier","$input"],["",";\n      };\n\n\n"],["Number","1"],["","; "],["Comment","# Magic true value required at end of module"],["","\n"],["Comment","__END__"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nRegexp::Debugger - Visually debug regexes in-place\n\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nThis document describes Regexp::Debugger version 0.001016\n\n\n"],["Statement","=head1"],[""," "],["String","SYNOPSIS"],["","\n\n"],["PreProc","    use Regexp::Debugger;"],["","\n\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nWhen you load this module, any regex in the same lexical scope will be visually\n(and interactively) debugged as it matches.\n\n\n"],["Statement","=head1"],[""," "],["String","INTERFACE"],["","\n\nThe module itself provides no API.\nYou load it and the debugger is automatically\nactivated in that lexical scope.\n\nThe debugger offers the following commands:\n\n"],["Statement","=over"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","C<?>"],["","\n\n: Print a help message listing these commands\n\n"],["Statement","=item"],[""," "],["Identifier","C<s>"],["","\n\n: Step forwards\n\n"],["Statement","=item"],[""," "],["Identifier","C<->"],["","\n\n: Step backwards\n\n"],["Statement","=item"],[""," "],["Identifier","C<m>"],["","\n\n: Continue forward to the next event that matches something\n\n"],["Statement","=item"],[""," "],["Identifier","C<f>"],["","\n\n: Continue forward to the next event that fails to match something\n\n"],["Statement","=item"],[""," "],["Identifier","C<c>"],["","\n\n: Continue forward until the regex matches or completely backtracks\n\n"],["Statement","=item"],[""," "],["Identifier","C<< <RETURN>/<ENTER> >>"],["","\n\n: Repeat the previous command\n\n"],["Statement","=item"],[""," "],["Identifier","C<v>"],["","\n\n: Switch to visualization mode\n\n"],["Statement","=item"],[""," "],["Identifier","C<h>"],["","\n\n: Switch to heatmapped visualization log\n\n"],["Statement","=item"],[""," "],["Identifier","C<e>"],["","\n\n: Switch to the event log\n\n"],["Statement","=item"],[""," "],["Identifier","C<j>"],["","\n\n: Switch to the underlying JSON data\n\n"],["Statement","=item"],[""," "],["Identifier","C<d>"],["","\n\n: Describe each component of the regex in detail\n\n"],["Statement","=item"],[""," "],["Identifier","C<V>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","C<H>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","C<H>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","C<J>"],["","\n\n: Take a snapshot of the corresponding display mode.\n\nWhen prompted for a filename:\n\n"],["Statement","=over"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","C<< <RET> >>"],["","\n\n...prints the snapshot to the terminal\n\n"],["Statement","=item"],[""," "],["Identifier","C<< <TAB> >>"],["","\n\n...prints the snapshot to a file named \"./rxrx_"],["Identifier","I<DISPLAY_MODE>"],["","_"],["Identifier","I<TIMESTAMP>"],["","\"\n\n"],["Statement","=item"],[""," "],["String","Anything else"],["","\n\n...prints the snapshot to that file\n\n"],["Statement","=back"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","C<q>"],["","\n\n: Quit the debugger and finish matching this regex without any further\n  visualization. The program continues to execute and other regexes may\n  still be debugged.\n\n"],["Statement","=item"],[""," "],["Identifier","C<x>"],["","\n\n: Exit the debugger and the entire program immediately.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","CONFIGURATION"],["","\n\nYou can configure the debugger by setting up a "],["Identifier","F<.rxrx>"],[""," file in\nin the current directory or in your home directory. This configuration\nconsists of "],["Identifier","I<key>"],["",":"],["Identifier","I<value>"],[""," pairs\n(everything else in the file is silently ignored).\n\n"],["Statement","=head2"],[""," "],["String","Display mode configuration"],["","\n\nIf the "],["Identifier","C<C<'display'>>"],[""," key is specified, the debugger starts in that\nmode. The four available modes are:\n\n"],["PreProc","    # Show dynamic visualization of matching (the default)..."],["","\n"],["PreProc","    display : visual"],["","\n\n"],["PreProc","    # Show dynamic heatmap visualization of matching..."],["","\n"],["PreProc","    display : heatmap"],["","\n\n"],["PreProc","    # Show multi-line matching event log..."],["","\n"],["PreProc","    display : events"],["","\n\n"],["PreProc","    # Show JSON encoding of matching process..."],["","\n"],["PreProc","    display : JSON"],["","\n\n\n"],["Statement","=head2"],[""," "],["String","Whitespace display configuration"],["","\n\nNormally, the debugger compacts whitespaces in the regex down to a\nsingle space character, but you can configure that with the\n"],["Identifier","C<show_ws>"],[""," key:\n\n"],["PreProc","    # Compact whitespace and comments to a single space (the default)..."],["","\n"],["PreProc","    show_ws : compact"],["","\n\n"],["PreProc","    # Compact whitespace, but show comments, newlines (\\n), and tabs (\\t)..."],["","\n"],["PreProc","    show_ws : visible"],["","\n\n"],["PreProc","    # Don't compact whitespace, and show newlines and tabs as \\n and \\t..."],["","\n"],["PreProc","    show_ws : original"],["","\n\n\n"],["Statement","=head2"],[""," "],["String","Colour configuration"],["","\n\nThe following keys reconfigure the colours with which the debugger\ndisplays various information:\n\n"],["Statement","=head3"],[""," "],["String","Colours for debugging information"],["","\n\n"],["Statement","=over"],["","\n\n"],["Statement","=item"],[""," "],["String","*"],["","\n\n"],["Identifier","C<try_col>"],["","\n\nThe colour in which attempts to match part of the regex are reported\n\n"],["Statement","=item"],[""," "],["String","*"],["","\n\n"],["Identifier","C<match_col>"],["","\n\nThe colour in which successful matches of part of the regex are reported\n\n"],["Statement","=item"],[""," "],["String","*"],["","\n\n"],["Identifier","C<fail_col>"],["","\n\nThe colour in which unsuccessful matches of part of the regex are reported\n\n"],["Statement","=item"],[""," "],["String","*"],["","\n\n"],["Identifier","C<ws_col>"],["","\n\nThe colour in which special characters (such as \"\\n\", \"\\t\", \"\\e\", etc.)\nare reported (as single letters: 'n', 't', 'e', etc.)\n\n"],["Statement","=item"],[""," "],["String","*"],["","\n\n"],["Identifier","C<info_col>"],["","\n\nThe colour in which other information is reported\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head3"],[""," "],["String","Colours for regex descriptions"],["","\n\n"],["Statement","=over"],["","\n\n"],["Statement","=item"],[""," "],["String","*"],["","\n\n"],["Identifier","C<desc_regex_col>"],["","\n\nThe colour in which components of the regex are displayed\n\n"],["Statement","=item"],[""," "],["String","*"],["","\n\n"],["Identifier","C<desc_text_col>"],["","\n\nThe colour in which descriptions of regex components are displayed\n\n"],["Statement","=item"],[""," "],["String","*"],["","\n\n"],["Identifier","C<desc_sep_col>"],["","\n\nThe colour in which separators between component descriptions are displayed.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head3"],[""," "],["String","Colours for heatmaps"],["","\n\nAny key that starts with "],["Identifier","C<heatmap>"],["","... is treated as a specifier for an\nequal part of the total range of each heatmap.\n\nThese names are sorted (numerically, if possible; otherwise\nalphabetically) and the corresponding values are then used to display\nequal percentiles from the heatmap.\n\nFor example (using numeric sorting):\n\n"],["PreProc","    heatmap_0_colour      : cyan   on_black   #  0-33rd  percentile"],["","\n"],["PreProc","    heatmap_50_colour     : yellow on_black   # 34-66th  percentile"],["","\n"],["PreProc","    heatmap_100_colour    : red    on_black   # 67-100th percentile"],["","\n\nOr, equivalently (using alphabetic sorting):\n\n"],["PreProc","    heatmap_infrequent    : cyan   on_black   #  0-33rd  percentile"],["","\n"],["PreProc","    heatmap_more_frequent : yellow on_black   # 34-66th  percentile"],["","\n"],["PreProc","    heatmap_very_frequent : red    on_black   # 67-100th percentile"],["","\n\n\n"],["Statement","=head3"],[""," "],["String","Colour specifications"],["","\n\nThe colour values that may be used in any of the above colour\nspecifications are any combination of the following (i.e. the\ncolour specifiers supported by the Term::ANSIColor module):\n\n"],["PreProc","         clear           reset             bold            dark"],["","\n"],["PreProc","         faint           underline         underscore      blink"],["","\n"],["PreProc","         reverse         concealed"],["","\n\n"],["PreProc","         black           red               green           yellow"],["","\n"],["PreProc","         blue            magenta           cyan            white"],["","\n"],["PreProc","         bright_black    bright_red        bright_green    bright_yellow"],["","\n"],["PreProc","         bright_blue     bright_magenta    bright_cyan     bright_white"],["","\n\n"],["PreProc","         on_black        on_red            on_green        on_yellow"],["","\n"],["PreProc","         on_blue         on_magenta        on_cyan         on_white"],["","\n"],["PreProc","         on_bright_black on_bright_red     on_bright_green on_bright_yellow"],["","\n"],["PreProc","         on_bright_blue  on_bright_magenta on_bright_cyan  on_bright_white"],["","\n\n\nThe default colour configurations are:\n\n"],["PreProc","    try_col    :  bold magenta  on_black"],["","\n"],["PreProc","    match_col  :  bold cyan     on_black"],["","\n"],["PreProc","    fail_col   :       yellow   on_red"],["","\n"],["PreProc","    ws_col     :  bold blue     underline"],["","\n"],["PreProc","    info_col   :       white    on_black"],["","\n\n"],["PreProc","    desc_regex_col  :  white    on_black"],["","\n"],["PreProc","    desc_text_col   :  cyan     on_black"],["","\n"],["PreProc","    desc_sep_col    :  blue     on_black underline"],["","\n\n"],["PreProc","    heatmap__20th_percentile  :  white   on_black"],["","\n"],["PreProc","    heatmap__40th_percentile  :  cyan    on_blue"],["","\n"],["PreProc","    heatmap__60th_percentile  :  blue    on_cyan"],["","\n"],["PreProc","    heatmap__80th_percentile  :  red     on_yellow"],["","\n"],["PreProc","    heatmap_100th_percentile  :  yellow  on_red"],["","\n\n\n"],["Statement","=head2"],[""," "],["String","Output configuration"],["","\n\nNormally Regexp::Debugger sends its visualizations to the terminal\nand expects input from the same device.\n\nHowever, you can configure the module to output its information\n(in standard JSON format) to a nominated file instead, using the\n"],["Identifier","C<'save_to'>"],[""," option:\n\n"],["PreProc","    save_to : filename_to_save_data_to.json"],["","\n\nData saved in this way may be re-animated using the "],["Identifier","C<rxrx>"],[""," utility,\nor by calling "],["Identifier","C<Regexp::Debugger::rxrx()>"],[""," directly. (See: "],["Identifier","L<\"Command-line"],["","\n"],["Identifier","debugging\">"],[""," for details).\n\n\n"],["Statement","=head2"],[""," "],["String","Configuration API"],["","\n\nYou can also configure the debugger on a program-by-program basis, by\npassing any of the above key/value pairs when the module is loaded.\n\nFor example:\n\n"],["PreProc","    use Regexp::Debugger  fail => 'bold red',  whitespace => 'compact';"],["","\n\nNote that any configuration specified in the user's "],["Identifier","F<.rxrx>"],[""," file\nis overridden by an explicit specification of this type.\n\nThe commonest use of this mechanism is to dump regex debugging\ninformation from an non-interactive program:\n\n"],["PreProc","    use Regexp::Debugger  save_to => 'regex_debugged.json';"],["","\n\nNote that, when "],["Identifier","C<'save_to'>"],[""," is specified within a program, the value\nsupplied does not have to be a string specifying the filename. You can\nalso provide an actual filehandle (or equivalent). For example:\n\n"],["PreProc","    use Regexp::Debugger save_to => IO::Socket::INET->new("],["","\n"],["PreProc","                                        Proto     => \"tcp\","],["","\n"],["PreProc","                                        PeerAddr  => 'localhost:666',"],["","\n"],["PreProc","                                    );"],["","\n\n\n"],["Statement","=head1"],[""," "],["String","COMMAND-LINE DEBUGGING"],["","\n\nThe module provides a non-exported subroutine ("],["Identifier","C<rxrx()>"],["",") that\nimplements a useful command-line regex debugging utility.\n\nThe utility can be invoked with:\n\n"],["PreProc","    perl -MRegexp::Debugger -E 'Regexp::Debugger::rxrx\\(@ARGV\\)'"],["","\n\nwhich is usually aliased in the shell to "],["Identifier","C<rxrx>"],[""," (and will be referred\nto by that name hereafter).\n\n\n"],["Statement","=head2"],[""," "],["String","Regex debugging REPL"],["","\n\nWhen called without any arguments, "],["Identifier","C<rxrx>"],[""," initiates a simple REPL\nthat allows the user to type in regexes and strings and debug matches\nbetween them:\n\n"],["Statement","=over"],["","\n\n"],["Statement","=item"],[""," "],["String","*"],["","\n\nAny line starting with a "],["Identifier","C</>"],[""," is treated as a new regex to match with.\nThe closing "],["Identifier","C</>"],[""," may be omitted. If the closing "],["Identifier","C</>"],[""," is supplied, any\none or more of the following flags may be specified immediately after\nit: "],["Identifier","C<x>"],["",", "],["Identifier","C<i>"],["",", "],["Identifier","C<m>"],["",", "],["Identifier","C<s>"],["",", "],["Identifier","C<a>"],["",", "],["Identifier","C<u>"],["",", "],["Identifier","C<d>"],["",", "],["Identifier","C<l>"],["",".\n\n"],["Statement","=item"],[""," "],["String","*"],["","\n\nAny line starting with a "],["Identifier","C<'>"],[""," or "],["Identifier","C<\">"],[""," is treated as a new string to match\nagainst. The corresponding closing delimiter may be omitted.\n\n"],["Statement","=item"],[""," "],["String","*"],["","\n\nAny line beginning with "],["Identifier","C<m>"],[""," causes the REPL to match the current regex\nagainst the current string, visualizing the match in the usual way.\n\n"],["Statement","=item"],[""," "],["String","*"],["","\n\nAny line beginning with "],["Identifier","C<q>"],[""," or "],["Identifier","C<x>"],[""," causes the REPL to quit and exit.\n\n"],["Statement","=item"],[""," "],["String","*"],["","\n\nAny line beginning with "],["Identifier","C<?>"],[""," invokes the help listing for the REPL.\n\n"],["Statement","=back"],["","\n\nIf the IO::Prompter module (version 0.004 or later) is available, the\ninput process remembers its history, which you can recall by typing\n"],["Identifier","C<CTRL-R>"],["",". Repeated "],["Identifier","C<CTRL-R>"],["","'s step successively backwards through earlier\ninputs. "],["Identifier","C<CTRL-N>"],[""," steps successfully forward again.\nYou can then use "],["Identifier","C<CTRL-B>"],["","/"],["Identifier","C<CTRL-F>"],["","/"],["Identifier","C<CTRL-A>"],["","/"],["Identifier","C<CTRL-E>"],[""," to move the\ncursor around the line of recalled input, to delete or insert\ncharacters. This is useful for modifying and retrying a recently entered\nregex or string.\n\n\n"],["Statement","=head2"],[""," "],["String","Debugging regexes from a dumped session"],["","\n\nWhen called with a filename, "],["Identifier","C<rxrx>"],[""," first checks whether the file\ncontains a JSON dump of a previous debugging, in which case it replays\nthe visualization of that regex match interactively.\n\nThis is useful for debugging non-interactive programs where the\n"],["Identifier","C<'save_to'>"],[""," option was used (see "],["Identifier","L<\"Output configuration\">"],[""," and\n"],["Identifier","L<\"Configuration API\">"],["",").\n\nIn this mode, all the features of the interactive debugger (as listed\nunder "],["Identifier","L<\"INTERFACE\">"],["",") are fully available: you can step forwards and\nbackwards through the match, skip to the successful submatch or a\nbreakpoint, swap visualization modes, and take snapshots.\n\n\n"],["Statement","=head2"],[""," "],["String","Wrap-around regex debugging"],["","\n\nWhen called with the name of a file that does "],["Identifier","I<not>"],[""," contain a JSON\ndump, "],["Identifier","C<rxrx>"],[""," attempts to execute the file as a Perl program, with\nRegexp::Debugger enabled at the top level. In other words:\n\n"],["PreProc","    rxrx prog.pl"],["","\n\nis a convenient shorthand for:\n\n"],["PreProc","    perl -MRegexp::Debugger prog.pl"],["","\n\n\n\n"],["Statement","=head1"],[""," "],["String","LIMITATIONS"],["","\n\n"],["Statement","=head2"],[""," "],["Identifier","C</x>"],["String","-mode comments"],["","\n\nDue to limitations in the Perl "],["Identifier","C<overload::constant()>"],[""," mechanism, the\ncurrent implementation cannot always distinguish whether a regex has an\nexternal /x modifier (and hence, what whitespace and comment characters\nmean). Whitespace is handled correctly in almost all cases, but\ncomments are not.\n\nWhen processing a "],["Identifier","C<# comment to end of line>"],[""," within a regex, the module\ncurrently assumes a "],["Identifier","C</x>"],[""," is in effect at start of the regex. This will cause\nerroneous behaviour if an unescaped "],["Identifier","C<#>"],[""," is used in a non-"],["Identifier","C</x>"],[""," regex.\nNote that this limitation is likely to be corrected in a future release.\n\nThis limitation does not affect the handling of comments in\n"],["Identifier","C<(?x:...)>"],[""," and "],["Identifier","C<(?-x:...)>"],[""," blocks within the regex. These are\nalways correctly handled, so explicitly using one of these blocks\nis a reliable workaround...as is always using the "],["Identifier","C</x>"],[""," modifier\non every debugged regex.\n\nAs regards whitespace, the one case where the current implementation\ndoes not always correctly infer behaviour is where whitespace is used to\nseparate a repetition qualifier from the atom it qualifies in a non-"],["Identifier","C</x>"],["","\nregex, such as:\n\n"],["PreProc","    / x + /"],["","\n\nBecause the module defaults to assuming that regexes always have "],["Identifier","C</x>"],[""," applied,\nthis is always interpreted as:\n\n"],["PreProc","    /\\ x+\\ /x"],["","\n\nrather than what it really is, namely:\n\n"],["PreProc","    /\\ x\\ +\\ /"],["","\n\nThe most reliable workaround for the time being is either to always use\n"],["Identifier","C</x>"],[""," on any regex, or never to separate repetition qualifiers from\ntheir preceding atoms.\n\n\n"],["Statement","=head2"],[""," "],["String","Multiple 'save_to' with the same target"],["","\n\nAt present, making the same file the target of two successive "],["Identifier","C<save_to>"],[""," requests\ncauses the second JSON data structure to overwrite the first.\n\nThis limitation will be removed in a subsequent release (but this will\ncertainly involve a small change to the structure of the JSON data that\nis written, even when only one "],["Identifier","C<save_to>"],[""," is specified).\n\n\n"],["Statement","=head2"],[""," "],["String","Variable interpolations"],["","\n\nThe module handles the interpolation of strings correctly,\nexpanding them in-place before debugging begins.\n\nHowever, it currently does not correctly handle the interpolation\nof "],["Identifier","C<qr>"],["","'d regexes. That is, this:\n\n"],["PreProc","    use Regexp::Debugger;"],["","\n\n"],["PreProc","    my $ident = qr{ [^\\W\\d]\\w* }x;      # a qr'd regex..."],["","\n\n"],["PreProc","    $str =~ m{ ($ident) : (.*) }xms;    # ...interpolated into another regex"],["","\n\ndoes not work correctly...and usually will not even compile.\n\nIt is expected that this limitation will be removed in a future\nrelease, however it may only be possible to fix the problem for more\nrecent versions of Perl (i.e. 5.14 and later) in which the regex engine\nis re-entrant.\n\n\n"],["Statement","=head1"],[""," "],["String","DIAGNOSTICS"],["","\n\n"],["Statement","=over"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","C<< Odd number of configuration args after \"use Regexp::Debugger\" >>"],["","\n\nThe module expects configuration arguments (see "],["Identifier","L<\"Configuration API\">"],["",")\nto be passed as "],["Identifier","C<< key => value >>"],[""," pairs. You passed something else.\n\n\n"],["Statement","=item"],[""," "],["Identifier","C<< Unknown 'show_ws' option: %s >>"],["","\n\nThe only valid options for the "],["Identifier","C<'show_ws'>"],[""," configuration option are\n"],["Identifier","C<'compact'>"],["",", "],["Identifier","C<'visible'>"],["",", or "],["Identifier","C<'original'>"],["",".\nYou specified something else (or misspelled one of the above).\n\n\n"],["Statement","=item"],[""," "],["Identifier","C<< Unknown 'display' option: %s >>"],["","\n\nThe only valid options for the "],["Identifier","C<'display'>"],[""," configuration option are\n"],["Identifier","C<'visual'>"],[""," or "],["Identifier","C<'heatmap'>"],[""," or "],["Identifier","C<'events'>"],[""," or "],["Identifier","C<'JSON'>"],["",".\nYou specified something else (or misspelled one of the above).\n\n"],["Statement","=item"],[""," "],["Identifier","C<< Invalid 'save_to' option: %s (%s) >>"],["","\n\nThe value associated with the "],["Identifier","C<'save_to'>"],[""," option is expected\nto be a filehandle opened for writing, or else a string containing\nthe name of a file that can be opened for writing. You either passed\nan unopened filehandle, an unwritable filename, or something that\nwasn't a plausible file. Alternatively, if you passed a filepath,\nwas the directory not accessible to, or writeable by, you?\n\n"],["Statement","=back"],["","\n\n\n"],["Statement","=head1"],[""," "],["String","DEPENDENCIES"],["","\n\nThis module only works with Perl 5.10.1 and later.\n\nThe following modules are used when available:\n\n"],["Statement","=over"],["","\n\n"],["Statement","=item"],[""," "],["String","Term::ANSIColor"],["","\n\nText colouring only works if this module can be loaded.\nOtherwise, all output will be monochromatic.\n\n"],["Statement","=item"],[""," "],["String","Win32::Console::ANSI"],["","\n\nUnder Windows, text colouring also requires that this module can be loaded.\nOtherwise, all output will be monochromatic.\n\n"],["Statement","=item"],[""," "],["String","File::HomeDir"],["","\n\nIf it can't find a useful value for "],["Identifier","C<$ENV{HOME}>"],["",", Regexp::Debugger\nattempts to use this module to determine the user's home directory,\nin order to search for a "],["Identifier","F<.rxrx>"],[""," config file.\n\n"],["Statement","=item"],[""," "],["String","JSON::XS"],["","\n\n"],["Statement","=item"],[""," "],["String","JSON"],["","\n\n"],["Statement","=item"],[""," "],["String","JSON::DWIW"],["","\n\n"],["Statement","=item"],[""," "],["String","JSON::Syck"],["","\n\nJSON output (i.e. for the "],["Identifier","C<'save_to'>"],[""," option) is only\npossible if one of these modules can be loaded.\nOtherwise, all JSON output will default to an empty "],["Identifier","C<{}>"],["",".\n\n\n"],["Statement","=item"],[""," "],["String","Term::ReadKey"],["","\n\nSingle-character interactions only work if this module can be loaded.\nOtherwise, all command interactions will require a "],["Identifier","C<< <RETURN> >>"],["","\nafter them.\n\n\n"],["Statement","=item"],[""," "],["String","Time::HiRes"],["","\n\nAutogenerated timestamps (e.g. for snapshots) will only be sub-second\naccurate if this module can be loaded. Otherwise, all timestamps will\nonly be to the nearest second.\n\n"],["Statement","=back"],["","\n\n\n"],["Statement","=head1"],[""," "],["String","INCOMPATIBILITIES"],["","\n\nNone reported, but this module will almost certainly not play nicely\nwith any other that modifies regexes using "],["Identifier","C<overload::constant>"],["",".\n\n\n"],["Statement","=head1"],[""," "],["String","BUGS AND LIMITATIONS"],["","\n\nNo bugs have been reported.\n\nPlease report any bugs or feature requests to\n"],["Identifier","C<bug-regexp-debugger@rt.cpan.org>"],["",", or through the web interface at\n"],["Identifier","L<http://rt.cpan.org>"],["",".\n\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nDamian Conway  "],["Identifier","C<< <DCONWAY@CPAN.org> >>"],["","\n\n\n"],["Statement","=head1"],[""," "],["String","LICENCE AND COPYRIGHT"],["","\n\nCopyright (c) 2011-2012, Damian Conway "],["Identifier","C<< <DCONWAY@CPAN.org> >>"],["",". All rights reserved.\n\nThis module is free software; you can redistribute it and/or\nmodify it under the same terms as Perl itself. See "],["Identifier","L<perlartistic>"],["",".\n\n\n"],["Statement","=head1"],[""," "],["String","DISCLAIMER OF WARRANTY"],["","\n\nBECAUSE THIS SOFTWARE IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE SOFTWARE, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE SOFTWARE \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER\nEXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE\nENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE SOFTWARE IS WITH\nYOU. SHOULD THE SOFTWARE PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL\nNECESSARY SERVICING, REPAIR, OR CORRECTION.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE SOFTWARE AS PERMITTED BY THE ABOVE LICENCE, BE\nLIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL,\nOR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE\nTHE SOFTWARE (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE SOFTWARE TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n"]]