[["PreProc","#!/usr/bin/perl"],["","\n\n"],["Statement","package"],["Type"," Bench::Construct"],["",";\n"],["Statement","use "],["","Moose;\n"],["Statement","use "],["","Moose::Util::TypeConstraints;\n\nhas "],["String","class"],[""," => (\n    "],["String","isa"],[""," => "],["String","\"Str\""],["",",\n    "],["String","is"],["","  => "],["String","\"ro\""],["",",\n);\n\n"],["Statement","eval"],[""," {\ncoerce ArrayRef\n    => from HashRef\n        => via { [ "],["Identifier","%$_"],[""," ] };\n};\n\nhas "],["String","args"],[""," => (\n    "],["String","isa"],[""," => "],["String","\"ArrayRef\""],["",",\n    "],["String","is"],["","  => "],["String","\"ro\""],["",",\n    "],["String","auto_deref"],[""," => "],["Number","1"],["",",\n    "],["String","coerce"],["","     => "],["Number","1"],["",",\n);\n\n"],["Keyword","sub "],["Function","code "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$class"],[""," = "],["Identifier","$self"],["","->class;\n    "],["Statement","my"],[""," "],["Identifier","@args"],["","  = "],["Identifier","$self"],["","->args;\n\n    "],["Keyword","sub "],["","{ "],["Statement","my"],[""," "],["Identifier","$obj"],[""," = "],["Identifier","$class"],["","->new( "],["Identifier","@args"],[""," ) }\n}\n\n__PACKAGE__;\n\n"],["Comment","__END__"],["","\n"]]