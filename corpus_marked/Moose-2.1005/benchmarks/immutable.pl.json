[["PreProc","#!/usr/bin/perl"],["","\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n\n"],["Statement","use "],["","Scalar::Util "],["String","'blessed'"],["",";\n"],["Statement","use "],["","Benchmark "],["String","qw[cmpthese]"],["",";\n\n"],["Statement","use "],["","Moose::Util::TypeConstraints;\n\n{\n    "],["Statement","package"],["Type"," Foo"],["",";\n    "],["Statement","use "],["","Moose;\n    Foo->meta->make_immutable("],["String","debug"],[""," => "],["Number","0"],["",");\n}\n\ncoerce "],["String","'Foo'"],["","\n    => from "],["String","'ArrayRef'"],["","\n    => via { Foo->new("],["Identifier","@{$_}"],["",") };\n\n{\n    "],["Statement","package"],["Type"," Foo::Normal"],["",";\n    "],["Statement","use "],["","Moose;\n\n    has "],["String","'default'"],["","         => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","default"],[""," => "],["Number","10"],["",");\n    has "],["String","'default_sub'"],["","     => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","default"],[""," => "],["Keyword","sub "],["","{ [] });\n    has "],["String","'lazy'"],["","            => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","default"],[""," => "],["Number","10"],["",", "],["String","lazy"],[""," => "],["Number","1"],["",");\n    has "],["String","'required'"],["","        => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","required"],[""," => "],["Number","1"],["",");\n    has "],["String","'weak_ref'"],["","        => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","weak_ref"],[""," => "],["Number","1"],["",");\n    has "],["String","'type_constraint'"],[""," => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","isa"],[""," => "],["String","'Foo'"],["",");\n    has "],["String","'coercion'"],["","        => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","isa"],[""," => "],["String","'Foo'"],["",", "],["String","coerce"],[""," => "],["Number","1"],["",");\n\n    "],["Statement","package"],["Type"," Bar::Normal"],["",";\n    "],["Statement","use "],["","Moose;\n\n    extends "],["String","'Foo::Normal'"],["",";\n\n    has "],["String","'default_w_type_constraint'"],[""," => (\n        "],["String","is"],["","      => "],["String","'rw'"],["",",\n        "],["String","isa"],["","     => "],["String","'Int'"],["",",\n        "],["String","default"],[""," => "],["Number","10"],["",",\n    );\n}\n\n{\n    "],["Statement","package"],["Type"," Foo::Immutable"],["",";\n    "],["Statement","use "],["","Moose;\n\n    has "],["String","'default'"],["","         => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","default"],[""," => "],["Number","10"],["",");\n    has "],["String","'default_sub'"],["","     => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","default"],[""," => "],["Keyword","sub "],["","{ [] });\n    has "],["String","'lazy'"],["","            => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","default"],[""," => "],["Number","10"],["",", "],["String","lazy"],[""," => "],["Number","1"],["",");\n    has "],["String","'required'"],["","        => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","required"],[""," => "],["Number","1"],["",");\n    has "],["String","'weak_ref'"],["","        => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","weak_ref"],[""," => "],["Number","1"],["",");\n    has "],["String","'type_constraint'"],[""," => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","isa"],[""," => "],["String","'Foo'"],["",");\n    has "],["String","'coercion'"],["","        => ("],["String","is"],[""," => "],["String","'rw'"],["",", "],["String","isa"],[""," => "],["String","'Foo'"],["",", "],["String","coerce"],[""," => "],["Number","1"],["",");\n\n    "],["Comment","#sub BUILD {"],["","\n    "],["Comment","#    # ..."],["","\n    "],["Comment","#}"],["","\n\n    Foo::Immutable->meta->make_immutable("],["String","debug"],[""," => "],["Number","0"],["",");\n\n    "],["Statement","package"],["Type"," Bar::Immutable"],["",";\n    "],["Statement","use "],["","Moose;\n\n    extends "],["String","'Foo::Immutable'"],["",";\n\n    has "],["String","'default_w_type_constraint'"],[""," => (\n        "],["String","is"],["","      => "],["String","'rw'"],["",",\n        "],["String","isa"],["","     => "],["String","'Int'"],["",",\n        "],["String","default"],[""," => "],["Number","10"],["",",\n    );\n\n    Bar::Immutable->meta->make_immutable("],["String","debug"],[""," => "],["Number","0"],["",");\n}\n\n"],["Comment","#__END__"],["","\n\n"],["Statement","my"],[""," "],["Identifier","$foo"],[""," = Foo->new;\n\ncmpthese("],["Number","10_000"],["",",\n    {\n        "],["String","'normal'"],[""," => "],["Keyword","sub "],["","{\n            Foo::Normal->new(\n                "],["String","required"],["","        => "],["String","'BAR'"],["",",\n                "],["String","type_constraint"],[""," => "],["Identifier","$foo"],["",",\n                "],["String","coercion"],["","        => [],\n                "],["String","weak_ref"],["","        => {},\n            );\n        },\n        "],["String","'immutable'"],[""," => "],["Keyword","sub "],["","{\n            Foo::Immutable->new(\n                "],["String","required"],["","        => "],["String","'BAR'"],["",",\n                "],["String","type_constraint"],[""," => "],["Identifier","$foo"],["",",\n                "],["String","coercion"],["","        => [],\n                "],["String","weak_ref"],["","        => {},\n            );\n        },\n    }\n);\n"]]