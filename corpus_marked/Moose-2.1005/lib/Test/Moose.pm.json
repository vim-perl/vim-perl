[["Statement","package"],["Type"," Test::Moose"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","Test::Moose::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","Test::Moose::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n\n"],["Statement","use "],["","Sub::Exporter;\n"],["Statement","use "],["","Test::Builder;\n\n"],["Statement","use "],["","List::MoreUtils "],["String","'all'"],["",";\n"],["Statement","use "],["","Moose::Util "],["String","'does_role'"],["",", "],["String","'find_meta'"],["",";\n\n"],["Statement","my"],[""," "],["Identifier","@exports"],[""," = "],["String","qw["],["","\n"],["String","    meta_ok"],["","\n"],["String","    does_ok"],["","\n"],["String","    has_attribute_ok"],["","\n"],["String","    with_immutable"],["","\n"],["String","]"],["",";\n\nSub::Exporter::setup_exporter({\n    "],["String","exports"],[""," => \\"],["Identifier","@exports"],["",",\n    "],["String","groups"],["","  => { "],["String","default"],[""," => \\"],["Identifier","@exports"],[""," }\n});\n\n"],["Comment","## the test builder instance ..."],["","\n\n"],["Statement","my"],[""," "],["Identifier","$Test"],[""," = Test::Builder->new;\n\n"],["Comment","## exported functions"],["","\n\n"],["Keyword","sub "],["Function","meta_ok "],["Type","($;$)"],[""," {\n    "],["Statement","my"],[""," ("],["Identifier","$class_or_obj"],["",", "],["Identifier","$message"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Identifier","$message"],[""," ||= "],["String","\"The object has a meta\""],["",";\n\n    "],["Conditional","if"],[""," (find_meta("],["Identifier","$class_or_obj"],["",")) {\n        "],["Statement","return"],[""," "],["Identifier","$Test"],["","->ok("],["Number","1"],["",", "],["Identifier","$message"],["",")\n    }\n    "],["Conditional","else"],[""," {\n        "],["Statement","return"],[""," "],["Identifier","$Test"],["","->ok("],["Number","0"],["",", "],["Identifier","$message"],["",");\n    }\n}\n\n"],["Keyword","sub "],["Function","does_ok "],["Type","($$;$)"],[""," {\n    "],["Statement","my"],[""," ("],["Identifier","$class_or_obj"],["",", "],["Identifier","$does"],["",", "],["Identifier","$message"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Identifier","$message"],[""," ||= "],["String","\"The object does "],["Identifier","$does"],["String","\""],["",";\n\n    "],["Conditional","if"],[""," (does_role("],["Identifier","$class_or_obj"],["",", "],["Identifier","$does"],["",")) {\n        "],["Statement","return"],[""," "],["Identifier","$Test"],["","->ok("],["Number","1"],["",", "],["Identifier","$message"],["",")\n    }\n    "],["Conditional","else"],[""," {\n        "],["Statement","return"],[""," "],["Identifier","$Test"],["","->ok("],["Number","0"],["",", "],["Identifier","$message"],["",");\n    }\n}\n\n"],["Keyword","sub "],["Function","has_attribute_ok "],["Type","($$;$)"],[""," {\n    "],["Statement","my"],[""," ("],["Identifier","$class_or_obj"],["",", "],["Identifier","$attr_name"],["",", "],["Identifier","$message"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Identifier","$message"],[""," ||= "],["String","\"The object does has an attribute named "],["Identifier","$attr_name"],["String","\""],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$meta"],[""," = find_meta("],["Identifier","$class_or_obj"],["",");\n\n    "],["Conditional","if"],[""," ("],["Identifier","$meta"],["","->find_attribute_by_name("],["Identifier","$attr_name"],["",")) {\n        "],["Statement","return"],[""," "],["Identifier","$Test"],["","->ok("],["Number","1"],["",", "],["Identifier","$message"],["",")\n    }\n    "],["Conditional","else"],[""," {\n        "],["Statement","return"],[""," "],["Identifier","$Test"],["","->ok("],["Number","0"],["",", "],["Identifier","$message"],["",");\n    }\n}\n\n"],["Keyword","sub "],["Function","with_immutable "],["Type","(&@)"],[""," {\n    "],["Statement","my"],[""," "],["Identifier","$block"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$before"],[""," = "],["Identifier","$Test"],["","->current_test;\n    "],["Statement","my"],[""," "],["Identifier","$passing_before"],[""," = (Test::Builder->VERSION < "],["Float","1.005"],[""," ? "],["Number","0"],[""," : "],["Identifier","$Test"],["","->history->pass_count) || "],["Number","0"],["",";\n\n    "],["Identifier","$block"],["","->("],["Number","0"],["",");\n    Class::MOP::class_of("],["Identifier","$_"],["",")->make_immutable "],["Repeat","for"],[""," "],["Identifier","@_"],["",";\n    "],["Identifier","$block"],["","->("],["Number","1"],["",");\n\n    "],["Statement","my"],[""," "],["Identifier","$num_tests"],[""," = "],["Identifier","$Test"],["","->current_test - "],["Identifier","$before"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$all_passed"],[""," = Test::Builder->VERSION < "],["Float","1.005"],["","\n        ? all { "],["Identifier","$_"],[""," } ("],["Identifier","$Test"],["","->summary)[-"],["Identifier","$num_tests"],["","..-"],["Number","1"],["","]\n        : "],["Identifier","$num_tests"],[""," == "],["Identifier","$Test"],["","->history->pass_count - "],["Identifier","$passing_before"],["",";\n    "],["Statement","return"],[""," "],["Identifier","$all_passed"],["",";\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","# ABSTRACT: Test functions for Moose specific features"],["","\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=pod"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nTest::Moose - Test functions for Moose specific features\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nversion 2.1005\n\n"],["Statement","=head1"],[""," "],["String","SYNOPSIS"],["","\n\n"],["PreProc","  use Test::More plan => 1;"],["","\n"],["PreProc","  use Test::Moose;"],["","\n\n"],["PreProc","  meta_ok($class_or_obj, \"... Foo has a ->meta\");"],["","\n"],["PreProc","  does_ok($class_or_obj, $role, \"... Foo does the Baz role\");"],["","\n"],["PreProc","  has_attribute_ok($class_or_obj, $attr_name, \"... Foo has the 'bar' attribute\");"],["","\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nThis module provides some useful test functions for Moose based classes. It\nis an experimental first release, so comments and suggestions are very welcome.\n\n"],["Statement","=head1"],[""," "],["String","EXPORTED FUNCTIONS"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<meta_ok ($class_or_object)>"],["","\n\nTests if a class or object has a metaclass.\n\n"],["Statement","=item"],[""," "],["Identifier","B<does_ok ($class_or_object, $role, ?$message)>"],["","\n\nTests if a class or object does a certain role, similar to what "],["Identifier","C<isa_ok>"],["","\ndoes for the "],["Identifier","C<isa>"],[""," method.\n\n"],["Statement","=item"],[""," "],["Identifier","B<has_attribute_ok($class_or_object, $attr_name, ?$message)>"],["","\n\nTests if a class or object has a certain attribute, similar to what "],["Identifier","C<can_ok>"],["","\ndoes for the methods.\n\n"],["Statement","=item"],[""," "],["Identifier","B<with_immutable { CODE } @class_names>"],["","\n\nRuns "],["Identifier","B<CODE>"],[""," (which should contain normal tests) twice, and make each\nclass in "],["Identifier","C<@class_names>"],[""," immutable in between the two runs.\n\nThe "],["Identifier","B<CODE>"],[""," block is called with a single boolean argument indicating whether\nor not the classes have been made immutable yet.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","TODO"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["String","Convert the Moose test suite to use this module."],["","\n\n"],["Statement","=item"],[""," "],["String","Here is a list of possible functions to write"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["String","immutability predicates"],["","\n\n"],["Statement","=item"],[""," "],["String","anon-class predicates"],["","\n\n"],["Statement","=item"],[""," "],["String","discovering original method from modified method"],["","\n\n"],["Statement","=item"],[""," "],["String","attribute metaclass predicates (attribute_isa?)"],["","\n\n"],["Statement","=back"],["","\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","SEE ALSO"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","L<Test::More>"],["","\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","BUGS"],["","\n\nSee "],["Identifier","L<Moose/BUGS>"],[""," for details on reporting bugs.\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nMoose is maintained by the Moose Cabal, along with the help of many contributors. See "],["Identifier","L<Moose/CABAL>"],[""," and "],["Identifier","L<Moose/CONTRIBUTORS>"],[""," for details.\n\n"],["Statement","=head1"],[""," "],["String","COPYRIGHT AND LICENSE"],["","\n\nThis software is copyright (c) 2013 by Infinity Interactive, Inc..\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n"],["Statement","=cut"],["","\n"]]