[["Statement","package"],["Type"," Moose::Error::Default"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","Moose::Error::Default::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","Moose::Error::Default::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n\n"],["Statement","use "],["","Carp::Heavy;\n"],["Statement","use "],["","Class::MOP::MiniTrait;\n\n"],["Statement","use "],["","Moose::Error::Util;\n\n"],["Statement","use base"],[""," "],["String","'Class::MOP::Object'"],["",";\n\nClass::MOP::MiniTrait::apply(__PACKAGE__, "],["String","'Moose::Meta::Object::Trait'"],["",");\n\n"],["Keyword","sub "],["Function","new "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$self"],["",", "],["Identifier","@args"],[""," ) = "],["Identifier","@_"],["",";\n    "],["Comment","# can't use Moose::Error::Util::create_error here because that would break"],["","\n    "],["Comment","# inheritance. we don't care about that for the inlined version, because"],["","\n    "],["Comment","# the inlined versions are explicitly not inherited."],["","\n    "],["Conditional","if"],[""," ("],["Operator","defined"],[""," "],["Identifier","$ENV{"],["String","MOOSE_ERROR_STYLE"],["Identifier","}"],[""," && "],["Identifier","$ENV{"],["String","MOOSE_ERROR_STYLE"],["Identifier","}"],[""," "],["Operator","eq"],[""," "],["String","'croak'"],["",") {\n        "],["Identifier","$self"],["","->create_error_croak( "],["Identifier","@args"],[""," );\n    }\n    "],["Conditional","else"],[""," {\n        "],["Identifier","$self"],["","->create_error_confess( "],["Identifier","@args"],[""," );\n    }\n}\n\n"],["Keyword","sub "],["Function","_inline_new "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$self"],["",", "],["Identifier","%args"],[""," ) = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$depth"],[""," = ("],["Identifier","$args{"],["String","depth"],["Identifier","}"],[""," || "],["Number","0"],["",") - "],["Number","1"],["",";\n    "],["Statement","return"],[""," "],["String","'Moose::Error::Util::create_error('"],["","\n      . "],["String","'message => '"],[""," . "],["Identifier","$args{"],["String","message"],["Identifier","}"],[""," . "],["String","', '"],["","\n      . "],["String","'depth   => '"],[""," . "],["Identifier","$depth"],["","         . "],["String","', '"],["","\n  . "],["String","')'"],["",";\n}\n\n"],["Keyword","sub "],["Function","create_error_croak "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$self"],["",", "],["Identifier","@args"],[""," ) = "],["Identifier","@_"],["",";\n    "],["Statement","return"],[""," Moose::Error::Util::create_error_croak("],["Identifier","@args"],["",");\n}\n\n"],["Keyword","sub "],["Function","create_error_confess "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$self"],["",", "],["Identifier","@args"],[""," ) = "],["Identifier","@_"],["",";\n    "],["Statement","return"],[""," Moose::Error::Util::create_error_confess("],["Identifier","@args"],["",");\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","# ABSTRACT: L<Carp> based error generation for Moose."],["","\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=pod"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nMoose::Error::Default - "],["Identifier","L<Carp>"],[""," based error generation for Moose.\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nversion 2.1005\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nThis class implements "],["Identifier","L<Carp>"],[""," based error generation.\n\nThe default behavior is like "],["Identifier","L<Moose::Error::Confess>"],["",". To override this to\ndefault to "],["Identifier","L<Moose::Error::Croak>"],["","'s behaviour on a system wide basis, set the\nMOOSE_ERROR_STYLE environment variable to "],["Identifier","C<croak>"],["",". The use of this\nenvironment variable is considered experimental, and may change in a future\nrelease.\n\n"],["Statement","=head1"],[""," "],["String","METHODS"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< Moose::Error::Default->new(@args) >>"],["","\n\nCreate a new error. Delegates to "],["Identifier","C<create_error_confess>"],[""," or\n"],["Identifier","C<create_error_croak>"],["",".\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $error->create_error_confess(@args) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $error->create_error_croak(@args) >>"],["","\n\nCreates a new errors string of the specified style.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nMoose is maintained by the Moose Cabal, along with the help of many contributors. See "],["Identifier","L<Moose/CABAL>"],[""," and "],["Identifier","L<Moose/CONTRIBUTORS>"],[""," for details.\n\n"],["Statement","=head1"],[""," "],["String","COPYRIGHT AND LICENSE"],["","\n\nThis software is copyright (c) 2013 by Infinity Interactive, Inc..\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n"],["Statement","=cut"],["","\n"]]