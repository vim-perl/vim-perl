[["Statement","package"],["Type"," Moose::Exporter"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","Moose::Exporter::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","Moose::Exporter::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n\n"],["Statement","use "],["","Class::Load "],["String","qw(is_class_loaded)"],["",";\n"],["Statement","use "],["","Class::MOP;\n"],["Statement","use "],["","List::MoreUtils "],["String","qw( first_index uniq )"],["",";\n"],["Statement","use "],["","Moose::Util::MetaRole;\n"],["Statement","use "],["","Scalar::Util "],["String","qw(reftype)"],["",";\n"],["Statement","use "],["","Sub::Exporter "],["Float","0.980"],["",";\n"],["Statement","use "],["","Sub::Name "],["String","qw(subname)"],["",";\n\n"],["Statement","my"],[""," "],["Identifier","%EXPORT_SPEC"],["",";\n\n"],["Keyword","sub "],["Function","setup_import_methods "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$class"],["",", "],["Identifier","%args"],[""," ) = "],["Identifier","@_"],["",";\n\n    "],["Identifier","$args{"],["String","exporting_package"],["Identifier","}"],[""," ||= "],["Statement","caller"],["","();\n\n    "],["Identifier","$class"],["","->build_import_methods(\n        "],["Identifier","%args"],["",",\n        "],["String","install"],[""," => ["],["String","qw(import unimport init_meta)"],["","]\n    );\n}\n\n"],["Comment","# A reminder to intrepid Moose hackers"],["","\n"],["Comment","# there may be more than one level of exporter"],["","\n"],["Comment","# don't make doy cry. -- perigrin"],["","\n\n"],["Keyword","sub "],["Function","build_import_methods "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$class"],["",", "],["Identifier","%args"],[""," ) = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$exporting_package"],[""," = "],["Identifier","$args{"],["String","exporting_package"],["Identifier","}"],[""," ||= "],["Statement","caller"],["","();\n\n    "],["Statement","my"],[""," "],["Identifier","$meta_lookup"],[""," = "],["Identifier","$args{"],["String","meta_lookup"],["Identifier","}"],[""," || "],["Keyword","sub "],["","{ Class::MOP::class_of("],["Statement","shift"],["",") };\n\n    "],["Identifier","$EXPORT_SPEC{$exporting_package}"],[""," = \\"],["Identifier","%args"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","@exports_from"],[""," = "],["Identifier","$class"],["","->_follow_also("],["Identifier","$exporting_package"],["",");\n\n    "],["Statement","my"],[""," "],["Identifier","$export_recorder"],[""," = {};\n    "],["Statement","my"],[""," "],["Identifier","$is_reexport"],["","     = {};\n\n    "],["Statement","my"],[""," "],["Identifier","$exports"],[""," = "],["Identifier","$class"],["","->_make_sub_exporter_params(\n        [ "],["Identifier","$exporting_package"],["",", "],["Identifier","@exports_from"],[""," ],\n        "],["Identifier","$export_recorder"],["",",\n        "],["Identifier","$is_reexport"],["",",\n        "],["Identifier","$args{"],["String","meta_lookup"],["Identifier","}"],["",", "],["Comment","# so that we don't pass through the default"],["","\n    );\n\n    "],["Statement","my"],[""," "],["Identifier","$exporter"],[""," = "],["Identifier","$class"],["","->_make_exporter(\n        "],["Identifier","$exports"],["",",\n        "],["Identifier","$is_reexport"],["",",\n        "],["Identifier","$meta_lookup"],["",",\n    );\n\n    "],["Statement","my"],[""," "],["Identifier","%methods"],["",";\n    "],["Identifier","$methods{"],["String","import"],["Identifier","}"],[""," = "],["Identifier","$class"],["","->_make_import_sub(\n        "],["Identifier","$exporting_package"],["",",\n        "],["Identifier","$exporter"],["",",\n        \\"],["Identifier","@exports_from"],["",",\n        "],["Identifier","$is_reexport"],["",",\n        "],["Identifier","$meta_lookup"],["",",\n    );\n\n    "],["Identifier","$methods{"],["String","unimport"],["Identifier","}"],[""," = "],["Identifier","$class"],["","->_make_unimport_sub(\n        "],["Identifier","$exporting_package"],["",",\n        "],["Identifier","$exports"],["",",\n        "],["Identifier","$export_recorder"],["",",\n        "],["Identifier","$is_reexport"],["",",\n        "],["Identifier","$meta_lookup"],["",",\n    );\n\n    "],["Identifier","$methods{"],["String","init_meta"],["Identifier","}"],[""," = "],["Identifier","$class"],["","->_make_init_meta(\n        "],["Identifier","$exporting_package"],["",",\n        \\"],["Identifier","%args"],["",",\n        "],["Identifier","$meta_lookup"],["",",\n    );\n\n    "],["Statement","my"],[""," "],["Identifier","$package"],[""," = Class::MOP::Package->initialize("],["Identifier","$exporting_package"],["",");\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$to_install"],[""," ( "],["Identifier","@{"],[""," "],["Identifier","$args{"],["String","install"],["Identifier","}"],[""," || [] "],["Identifier","}"],[""," ) {\n        "],["Statement","my"],[""," "],["Identifier","$symbol"],[""," = "],["String","'&'"],[""," . "],["Identifier","$to_install"],["",";\n        "],["Statement","next"],["","\n            "],["Conditional","unless"],[""," "],["Identifier","$methods{$to_install}"],["","\n                && !"],["Identifier","$package"],["","->has_package_symbol("],["Identifier","$symbol"],["",");\n        "],["Identifier","$package"],["","->add_package_symbol( "],["Identifier","$symbol"],["",", "],["Identifier","$methods{$to_install}"],[""," );\n    }\n\n    "],["Statement","return"],[""," ( "],["Identifier","$methods{"],["String","import"],["Identifier","}"],["",", "],["Identifier","$methods{"],["String","unimport"],["Identifier","}"],["",", "],["Identifier","$methods{"],["String","init_meta"],["Identifier","}"],[""," );\n}\n\n"],["Keyword","sub "],["Function","_make_exporter "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$class"],["",", "],["Identifier","$exports"],["",", "],["Identifier","$is_reexport"],["",", "],["Identifier","$meta_lookup"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","return"],[""," Sub::Exporter::build_exporter(\n        {\n            "],["String","exports"],["","   => "],["Identifier","$exports"],["",",\n            "],["String","groups"],["","    => { "],["String","default"],[""," => ["],["String","':all'"],["","] },\n            "],["String","installer"],[""," => "],["Keyword","sub "],["","{\n                "],["Statement","my"],[""," ("],["Identifier","$arg"],["",", "],["Identifier","$to_export"],["",") = "],["Identifier","@_"],["",";\n                "],["Statement","my"],[""," "],["Identifier","$meta"],[""," = "],["Identifier","$meta_lookup"],["","->("],["Identifier","$arg->{"],["String","into"],["Identifier","}"],["",");\n\n                "],["Statement","goto"],[""," "],["Identifier","&"],["Type","Sub::Exporter::"],["Identifier","default_installer"],[""," "],["Conditional","unless"],[""," "],["Identifier","$meta"],["",";\n\n                "],["Comment","# don't overwrite existing symbols with our magically flagged"],["","\n                "],["Comment","# version of it if we would install the same sub that's already"],["","\n                "],["Comment","# in the importer"],["","\n\n                "],["Statement","my"],[""," "],["Identifier","@filtered_to_export"],["",";\n                "],["Statement","my"],[""," "],["Identifier","%installed"],["",";\n                "],["Repeat","for"],[""," ("],["Statement","my"],[""," "],["Identifier","$i"],[""," = "],["Number","0"],["","; "],["Identifier","$i"],[""," < "],["Identifier","@{"],[""," "],["Identifier","$to_export"],[""," "],["Identifier","}"],["","; "],["Identifier","$i"],[""," += "],["Number","2"],["",") {\n                    "],["Statement","my"],[""," ("],["Identifier","$as"],["",", "],["Identifier","$cv"],["",") = "],["Identifier","@{"],[""," "],["Identifier","$to_export"],[""," "],["Identifier","}[$i"],["",", "],["Identifier","$i"],[""," + "],["Number","1"],["Identifier","]"],["",";\n\n                    "],["Statement","next"],[""," "],["Conditional","if"],[""," !"],["Operator","ref"],["","("],["Identifier","$as"],["",")\n                         && "],["Identifier","$meta"],["","->has_package_symbol("],["String","'&'"],[""," . "],["Identifier","$as"],["",")\n                         && "],["Identifier","$meta"],["","->get_package_symbol("],["String","'&'"],[""," . "],["Identifier","$as"],["",") == "],["Identifier","$cv"],["",";\n\n                    "],["Statement","push"],[""," "],["Identifier","@filtered_to_export"],["",", "],["Identifier","$as"],["",", "],["Identifier","$cv"],["",";\n                    "],["Identifier","$installed{$as}"],[""," = "],["Number","1"],[""," "],["Conditional","unless"],[""," "],["Operator","ref"],[""," "],["Identifier","$as"],["",";\n                }\n\n                Sub::Exporter::default_installer("],["Identifier","$arg"],["",", \\"],["Identifier","@filtered_to_export"],["",");\n\n                "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$name"],[""," ( "],["Statement","keys"],[""," "],["Identifier","%{$is_reexport}"],[""," ) {\n                    "],["Statement","no strict"],[""," "],["String","'refs'"],["",";\n                    "],["Statement","no warnings"],[""," "],["String","'once'"],["",";\n                    "],["Statement","next"],[""," "],["Conditional","unless"],[""," "],["Statement","exists"],[""," "],["Identifier","$installed{$name}"],["",";\n                    _flag_as_reexport( \\"],["Identifier","*{"],[""," "],["Statement","join"],[""," "],["String","q{::}"],["",", "],["Identifier","$arg->{"],["String","into"],["Identifier","}"],["",", "],["Identifier","$name"],[""," "],["Identifier","}"],[""," );\n                }\n            },\n        }\n    );\n}\n\n"],["Keyword","sub "],["Function","_follow_also "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$class"],["","             = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$exporting_package"],[""," = "],["Statement","shift"],["",";\n\n    _die_if_cycle_found_in_also_list_for_package("],["Identifier","$exporting_package"],["",");\n\n    "],["Statement","return"],[""," uniq( _follow_also_real("],["Identifier","$exporting_package"],["",") );\n}\n\n"],["Keyword","sub "],["Function","_follow_also_real "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$exporting_package"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","@also"],["","              = _also_list_for_package("],["Identifier","$exporting_package"],["",");\n\n    "],["Statement","return"],[""," "],["Statement","map"],[""," "],["Statement","{"],[""," "],["Identifier","$_"],["",", _follow_also_real("],["Identifier","$_"],["",") "],["Statement","}"],[""," "],["Identifier","@also"],["",";\n}\n\n"],["Keyword","sub "],["Function","_also_list_for_package "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$package"],[""," = "],["Statement","shift"],["",";\n\n    "],["Conditional","if"],[""," ( !"],["Statement","exists"],[""," "],["Identifier","$EXPORT_SPEC{$package}"],[""," ) {\n        "],["Statement","my"],[""," "],["Identifier","$loaded"],[""," = is_class_loaded("],["Identifier","$package"],["",");\n\n        "],["Statement","die"],[""," "],["String","\"Package in also ("],["Identifier","$package"],["String",") does not seem to \""],["","\n            . "],["String","\"use Moose::Exporter\""],["","\n            . ( "],["Identifier","$loaded"],[""," ? "],["String","\"\""],[""," : "],["String","\" (is it loaded?)\""],[""," );\n    }\n\n    "],["Statement","my"],[""," "],["Identifier","$also"],[""," = "],["Identifier","$EXPORT_SPEC{$package}{"],["String","also"],["Identifier","}"],["",";\n\n    "],["Statement","return"],[""," "],["Conditional","unless"],[""," "],["Operator","defined"],[""," "],["Identifier","$also"],["",";\n\n    "],["Statement","return"],[""," "],["Operator","ref"],[""," "],["Identifier","$also"],[""," ? "],["Identifier","@$also"],[""," : "],["Identifier","$also"],["",";\n}\n\n"],["Comment","# this is no Tarjan algorithm, but for the list sizes expected,"],["","\n"],["Comment","# brute force will probably be fine (and more maintainable)"],["","\n"],["Keyword","sub "],["Function","_die_if_cycle_found_in_also_list_for_package "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$package"],[""," = "],["Statement","shift"],["",";\n    _die_if_also_list_cycles_back_to_existing_stack(\n        [ _also_list_for_package("],["Identifier","$package"],["",") ],\n        ["],["Identifier","$package"],["","],\n    );\n}\n\n"],["Keyword","sub "],["Function","_die_if_also_list_cycles_back_to_existing_stack "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$also_list"],["",", "],["Identifier","$existing_stack"],[""," ) = "],["Identifier","@_"],["",";\n\n    "],["Statement","return"],[""," "],["Conditional","unless"],[""," "],["Identifier","@$also_list"],[""," && "],["Identifier","@$existing_stack"],["",";\n\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$also_member"],[""," ("],["Identifier","@$also_list"],["",") {\n        "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$stack_member"],[""," ("],["Identifier","@$existing_stack"],["",") {\n            "],["Statement","next"],[""," "],["Conditional","unless"],[""," "],["Identifier","$also_member"],[""," "],["Operator","eq"],[""," "],["Identifier","$stack_member"],["",";\n\n            "],["Statement","die"],["","\n                "],["String","\"Circular reference in 'also' parameter to Moose::Exporter between \""],["","\n                . "],["Statement","join"],["","(\n                "],["String","', '"],["",",\n                "],["Identifier","@$existing_stack"],["","\n                ) . "],["String","\" and "],["Identifier","$also_member"],["String","\""],["",";\n        }\n\n        _die_if_also_list_cycles_back_to_existing_stack(\n            [ _also_list_for_package("],["Identifier","$also_member"],["",") ],\n            [ "],["Identifier","$also_member"],["",", "],["Identifier","@$existing_stack"],[""," ],\n        );\n    }\n}\n\n"],["Keyword","sub "],["Function","_parse_trait_aliases "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$class"],["","   = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," ("],["Identifier","$package"],["",", "],["Identifier","$aliases"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","@ret"],["",";\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$alias"],[""," ("],["Identifier","@$aliases"],["",") {\n        "],["Statement","my"],[""," "],["Identifier","$name"],["",";\n        "],["Conditional","if"],[""," ("],["Operator","ref"],["","("],["Identifier","$alias"],["",")) {\n            reftype("],["Identifier","$alias"],["",") "],["Operator","eq"],[""," "],["String","'ARRAY'"],["","\n                "],["Operator","or"],[""," Moose->throw_error(reftype("],["Identifier","$alias"],["",") . "],["String","\" references are not \""],["","\n                                    . "],["String","\"valid arguments to the 'trait_aliases' \""],["","\n                                    . "],["String","\"option\""],["",");\n\n            ("],["Identifier","$alias"],["",", "],["Identifier","$name"],["",") = "],["Identifier","@$alias"],["",";\n        }\n        "],["Conditional","else"],[""," {\n            ("],["Identifier","$name"],[""," = "],["Identifier","$alias"],["",") =~ "],["Statement","s/"],["Special",".*"],["String","::"],["Statement","//"],["",";\n        }\n        "],["Statement","push"],[""," "],["Identifier","@ret"],["",", subname "],["String","\""],["Identifier","${package}"],["String","::"],["Identifier","${name}"],["String","\""],[""," => "],["Keyword","sub "],["Type","()"],[""," { "],["Identifier","$alias"],[""," };\n    }\n\n    "],["Statement","return"],[""," "],["Identifier","@ret"],["",";\n}\n\n"],["Keyword","sub "],["Function","_make_sub_exporter_params "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$class"],["","                = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$packages"],["","             = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$export_recorder"],["","      = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$is_reexport"],["","          = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$meta_lookup_override"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","%exports"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$current_meta_lookup"],["",";\n\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$package"],[""," ( "],["Identifier","@{$packages}"],[""," ) {\n        "],["Statement","my"],[""," "],["Identifier","$args"],[""," = "],["Identifier","$EXPORT_SPEC{$package}"],["","\n            "],["Operator","or"],[""," "],["Statement","die"],[""," "],["String","\"The "],["Identifier","$package"],["String"," package does not use Moose::Exporter"],["Special","\\n"],["String","\""],["",";\n\n        "],["Identifier","$current_meta_lookup"],[""," = "],["Identifier","$meta_lookup_override"],[""," || "],["Identifier","$args->{"],["String","meta_lookup"],["Identifier","}"],["",";\n        "],["Identifier","$meta_lookup_override"],[""," = "],["Identifier","$current_meta_lookup"],["",";\n\n        "],["Statement","my"],[""," "],["Identifier","$meta_lookup"],[""," = "],["Identifier","$current_meta_lookup"],["","\n                       || "],["Keyword","sub "],["","{ Class::MOP::class_of("],["Statement","shift"],["",") };\n\n        "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$name"],[""," ( "],["Identifier","@{"],[""," "],["Identifier","$args->{"],["String","with_meta"],["Identifier","}"],[""," "],["Identifier","}"],[""," ) {\n            "],["Statement","my"],[""," "],["Identifier","$sub"],[""," = "],["Identifier","$class"],["","->_sub_from_package( "],["Identifier","$package"],["",", "],["Identifier","$name"],[""," )\n                "],["Operator","or"],[""," "],["Statement","next"],["",";\n\n            "],["Statement","my"],[""," "],["Identifier","$fq_name"],[""," = "],["Identifier","$package"],[""," . "],["String","'::'"],[""," . "],["Identifier","$name"],["",";\n\n            "],["Identifier","$exports{$name}"],[""," = "],["Identifier","$class"],["","->_make_wrapped_sub_with_meta(\n                "],["Identifier","$fq_name"],["",",\n                "],["Identifier","$sub"],["",",\n                "],["Identifier","$export_recorder"],["",",\n                "],["Identifier","$meta_lookup"],["",",\n            ) "],["Conditional","unless"],[""," "],["Statement","exists"],[""," "],["Identifier","$exports{$name}"],["",";\n        }\n\n        "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$name"],[""," ( "],["Identifier","@{"],[""," "],["Identifier","$args->{"],["String","with_caller"],["Identifier","}"],[""," "],["Identifier","}"],[""," ) {\n            "],["Statement","my"],[""," "],["Identifier","$sub"],[""," = "],["Identifier","$class"],["","->_sub_from_package( "],["Identifier","$package"],["",", "],["Identifier","$name"],[""," )\n                "],["Operator","or"],[""," "],["Statement","next"],["",";\n\n            "],["Statement","my"],[""," "],["Identifier","$fq_name"],[""," = "],["Identifier","$package"],[""," . "],["String","'::'"],[""," . "],["Identifier","$name"],["",";\n\n            "],["Identifier","$exports{$name}"],[""," = "],["Identifier","$class"],["","->_make_wrapped_sub(\n                "],["Identifier","$fq_name"],["",",\n                "],["Identifier","$sub"],["",",\n                "],["Identifier","$export_recorder"],["",",\n            ) "],["Conditional","unless"],[""," "],["Statement","exists"],[""," "],["Identifier","$exports{$name}"],["",";\n        }\n\n        "],["Statement","my"],[""," "],["Identifier","@extra_exports"],[""," = "],["Identifier","$class"],["","->_parse_trait_aliases(\n            "],["Identifier","$package"],["",", "],["Identifier","$args->{"],["String","trait_aliases"],["Identifier","}"],["",",\n        );\n        "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$name"],[""," ( "],["Identifier","@{"],[""," "],["Identifier","$args->{"],["String","as_is"],["Identifier","}"],[""," "],["Identifier","}"],["",", "],["Identifier","@extra_exports"],[""," ) {\n            "],["Statement","my"],[""," ( "],["Identifier","$sub"],["",", "],["Identifier","$coderef_name"],[""," );\n\n            "],["Conditional","if"],[""," ( "],["Operator","ref"],[""," "],["Identifier","$name"],[""," ) {\n                "],["Identifier","$sub"],[""," = "],["Identifier","$name"],["",";\n\n                "],["Statement","my"],[""," "],["Identifier","$coderef_pkg"],["",";\n                ( "],["Identifier","$coderef_pkg"],["",", "],["Identifier","$coderef_name"],[""," )\n                    = Class::MOP::get_code_info("],["Identifier","$name"],["",");\n\n                "],["Conditional","if"],[""," ( "],["Identifier","$coderef_pkg"],[""," "],["Operator","ne"],[""," "],["Identifier","$package"],[""," ) {\n                    "],["Identifier","$is_reexport->{$coderef_name}"],[""," = "],["Number","1"],["",";\n                }\n            }\n            "],["Conditional","else"],[""," {\n                "],["Identifier","$sub"],[""," = "],["Identifier","$class"],["","->_sub_from_package( "],["Identifier","$package"],["",", "],["Identifier","$name"],[""," )\n                    "],["Operator","or"],[""," "],["Statement","next"],["",";\n\n                "],["Identifier","$coderef_name"],[""," = "],["Identifier","$name"],["",";\n            }\n\n            "],["Identifier","$export_recorder->{$sub}"],[""," = "],["Number","1"],["",";\n\n            "],["Identifier","$exports{$coderef_name}"],[""," = "],["Keyword","sub "],["","{ "],["Identifier","$sub"],[""," }\n                "],["Conditional","unless"],[""," "],["Statement","exists"],[""," "],["Identifier","$exports{$coderef_name}"],["",";\n        }\n    }\n\n    "],["Statement","return"],[""," \\"],["Identifier","%exports"],["",";\n}\n\n"],["Keyword","sub "],["Function","_sub_from_package "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$sclass"],["","  = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$package"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$name"],["","    = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$sub"],[""," = "],["Operator","do"],[""," {\n        "],["Statement","no strict"],[""," "],["String","'refs'"],["",";\n        \\"],["Identifier","&{"],[""," "],["Identifier","$package"],[""," . "],["String","'::'"],[""," . "],["Identifier","$name"],[""," "],["Identifier","}"],["",";\n    };\n\n    "],["Statement","return"],[""," "],["Identifier","$sub"],[""," "],["Conditional","if"],[""," "],["Operator","defined"],[""," "],["Identifier","&$sub"],["",";\n\n    Carp::cluck "],["String","\"Trying to export undefined sub "],["Identifier","${package}"],["String","::"],["Identifier","${name}"],["String","\""],["",";\n\n    "],["Statement","return"],["",";\n}\n\n"],["Statement","our"],[""," "],["Identifier","$CALLER"],["",";\n\n"],["Keyword","sub "],["Function","_make_wrapped_sub "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],["","            = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$fq_name"],["","         = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$sub"],["","             = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$export_recorder"],[""," = "],["Statement","shift"],["",";\n\n    "],["Comment","# We need to set the package at import time, so that when"],["","\n    "],["Comment","# package Foo imports has(), we capture \"Foo\" as the"],["","\n    "],["Comment","# package. This lets other packages call Foo::has() and get"],["","\n    "],["Comment","# the right package. This is done for backwards compatibility"],["","\n    "],["Comment","# with existing production code, not because this is a good"],["","\n    "],["Comment","# idea ;)"],["","\n    "],["Statement","return"],[""," "],["Keyword","sub "],["","{\n        "],["Statement","my"],[""," "],["Identifier","$caller"],[""," = "],["Identifier","$CALLER"],["",";\n\n        "],["Statement","my"],[""," "],["Identifier","$wrapper"],[""," = "],["Identifier","$self"],["","->_curry_wrapper( "],["Identifier","$sub"],["",", "],["Identifier","$fq_name"],["",", "],["Identifier","$caller"],[""," );\n\n        "],["Statement","my"],[""," "],["Identifier","$sub"],[""," = subname( "],["Identifier","$fq_name"],[""," => "],["Identifier","$wrapper"],[""," );\n\n        "],["Identifier","$export_recorder->{$sub}"],[""," = "],["Number","1"],["",";\n\n        "],["Statement","return"],[""," "],["Identifier","$sub"],["",";\n    };\n}\n\n"],["Keyword","sub "],["Function","_make_wrapped_sub_with_meta "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],["","            = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$fq_name"],["","         = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$sub"],["","             = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$export_recorder"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$meta_lookup"],["","     = "],["Statement","shift"],["",";\n\n    "],["Statement","return"],[""," "],["Keyword","sub "],["","{\n        "],["Statement","my"],[""," "],["Identifier","$caller"],[""," = "],["Identifier","$CALLER"],["",";\n\n        "],["Statement","my"],[""," "],["Identifier","$wrapper"],[""," = "],["Identifier","$self"],["","->_late_curry_wrapper(\n            "],["Identifier","$sub"],["",", "],["Identifier","$fq_name"],["",",\n            "],["Identifier","$meta_lookup"],[""," => "],["Identifier","$caller"],["","\n        );\n\n        "],["Statement","my"],[""," "],["Identifier","$sub"],[""," = subname( "],["Identifier","$fq_name"],[""," => "],["Identifier","$wrapper"],[""," );\n\n        "],["Identifier","$export_recorder->{$sub}"],[""," = "],["Number","1"],["",";\n\n        "],["Statement","return"],[""," "],["Identifier","$sub"],["",";\n    };\n}\n\n"],["Keyword","sub "],["Function","_curry_wrapper "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$class"],["","   = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$sub"],["","     = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$fq_name"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","@extra"],["","   = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$wrapper"],[""," = "],["Keyword","sub "],["","{ "],["Identifier","$sub"],["","->( "],["Identifier","@extra"],["",", "],["Identifier","@_"],[""," ) };\n    "],["Conditional","if"],[""," ( "],["Statement","my"],[""," "],["Identifier","$proto"],[""," = "],["Statement","prototype"],[""," "],["Identifier","$sub"],[""," ) {\n\n        "],["Comment","# "],["Todo","XXX"],["Comment"," - Perl's prototype sucks. Use & to make set_prototype"],["","\n        "],["Comment","# ignore the fact that we're passing \"private variables\""],["","\n        "],["Identifier","&"],["Type","Scalar::Util::"],["Identifier","set_prototype"],["","( "],["Identifier","$wrapper"],["",", "],["Identifier","$proto"],[""," );\n    }\n    "],["Statement","return"],[""," "],["Identifier","$wrapper"],["",";\n}\n\n"],["Keyword","sub "],["Function","_late_curry_wrapper "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$class"],["","   = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$sub"],["","     = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$fq_name"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$extra"],["","   = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","@ex_args"],[""," = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$wrapper"],[""," = "],["Keyword","sub "],["","{\n\n        "],["Comment","# resolve curried arguments at runtime via this closure"],["","\n        "],["Statement","my"],[""," "],["Identifier","@curry"],[""," = ( "],["Identifier","$extra"],["","->("],["Identifier","@ex_args"],["",") );\n        "],["Statement","return"],[""," "],["Identifier","$sub"],["","->( "],["Identifier","@curry"],["",", "],["Identifier","@_"],[""," );\n    };\n\n    "],["Conditional","if"],[""," ( "],["Statement","my"],[""," "],["Identifier","$proto"],[""," = "],["Statement","prototype"],[""," "],["Identifier","$sub"],[""," ) {\n\n        "],["Comment","# "],["Todo","XXX"],["Comment"," - Perl's prototype sucks. Use & to make set_prototype"],["","\n        "],["Comment","# ignore the fact that we're passing \"private variables\""],["","\n        "],["Identifier","&"],["Type","Scalar::Util::"],["Identifier","set_prototype"],["","( "],["Identifier","$wrapper"],["",", "],["Identifier","$proto"],[""," );\n    }\n    "],["Statement","return"],[""," "],["Identifier","$wrapper"],["",";\n}\n\n"],["Keyword","sub "],["Function","_make_import_sub "],["","{\n    "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$exporting_package"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$exporter"],["","          = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$exports_from"],["","      = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$is_reexport"],["","       = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$meta_lookup"],["","       = "],["Statement","shift"],["",";\n\n    "],["Statement","return"],[""," "],["Keyword","sub "],["","{\n\n        "],["Comment","# I think we could use Sub::Exporter's collector feature"],["","\n        "],["Comment","# to do this, but that would be rather gross, since that"],["","\n        "],["Comment","# feature isn't really designed to return a value to the"],["","\n        "],["Comment","# caller of the exporter sub."],["","\n        "],["Comment","#"],["","\n        "],["Comment","# Also, this makes sure we preserve backwards compat for"],["","\n        "],["Comment","# _get_caller, so it always sees the arguments in the"],["","\n        "],["Comment","# expected order."],["","\n        "],["Statement","my"],[""," "],["Identifier","$traits"],["",";\n        ( "],["Identifier","$traits"],["",", "],["Identifier","@_"],[""," ) = _strip_traits("],["Identifier","@_"],["",");\n\n        "],["Statement","my"],[""," "],["Identifier","$metaclass"],["",";\n        ( "],["Identifier","$metaclass"],["",", "],["Identifier","@_"],[""," ) = _strip_metaclass("],["Identifier","@_"],["",");\n        "],["Identifier","$metaclass"],["","\n            = Moose::Util::resolve_metaclass_alias( "],["String","'Class'"],[""," => "],["Identifier","$metaclass"],[""," )\n            "],["Conditional","if"],[""," "],["Operator","defined"],[""," "],["Identifier","$metaclass"],[""," && "],["Statement","length"],[""," "],["Identifier","$metaclass"],["",";\n\n        "],["Statement","my"],[""," "],["Identifier","$meta_name"],["",";\n        ( "],["Identifier","$meta_name"],["",", "],["Identifier","@_"],[""," ) = _strip_meta_name("],["Identifier","@_"],["",");\n\n        "],["Comment","# Normally we could look at $_[0], but in some weird cases"],["","\n        "],["Comment","# (involving goto &Moose::import), $_[0] ends as something"],["","\n        "],["Comment","# else (like Squirrel)."],["","\n        "],["Statement","my"],[""," "],["Identifier","$class"],[""," = "],["Identifier","$exporting_package"],["",";\n\n        "],["Identifier","$CALLER"],[""," = _get_caller("],["Identifier","@_"],["",");\n\n        "],["Comment","# this works because both pragmas set $^H (see perldoc"],["","\n        "],["Comment","# perlvar) which affects the current compilation -"],["","\n        "],["Comment","# i.e. the file who use'd us - which is why we don't need"],["","\n        "],["Comment","# to do anything special to make it affect that file"],["","\n        "],["Comment","# rather than this one (which is already compiled)"],["","\n\n        strict->"],["Statement","import"],["",";\n        warnings->"],["Statement","import"],["",";\n\n        "],["Statement","my"],[""," "],["Identifier","$did_init_meta"],["",";\n        "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$c"],[""," ( "],["Statement","grep"],[""," "],["Statement","{"],[""," "],["Identifier","$_"],["","->can("],["String","'init_meta'"],["",") "],["Statement","}"],[""," "],["Identifier","$class"],["",", "],["Identifier","@{$exports_from}"],[""," ) {\n\n            "],["Comment","# init_meta can apply a role, which when loaded uses"],["","\n            "],["Comment","# Moose::Exporter, which in turn sets $CALLER, so we need"],["","\n            "],["Comment","# to protect against that."],["","\n            "],["Statement","local"],[""," "],["Identifier","$CALLER"],[""," = "],["Identifier","$CALLER"],["",";\n            "],["Identifier","$c"],["","->init_meta(\n                "],["String","for_class"],[""," => "],["Identifier","$CALLER"],["",",\n                "],["String","metaclass"],[""," => "],["Identifier","$metaclass"],["",",\n                "],["String","meta_name"],[""," => "],["Identifier","$meta_name"],["",",\n            );\n            "],["Identifier","$did_init_meta"],[""," = "],["Number","1"],["",";\n        }\n\n        {\n            "],["Comment","# The metaroles will use Moose::Role, which in turn uses"],["","\n            "],["Comment","# Moose::Exporter, which in turn sets $CALLER, so we need"],["","\n            "],["Comment","# to protect against that."],["","\n            "],["Statement","local"],[""," "],["Identifier","$CALLER"],[""," = "],["Identifier","$CALLER"],["",";\n            _apply_metaroles(\n                "],["Identifier","$CALLER"],["",",\n                ["],["Identifier","$class"],["",", "],["Identifier","@$exports_from"],["","],\n                "],["Identifier","$meta_lookup"],["","\n            );\n        }\n\n        "],["Conditional","if"],[""," ( "],["Identifier","$did_init_meta"],[""," && "],["Identifier","@{$traits}"],[""," ) {\n\n            "],["Comment","# The traits will use Moose::Role, which in turn uses"],["","\n            "],["Comment","# Moose::Exporter, which in turn sets $CALLER, so we need"],["","\n            "],["Comment","# to protect against that."],["","\n            "],["Statement","local"],[""," "],["Identifier","$CALLER"],[""," = "],["Identifier","$CALLER"],["",";\n            _apply_meta_traits( "],["Identifier","$CALLER"],["",", "],["Identifier","$traits"],["",", "],["Identifier","$meta_lookup"],[""," );\n        }\n        "],["Conditional","elsif"],[""," ( "],["Identifier","@{$traits}"],[""," ) {\n            "],["Statement","require"],[""," Moose;\n            Moose->throw_error(\n                "],["String","\"Cannot provide traits when "],["Identifier","$class"],["String"," does not have an init_meta() method\""],["","\n            );\n        }\n\n        "],["Statement","my"],[""," ( "],["Operator","undef"],["",", "],["Identifier","@args"],[""," ) = "],["Identifier","@_"],["",";\n        "],["Statement","my"],[""," "],["Identifier","$extra"],[""," = "],["Statement","shift"],[""," "],["Identifier","@args"],[""," "],["Conditional","if"],[""," "],["Operator","ref"],[""," "],["Identifier","$args["],["Number","0"],["Identifier","]"],[""," "],["Operator","eq"],[""," "],["String","'HASH'"],["",";\n\n        "],["Identifier","$extra"],[""," ||= {};\n        "],["Conditional","if"],[""," ( !"],["Identifier","$extra->{"],["String","into"],["Identifier","}"],[""," ) {\n            "],["Identifier","$extra->{"],["String","into_level"],["Identifier","}"],[""," ||= "],["Number","0"],["",";\n            "],["Identifier","$extra->{"],["String","into_level"],["Identifier","}"],["","++;\n        }\n\n        "],["Identifier","$class"],["","->"],["Identifier","$exporter"],["","( "],["Identifier","$extra"],["",", "],["Identifier","@args"],[""," );\n    };\n}\n\n"],["Keyword","sub "],["Function","_strip_traits "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$idx"],[""," = first_index { ( "],["Identifier","$_"],[""," || "],["String","''"],[""," ) "],["Operator","eq"],[""," "],["String","'-traits'"],[""," } "],["Identifier","@_"],["",";\n\n    "],["Statement","return"],[""," ( [], "],["Identifier","@_"],[""," ) "],["Conditional","unless"],[""," "],["Identifier","$idx"],[""," >= "],["Number","0"],[""," && "],["Identifier","$#_"],[""," >= "],["Identifier","$idx"],[""," + "],["Number","1"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$traits"],[""," = "],["Identifier","$_["],[""," "],["Identifier","$idx"],[""," + "],["Number","1"],[""," "],["Identifier","]"],["",";\n\n    "],["Statement","splice"],[""," "],["Identifier","@_"],["",", "],["Identifier","$idx"],["",", "],["Number","2"],["",";\n\n    "],["Identifier","$traits"],[""," = ["],["Identifier","$traits"],["","] "],["Conditional","unless"],[""," "],["Operator","ref"],[""," "],["Identifier","$traits"],["",";\n\n    "],["Statement","return"],[""," ( "],["Identifier","$traits"],["",", "],["Identifier","@_"],[""," );\n}\n\n"],["Keyword","sub "],["Function","_strip_metaclass "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$idx"],[""," = first_index { ( "],["Identifier","$_"],[""," || "],["String","''"],[""," ) "],["Operator","eq"],[""," "],["String","'-metaclass'"],[""," } "],["Identifier","@_"],["",";\n\n    "],["Statement","return"],[""," ( "],["Operator","undef"],["",", "],["Identifier","@_"],[""," ) "],["Conditional","unless"],[""," "],["Identifier","$idx"],[""," >= "],["Number","0"],[""," && "],["Identifier","$#_"],[""," >= "],["Identifier","$idx"],[""," + "],["Number","1"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$metaclass"],[""," = "],["Identifier","$_["],[""," "],["Identifier","$idx"],[""," + "],["Number","1"],[""," "],["Identifier","]"],["",";\n\n    "],["Statement","splice"],[""," "],["Identifier","@_"],["",", "],["Identifier","$idx"],["",", "],["Number","2"],["",";\n\n    "],["Statement","return"],[""," ( "],["Identifier","$metaclass"],["",", "],["Identifier","@_"],[""," );\n}\n\n"],["Keyword","sub "],["Function","_strip_meta_name "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$idx"],[""," = first_index { ( "],["Identifier","$_"],[""," || "],["String","''"],[""," ) "],["Operator","eq"],[""," "],["String","'-meta_name'"],[""," } "],["Identifier","@_"],["",";\n\n    "],["Statement","return"],[""," ( "],["String","'meta'"],["",", "],["Identifier","@_"],[""," ) "],["Conditional","unless"],[""," "],["Identifier","$idx"],[""," >= "],["Number","0"],[""," && "],["Identifier","$#_"],[""," >= "],["Identifier","$idx"],[""," + "],["Number","1"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$meta_name"],[""," = "],["Identifier","$_["],[""," "],["Identifier","$idx"],[""," + "],["Number","1"],[""," "],["Identifier","]"],["",";\n\n    "],["Statement","splice"],[""," "],["Identifier","@_"],["",", "],["Identifier","$idx"],["",", "],["Number","2"],["",";\n\n    "],["Statement","return"],[""," ( "],["Identifier","$meta_name"],["",", "],["Identifier","@_"],[""," );\n}\n\n"],["Keyword","sub "],["Function","_apply_metaroles "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$class"],["",", "],["Identifier","$exports_from"],["",", "],["Identifier","$meta_lookup"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$metaroles"],[""," = _collect_metaroles("],["Identifier","$exports_from"],["",");\n    "],["Statement","my"],[""," "],["Identifier","$base_class_roles"],[""," = "],["Statement","delete"],[""," "],["Identifier","$metaroles->{"],["String","base_class_roles"],["Identifier","}"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$meta"],[""," = "],["Identifier","$meta_lookup"],["","->("],["Identifier","$class"],["",");\n    "],["Comment","# for instance, Moose.pm uses Moose::Util::TypeConstraints"],["","\n    "],["Statement","return"],[""," "],["Conditional","unless"],[""," "],["Identifier","$meta"],["",";\n\n    Moose::Util::MetaRole::apply_metaroles(\n        "],["String","for"],[""," => "],["Identifier","$meta"],["",",\n        "],["Identifier","%$metaroles"],["",",\n    ) "],["Conditional","if"],[""," "],["Statement","keys"],[""," "],["Identifier","%$metaroles"],["",";\n\n    Moose::Util::MetaRole::apply_base_class_roles(\n        "],["String","for"],["","   => "],["Identifier","$meta"],["",",\n        "],["String","roles"],[""," => "],["Identifier","$base_class_roles"],["",",\n    ) "],["Conditional","if"],[""," "],["Identifier","$meta"],["","->isa("],["String","'Class::MOP::Class'"],["",")\n      && "],["Identifier","$base_class_roles"],[""," && "],["Identifier","@$base_class_roles"],["",";\n}\n\n"],["Keyword","sub "],["Function","_collect_metaroles "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$exports_from"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","@old_style_role_types"],[""," = "],["Statement","map"],[""," "],["Statement","{"],[""," "],["String","\""],["Identifier","${_}"],["String","_roles\""],[""," "],["Statement","}"],[""," "],["String","qw("],["","\n"],["String","        metaclass"],["","\n"],["String","        attribute_metaclass"],["","\n"],["String","        method_metaclass"],["","\n"],["String","        wrapped_method_metaclass"],["","\n"],["String","        instance_metaclass"],["","\n"],["String","        constructor_class"],["","\n"],["String","        destructor_class"],["","\n"],["String","        error_class"],["","\n"],["String","    )"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","%class_metaroles"],["",";\n    "],["Statement","my"],[""," "],["Identifier","%role_metaroles"],["",";\n    "],["Statement","my"],[""," "],["Identifier","@base_class_roles"],["",";\n    "],["Statement","my"],[""," "],["Identifier","%old_style_roles"],["",";\n\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$exporter"],[""," ("],["Identifier","@$exports_from"],["",") {\n        "],["Statement","my"],[""," "],["Identifier","$data"],[""," = "],["Identifier","$EXPORT_SPEC{$exporter}"],["",";\n\n        "],["Conditional","if"],[""," ("],["Statement","exists"],[""," "],["Identifier","$data->{"],["String","class_metaroles"],["Identifier","}"],["",") {\n            "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$type"],[""," ("],["Statement","keys"],[""," "],["Identifier","%{"],[""," "],["Identifier","$data->{"],["String","class_metaroles"],["Identifier","}"],[""," "],["Identifier","}"],["",") {\n                "],["Statement","push"],[""," "],["Identifier","@{"],[""," "],["Identifier","$class_metaroles{$type}"],[""," ||= [] "],["Identifier","}"],["",",\n                     "],["Identifier","@{"],[""," "],["Identifier","$data->{"],["String","class_metaroles"],["Identifier","}{$type}"],[""," "],["Identifier","}"],["",";\n            }\n        }\n\n        "],["Conditional","if"],[""," ("],["Statement","exists"],[""," "],["Identifier","$data->{"],["String","role_metaroles"],["Identifier","}"],["",") {\n            "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$type"],[""," ("],["Statement","keys"],[""," "],["Identifier","%{"],[""," "],["Identifier","$data->{"],["String","role_metaroles"],["Identifier","}"],[""," "],["Identifier","}"],["",") {\n                "],["Statement","push"],[""," "],["Identifier","@{"],[""," "],["Identifier","$role_metaroles{$type}"],[""," ||= [] "],["Identifier","}"],["",",\n                     "],["Identifier","@{"],[""," "],["Identifier","$data->{"],["String","role_metaroles"],["Identifier","}{$type}"],[""," "],["Identifier","}"],["",";\n            }\n        }\n\n        "],["Conditional","if"],[""," ("],["Statement","exists"],[""," "],["Identifier","$data->{"],["String","base_class_roles"],["Identifier","}"],["",") {\n            "],["Statement","push"],[""," "],["Identifier","@base_class_roles"],["",", "],["Identifier","@{"],[""," "],["Identifier","$data->{"],["String","base_class_roles"],["Identifier","}"],[""," "],["Identifier","}"],["",";\n        }\n\n        "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$type"],[""," ("],["Identifier","@old_style_role_types"],["",") {\n            "],["Conditional","if"],[""," ("],["Statement","exists"],[""," "],["Identifier","$data->{$type}"],["",") {\n                "],["Statement","push"],[""," "],["Identifier","@{"],[""," "],["Identifier","$old_style_roles{$type}"],[""," ||= [] "],["Identifier","}"],["",",\n                     "],["Identifier","@{"],[""," "],["Identifier","$data->{$type}"],[""," "],["Identifier","}"],["",";\n            }\n        }\n    }\n\n    "],["Statement","return"],[""," {\n        ("],["Statement","keys"],["","("],["Identifier","%class_metaroles"],["",")\n            ? ("],["String","class_metaroles"],["","  => \\"],["Identifier","%class_metaroles"],["",")\n            : ()),\n        ("],["Statement","keys"],["","("],["Identifier","%role_metaroles"],["",")\n            ? ("],["String","role_metaroles"],["","   => \\"],["Identifier","%role_metaroles"],["",")\n            : ()),\n        ("],["Identifier","@base_class_roles"],["","\n            ? ("],["String","base_class_roles"],[""," => \\"],["Identifier","@base_class_roles"],["",")\n            : ()),\n        "],["Identifier","%old_style_roles"],["",",\n    };\n}\n\n"],["Keyword","sub "],["Function","_apply_meta_traits "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$class"],["",", "],["Identifier","$traits"],["",", "],["Identifier","$meta_lookup"],[""," ) = "],["Identifier","@_"],["",";\n\n    "],["Statement","return"],[""," "],["Conditional","unless"],[""," "],["Identifier","@{$traits}"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$meta"],[""," = "],["Identifier","$meta_lookup"],["","->("],["Identifier","$class"],["",");\n\n    "],["Statement","my"],[""," "],["Identifier","$type"],[""," = "],["Identifier","$meta"],["","->isa("],["String","'Moose::Meta::Role'"],["",") ? "],["String","'Role'"],["","\n             : "],["Identifier","$meta"],["","->isa("],["String","'Class::MOP::Class'"],["",") ? "],["String","'Class'"],["","\n             : Moose->throw_error("],["String","'Cannot determine metaclass type for '"],["","\n                                . "],["String","'trait application. Meta isa '"],["","\n                                . "],["Operator","ref"],[""," "],["Identifier","$meta"],["",");\n\n    "],["Statement","my"],[""," "],["Identifier","@resolved_traits"],[""," = "],["Statement","map"],[""," "],["Statement","{"],["","\n        "],["Operator","ref"],[""," "],["Identifier","$_"],["","\n            ? "],["Identifier","$_"],["","\n            : Moose::Util::resolve_metatrait_alias( "],["Identifier","$type"],[""," => "],["Identifier","$_"],[""," )\n    "],["Statement","}"],[""," "],["Identifier","@$traits"],["",";\n\n    "],["Statement","return"],[""," "],["Conditional","unless"],[""," "],["Identifier","@resolved_traits"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","%args"],[""," = ( "],["String","for"],[""," => "],["Identifier","$class"],[""," );\n\n    "],["Conditional","if"],[""," ( "],["Identifier","$meta"],["","->isa("],["String","'Moose::Meta::Role'"],["",") ) {\n        "],["Identifier","$args{"],["String","role_metaroles"],["Identifier","}"],[""," = { "],["String","role"],[""," => \\"],["Identifier","@resolved_traits"],[""," };\n    }\n    "],["Conditional","else"],[""," {\n        "],["Identifier","$args{"],["String","class_metaroles"],["Identifier","}"],[""," = { "],["String","class"],[""," => \\"],["Identifier","@resolved_traits"],[""," };\n    }\n\n    Moose::Util::MetaRole::apply_metaroles("],["Identifier","%args"],["",");\n}\n\n"],["Keyword","sub "],["Function","_get_caller "],["","{\n\n    "],["Comment","# 1 extra level because it's called by import so there's a layer"],["","\n    "],["Comment","# of indirection"],["","\n    "],["Statement","my"],[""," "],["Identifier","$offset"],[""," = "],["Number","1"],["",";\n\n    "],["Statement","return"],["","\n          ( "],["Operator","ref"],[""," "],["Identifier","$_["],["Number","1"],["Identifier","]"],[""," && "],["Operator","defined"],[""," "],["Identifier","$_["],["Number","1"],["Identifier","]->{"],["String","into"],["Identifier","}"],[""," ) ? "],["Identifier","$_["],["Number","1"],["Identifier","]->{"],["String","into"],["Identifier","}"],["","\n        : ( "],["Operator","ref"],[""," "],["Identifier","$_["],["Number","1"],["Identifier","]"],[""," && "],["Operator","defined"],[""," "],["Identifier","$_["],["Number","1"],["Identifier","]->{"],["String","into_level"],["Identifier","}"],[""," )\n        ? "],["Statement","caller"],["","( "],["Identifier","$offset"],[""," + "],["Identifier","$_["],["Number","1"],["Identifier","]->{"],["String","into_level"],["Identifier","}"],[""," )\n        : "],["Statement","caller"],["","("],["Identifier","$offset"],["",");\n}\n\n"],["Keyword","sub "],["Function","_make_unimport_sub "],["","{\n    "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$exporting_package"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$exports"],["","           = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$export_recorder"],["","   = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$is_reexport"],["","       = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$meta_lookup"],["","       = "],["Statement","shift"],["",";\n\n    "],["Statement","return"],[""," "],["Keyword","sub "],["","{\n        "],["Statement","my"],[""," "],["Identifier","$caller"],[""," = "],["Statement","scalar"],[""," "],["Statement","caller"],["","();\n        Moose::Exporter->_remove_keywords(\n            "],["Identifier","$caller"],["",",\n            [ "],["Statement","keys"],[""," "],["Identifier","%{$exports}"],[""," ],\n            "],["Identifier","$export_recorder"],["",",\n            "],["Identifier","$is_reexport"],["",",\n        );\n    };\n}\n\n"],["Keyword","sub "],["Function","_remove_keywords "],["","{\n    "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$package"],["","          = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$keywords"],["","         = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$recorded_exports"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$is_reexport"],["","      = "],["Statement","shift"],["",";\n\n    "],["Statement","no strict"],[""," "],["String","'refs'"],["",";\n\n    "],["Repeat","foreach"],[""," "],["Statement","my"],[""," "],["Identifier","$name"],[""," ( "],["Identifier","@{$keywords}"],[""," ) {\n        "],["Conditional","if"],[""," ( "],["Operator","defined"],[""," "],["Identifier","&{"],[""," "],["Identifier","$package"],[""," . "],["String","'::'"],[""," . "],["Identifier","$name"],[""," "],["Identifier","}"],[""," ) {\n            "],["Statement","my"],[""," "],["Identifier","$sub"],[""," = \\"],["Identifier","&{"],[""," "],["Identifier","$package"],[""," . "],["String","'::'"],[""," . "],["Identifier","$name"],[""," "],["Identifier","}"],["",";\n\n            "],["Comment","# make sure it is from us"],["","\n            "],["Statement","next"],[""," "],["Conditional","unless"],[""," "],["Identifier","$recorded_exports->{$sub}"],["",";\n\n            "],["Conditional","if"],[""," ( "],["Identifier","$is_reexport->{$name}"],[""," ) {\n                "],["Statement","no strict"],[""," "],["String","'refs'"],["",";\n                "],["Statement","next"],["","\n                    "],["Conditional","unless"],[""," _export_is_flagged(\n                            \\"],["Identifier","*{"],[""," "],["Statement","join"],[""," "],["String","q{::}"],[""," => "],["Identifier","$package"],["",", "],["Identifier","$name"],[""," "],["Identifier","}"],[""," );\n            }\n\n            "],["Comment","# and if it is from us, then undef the slot"],["","\n            "],["Statement","delete"],[""," "],["Identifier","${"],[""," "],["Identifier","$package"],[""," . "],["String","'::'"],[""," "],["Identifier","}{$name}"],["",";\n        }\n    }\n}\n\n"],["Comment","# maintain this for now for backcompat"],["","\n"],["Comment","# make sure to return a sub to install in the same circumstances as previously"],["","\n"],["Comment","# but this functionality now happens at the end of ->import"],["","\n"],["Keyword","sub "],["Function","_make_init_meta "],["","{\n    "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$class"],["","          = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$args"],["","           = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$meta_lookup"],["","    = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","%old_style_roles"],["",";\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$role"],[""," (\n        "],["Statement","map"],[""," "],["Statement","{"],["String","\""],["Identifier","${_}"],["String","_roles\""],["Statement","}"],["","\n        "],["String","qw("],["","\n"],["String","        metaclass"],["","\n"],["String","        attribute_metaclass"],["","\n"],["String","        method_metaclass"],["","\n"],["String","        wrapped_method_metaclass"],["","\n"],["String","        instance_metaclass"],["","\n"],["String","        constructor_class"],["","\n"],["String","        destructor_class"],["","\n"],["String","        error_class"],["","\n"],["String","        )"],["","\n        ) {\n        "],["Identifier","$old_style_roles{$role}"],[""," = "],["Identifier","$args->{$role}"],["","\n            "],["Conditional","if"],[""," "],["Statement","exists"],[""," "],["Identifier","$args->{$role}"],["",";\n    }\n\n    "],["Statement","my"],[""," "],["Identifier","%base_class_roles"],["",";\n    "],["Identifier","%base_class_roles"],[""," = ( "],["String","roles"],[""," => "],["Identifier","$args->{"],["String","base_class_roles"],["Identifier","}"],[""," )\n        "],["Conditional","if"],[""," "],["Statement","exists"],[""," "],["Identifier","$args->{"],["String","base_class_roles"],["Identifier","}"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","%new_style_roles"],[""," = "],["Statement","map"],[""," "],["Statement","{"],[""," "],["Identifier","$_"],[""," => "],["Identifier","$args->{$_}"],[""," "],["Statement","}"],["","\n        "],["Statement","grep"],[""," "],["Statement","{"],[""," "],["Statement","exists"],[""," "],["Identifier","$args->{$_}"],[""," "],["Statement","}"],[""," "],["String","qw( class_metaroles role_metaroles )"],["",";\n\n    "],["Statement","return"],[""," "],["Conditional","unless"],[""," "],["Identifier","%new_style_roles"],[""," || "],["Identifier","%old_style_roles"],[""," || "],["Identifier","%base_class_roles"],["",";\n\n    "],["Statement","return"],[""," "],["Keyword","sub "],["","{\n        "],["Statement","shift"],["",";\n        "],["Statement","my"],[""," "],["Identifier","%opts"],[""," = "],["Identifier","@_"],["",";\n        "],["Identifier","$meta_lookup"],["","->("],["Identifier","$opts{"],["String","for_class"],["Identifier","}"],["",");\n    };\n}\n\n"],["Keyword","sub "],["Function","import "],["","{\n    strict->"],["Statement","import"],["",";\n    warnings->"],["Statement","import"],["",";\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","# ABSTRACT: make an import() and unimport() just like Moose.pm"],["","\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=pod"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nMoose::Exporter - make an "],["Identifier","import()"],[""," and "],["Identifier","unimport()"],[""," just like Moose.pm\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nversion 2.1005\n\n"],["Statement","=head1"],[""," "],["String","SYNOPSIS"],["","\n\n"],["PreProc","  package MyApp::Moose;"],["","\n\n"],["PreProc","  use Moose ();"],["","\n"],["PreProc","  use Moose::Exporter;"],["","\n\n"],["PreProc","  Moose::Exporter->setup_import_methods("],["","\n"],["PreProc","      with_meta => [ 'has_rw', 'sugar2' ],"],["","\n"],["PreProc","      as_is     => [ 'sugar3', \\&Some::Random::thing ],"],["","\n"],["PreProc","      also      => 'Moose',"],["","\n"],["PreProc","  );"],["","\n\n"],["PreProc","  sub has_rw {"],["","\n"],["PreProc","      my ( $meta, $name, %options ) = @_;"],["","\n"],["PreProc","      $meta->add_attribute("],["","\n"],["PreProc","          $name,"],["","\n"],["PreProc","          is => 'rw',"],["","\n"],["PreProc","          %options,"],["","\n"],["PreProc","      );"],["","\n"],["PreProc","  }"],["","\n\n"],["PreProc","  # then later ..."],["","\n"],["PreProc","  package MyApp::User;"],["","\n\n"],["PreProc","  use MyApp::Moose;"],["","\n\n"],["PreProc","  has 'name';"],["","\n"],["PreProc","  has_rw 'size';"],["","\n"],["PreProc","  thing;"],["","\n\n"],["PreProc","  no MyApp::Moose;"],["","\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nThis module encapsulates the exporting of sugar functions in a\n"],["Identifier","C<Moose.pm>"],["","-like manner. It does this by building custom "],["Identifier","C<import>"],[""," and\n"],["Identifier","C<unimport>"],[""," methods for your module, based on a spec you provide.\n\nIt also lets you \"stack\" Moose-alike modules so you can export Moose's sugar\nas well as your own, along with sugar from any random "],["Identifier","C<MooseX>"],[""," module, as\nlong as they all use "],["Identifier","C<Moose::Exporter>"],["",". This feature exists to let you bundle\na set of MooseX modules into a policy module that developers can use directly\ninstead of using Moose itself.\n\nTo simplify writing exporter modules, "],["Identifier","C<Moose::Exporter>"],[""," also imports\n"],["Identifier","C<strict>"],[""," and "],["Identifier","C<warnings>"],[""," into your exporter module, as well as into\nmodules that use it.\n\n"],["Statement","=head1"],[""," "],["String","METHODS"],["","\n\nThis module provides two public methods:\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< Moose::Exporter->setup_import_methods(...) >>"],["","\n\nWhen you call this method, "],["Identifier","C<Moose::Exporter>"],[""," builds custom "],["Identifier","C<import>"],[""," and\n"],["Identifier","C<unimport>"],[""," methods for your module. The "],["Identifier","C<import>"],[""," method\nwill export the functions you specify, and can also re-export functions\nexported by some other module (like "],["Identifier","C<Moose.pm>"],["","). If you pass any parameters\nfor "],["Identifier","L<Moose::Util::MetaRole>"],["",", the "],["Identifier","C<import>"],[""," method will also call\n"],["Identifier","C<Moose::Util::MetaRole::apply_metaroles>"],[""," and\n"],["Identifier","C<Moose::Util::MetaRole::apply_base_class_roles>"],[""," as needed, after making\nsure the metaclass is initialized.\n\nThe "],["Identifier","C<unimport>"],[""," method cleans the caller's namespace of all the exported\nfunctions. This includes any functions you re-export from other\npackages. However, if the consumer of your package also imports those\nfunctions from the original package, they will "],["Identifier","I<not>"],[""," be cleaned.\n\nNote that if any of these methods already exist, they will not be\noverridden, you will have to use "],["Identifier","C<build_import_methods>"],[""," to get the\ncoderef that would be installed.\n\nThis method accepts the following parameters:\n\n"],["Statement","=over"],[""," "],["Number","8"],["","\n\n"],["Statement","=item"],[""," "],["String","* with_meta => [ ... ]"],["","\n\nThis list of function "],["Identifier","I<names only>"],[""," will be wrapped and then exported. The\nwrapper will pass the metaclass object for the caller as its first argument.\n\nMany sugar functions will need to use this metaclass object to do something to\nthe calling package.\n\n"],["Statement","=item"],[""," "],["String","* as_is => [ ... ]"],["","\n\nThis list of function names or sub references will be exported as-is. You can\nidentify a subroutine by reference, which is handy to re-export some other\nmodule's functions directly by reference ("],["Identifier","C<\\&Some::Package::function>"],["",").\n\nIf you do export some other package's function, this function will never be\nremoved by the "],["Identifier","C<unimport>"],[""," method. The reason for this is we cannot know if\nthe caller "],["Identifier","I<also>"],[""," explicitly imported the sub themselves, and therefore wants\nto keep it.\n\n"],["Statement","=item"],[""," "],["String","* trait_aliases => [ ... ]"],["","\n\nThis is a list of package names which should have shortened aliases exported,\nsimilar to the functionality of "],["Identifier","L<aliased>"],["",". Each element in the list can be\neither a package name, in which case the export will be named as the last\nnamespace component of the package, or an arrayref, whose first element is the\npackage to alias to, and second element is the alias to export.\n\n"],["Statement","=item"],[""," "],["String","* also => $name or \\@names"],["","\n\nThis is a list of modules which contain functions that the caller\nwants to export. These modules must also use "],["Identifier","C<Moose::Exporter>"],["",". The\nmost common use case will be to export the functions from "],["Identifier","C<Moose.pm>"],["",".\nFunctions specified by "],["Identifier","C<with_meta>"],[""," or "],["Identifier","C<as_is>"],[""," take precedence over\nfunctions exported by modules specified by "],["Identifier","C<also>"],["",", so that a module\ncan selectively override functions exported by another module.\n\n"],["Identifier","C<Moose::Exporter>"],[""," also makes sure all these functions get removed\nwhen "],["Identifier","C<unimport>"],[""," is called.\n\n"],["Statement","=item"],[""," "],["String","* meta_lookup => sub { ... }"],["","\n\nThis is a function which will be called to provide the metaclass\nto be operated upon by the exporter. This is an advanced feature\nintended for use by package generator modules in the vein of\n"],["Identifier","L<MooseX::Role::Parameterized>"],[""," in order to simplify reusing sugar\nfrom other modules that use "],["Identifier","C<Moose::Exporter>"],["",". This function is\nused, for example, to select the metaclass to bind to functions\nthat are exported using the "],["Identifier","C<with_meta>"],[""," option.\n\nThis function will receive one parameter: the class name into which\nthe sugar is being exported. The default implementation is:\n\n"],["PreProc","    sub { Class::MOP::class_of(shift) }"],["","\n\nAccordingly, this function is expected to return a metaclass.\n\n"],["Statement","=back"],["","\n\nYou can also provide parameters for "],["Identifier","C<Moose::Util::MetaRole::apply_metaroles>"],["","\nand "],["Identifier","C<Moose::Util::MetaRole::base_class_roles>"],["",". Specifically, valid parameters\nare \"class_metaroles\", \"role_metaroles\", and \"base_class_roles\".\n\n"],["Statement","=item"],[""," "],["Identifier","B<< Moose::Exporter->build_import_methods(...) >>"],["","\n\nReturns two code refs, one for "],["Identifier","C<import>"],[""," and one for "],["Identifier","C<unimport>"],["",".\n\nAccepts the additional "],["Identifier","C<install>"],[""," option, which accepts an arrayref of method\nnames to install into your exporting package. The valid options are "],["Identifier","C<import>"],["","\nand "],["Identifier","C<unimport>"],["",". Calling "],["Identifier","C<setup_import_methods>"],[""," is equivalent\nto calling "],["Identifier","C<build_import_methods>"],[""," with "],["Identifier","C<< install => [qw(import unimport)] >>"],["","\nexcept that it doesn't also return the methods.\n\nThe "],["Identifier","C<import>"],[""," method is built using "],["Identifier","L<Sub::Exporter>"],["",". This means that it can\ntake a hashref of the form "],["Identifier","C<< { into => $package } >>"],[""," to specify the package\nit operates on.\n\nUsed by "],["Identifier","C<setup_import_methods>"],["",".\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","IMPORTING AND init_meta"],["","\n\nIf you want to set an alternative base object class or metaclass class, see\nabove for details on how this module can call "],["Identifier","L<Moose::Util::MetaRole>"],[""," for\nyou.\n\nIf you want to do something that is not supported by this module, simply\ndefine an "],["Identifier","C<init_meta>"],[""," method in your class. The "],["Identifier","C<import>"],[""," method that\n"],["Identifier","C<Moose::Exporter>"],[""," generates for you will call this method (if it exists). It\nwill always pass the caller to this method via the "],["Identifier","C<for_class>"],[""," parameter.\n\nMost of the time, your "],["Identifier","C<init_meta>"],[""," method will probably just call "],["Identifier","C<<"],["","\n"],["Identifier","Moose->init_meta >>"],[""," to do the real work:\n\n"],["PreProc","  sub init_meta {"],["","\n"],["PreProc","      shift; # our class name"],["","\n"],["PreProc","      return Moose->init_meta( @_, metaclass => 'My::Metaclass' );"],["","\n"],["PreProc","  }"],["","\n\n"],["Statement","=head1"],[""," "],["String","METACLASS TRAITS"],["","\n\nThe "],["Identifier","C<import>"],[""," method generated by "],["Identifier","C<Moose::Exporter>"],[""," will allow the\nuser of your module to specify metaclass traits in a "],["Identifier","C<-traits>"],["","\nparameter passed as part of the import:\n\n"],["PreProc","  use Moose -traits => 'My::Meta::Trait';"],["","\n\n"],["PreProc","  use Moose -traits => [ 'My::Meta::Trait', 'My::Other::Trait' ];"],["","\n\nThese traits will be applied to the caller's metaclass\ninstance. Providing traits for an exporting class that does not create\na metaclass for the caller is an error.\n\n"],["Statement","=head1"],[""," "],["String","BUGS"],["","\n\nSee "],["Identifier","L<Moose/BUGS>"],[""," for details on reporting bugs.\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nMoose is maintained by the Moose Cabal, along with the help of many contributors. See "],["Identifier","L<Moose/CABAL>"],[""," and "],["Identifier","L<Moose/CONTRIBUTORS>"],[""," for details.\n\n"],["Statement","=head1"],[""," "],["String","COPYRIGHT AND LICENSE"],["","\n\nThis software is copyright (c) 2013 by Infinity Interactive, Inc..\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n"],["Statement","=cut"],["","\n"]]