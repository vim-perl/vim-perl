[["Statement","package"],["Type"," Moose::Meta::Method::Accessor::Native::Collection"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","Moose::Meta::Method::Accessor::Native::Collection::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","Moose::Meta::Method::Accessor::Native::Collection::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n\n"],["Statement","use "],["","Moose::Role;\n\nrequires "],["String","qw( _adds_members )"],["",";\n\n"],["Keyword","sub "],["Function","_inline_coerce_new_values "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","return"],[""," "],["Conditional","unless"],[""," "],["Identifier","$self"],["","->associated_attribute->should_coerce;\n\n    "],["Statement","return"],[""," "],["Conditional","unless"],[""," "],["Identifier","$self"],["","->_tc_member_type_can_coerce;\n\n    "],["Statement","return"],[""," (\n        "],["String","'('"],[""," . "],["Identifier","$self"],["","->_new_members . "],["String","') = map { $member_coercion->($_) }'"],["",",\n                                             "],["Identifier","$self"],["","->_new_members . "],["String","';'"],["",",\n    );\n}\n\n"],["Keyword","sub "],["Function","_tc_member_type_can_coerce "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$member_tc"],[""," = "],["Identifier","$self"],["","->_tc_member_type;\n\n    "],["Statement","return"],[""," "],["Identifier","$member_tc"],[""," && "],["Identifier","$member_tc"],["","->has_coercion;\n}\n\n"],["Keyword","sub "],["Function","_tc_member_type "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$tc"],[""," = "],["Identifier","$self"],["","->associated_attribute->type_constraint;\n    "],["Repeat","while"],[""," ("],["Identifier","$tc"],["",") {\n        "],["Statement","return"],[""," "],["Identifier","$tc"],["","->type_parameter\n            "],["Conditional","if"],[""," "],["Identifier","$tc"],["","->can("],["String","'type_parameter'"],["",");\n        "],["Identifier","$tc"],[""," = "],["Identifier","$tc"],["","->parent;\n    }\n\n    "],["Statement","return"],["",";\n}\n\n"],["Keyword","sub "],["Function","_writer_value_needs_copy "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","return"],[""," "],["Identifier","$self"],["","->_constraint_must_be_checked\n        && !"],["Identifier","$self"],["","->_check_new_members_only;\n}\n\n"],["Keyword","sub "],["Function","_inline_tc_code "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," ("],["Identifier","$value"],["",", "],["Identifier","$tc"],["",", "],["Identifier","$coercion"],["",", "],["Identifier","$message"],["",", "],["Identifier","$is_lazy"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","return"],[""," "],["Conditional","unless"],[""," "],["Identifier","$self"],["","->_constraint_must_be_checked;\n\n    "],["Conditional","if"],[""," ("],["Identifier","$self"],["","->_check_new_members_only) {\n        "],["Statement","return"],[""," "],["Conditional","unless"],[""," "],["Identifier","$self"],["","->_adds_members;\n\n        "],["Statement","return"],[""," "],["Identifier","$self"],["","->_inline_check_member_constraint("],["Identifier","$self"],["","->_new_members);\n    }\n    "],["Conditional","else"],[""," {\n        "],["Statement","return"],[""," (\n            "],["Identifier","$self"],["","->_inline_check_coercion("],["Identifier","$value"],["",", "],["Identifier","$tc"],["",", "],["Identifier","$coercion"],["",", "],["Identifier","$is_lazy"],["","),\n            "],["Identifier","$self"],["","->_inline_check_constraint("],["Identifier","$value"],["",", "],["Identifier","$tc"],["",", "],["Identifier","$message"],["",", "],["Identifier","$is_lazy"],["","),\n        );\n    }\n}\n\n"],["Keyword","sub "],["Function","_check_new_members_only "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Identifier","$self"],["","->associated_attribute;\n\n    "],["Statement","my"],[""," "],["Identifier","$tc"],[""," = "],["Identifier","$attr"],["","->type_constraint;\n\n    "],["Comment","# If we have a coercion, we could come up with an entirely new value after"],["","\n    "],["Comment","# coercing, so we need to check everything,"],["","\n    "],["Statement","return"],[""," "],["Number","0"],[""," "],["Conditional","if"],[""," "],["Identifier","$attr"],["","->should_coerce && "],["Identifier","$tc"],["","->has_coercion;\n\n    "],["Comment","# If the parent is our root type (ArrayRef, HashRef, etc), that means we"],["","\n    "],["Comment","# can just check the new members of the collection, because we know that"],["","\n    "],["Comment","# we will always be generating an appropriate collection type."],["","\n    "],["Comment","#"],["","\n    "],["Comment","# However, if this type has its own constraint (it's Parameteriz_able_,"],["","\n    "],["Comment","# not Paramet_erized_), we don't know what is being checked by the"],["","\n    "],["Comment","# constraint, so we need to check the whole value, not just the members."],["","\n    "],["Statement","return"],[""," "],["Number","1"],["","\n        "],["Conditional","if"],[""," "],["Identifier","$self"],["","->_is_root_type( "],["Identifier","$tc"],["","->parent )\n            && ( "],["Identifier","$tc"],["","->isa("],["String","'Moose::Meta::TypeConstraint::Parameterized'"],["",")\n                 || "],["Identifier","$tc"],["","->isa("],["String","'Specio::Constraint::Parameterized'"],["",") );\n\n    "],["Statement","return"],[""," "],["Number","0"],["",";\n}\n\n"],["Keyword","sub "],["Function","_inline_check_member_constraint "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," ("],["Identifier","$new_value"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$attr_name"],[""," = "],["Identifier","$self"],["","->associated_attribute->name;\n\n    "],["Statement","my"],[""," "],["Identifier","$check"],["","\n        = "],["Identifier","$self"],["","->_tc_member_type->can_be_inlined\n        ? "],["String","'! ('"],[""," . "],["Identifier","$self"],["","->_tc_member_type->_inline_check("],["String","'$new_val'"],["",") . "],["String","')'"],["","\n        : "],["String","' !$member_tc->($new_val) '"],["",";\n\n    "],["Statement","return"],[""," (\n        "],["String","'for my $new_val ('"],[""," . "],["Identifier","$new_value"],[""," . "],["String","') {'"],["",",\n            "],["String","\"if ("],["Identifier","$check"],["String",") {\""],["",",\n                "],["Identifier","$self"],["","->_inline_throw_error(\n                    "],["String","'\"A new member value for '"],[""," . "],["Identifier","$attr_name"],["","\n                  . "],["String","' does not pass its type constraint because: \"'"],[""," . "],["String","' . '"],["","\n                  . "],["String","'do { local $_ = $new_val; $member_message->($new_val) }'"],["",",\n                    "],["String","'data => $new_val'"],["",",\n                ) . "],["String","';'"],["",",\n            "],["String","'}'"],["",",\n        "],["String","'}'"],["",",\n    );\n}\n\n"],["Keyword","sub "],["Function","_inline_get_old_value_for_trigger "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," ("],["Identifier","$instance"],["",", "],["Identifier","$old"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Identifier","$self"],["","->associated_attribute;\n    "],["Statement","return"],[""," "],["Conditional","unless"],[""," "],["Identifier","$attr"],["","->has_trigger;\n\n    "],["Statement","return"],[""," (\n        "],["String","'my '"],[""," . "],["Identifier","$old"],[""," . "],["String","' = '"],[""," . "],["Identifier","$self"],["","->_has_value("],["Identifier","$instance"],["","),\n            "],["String","'? '"],[""," . "],["Identifier","$self"],["","->_copy_old_value("],["Identifier","$self"],["","->_get_value("],["Identifier","$instance"],["",")),\n            "],["String","': ();'"],["",",\n    );\n}\n\naround "],["String","_eval_environment"],[""," => "],["Keyword","sub "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$orig"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$env"],[""," = "],["Identifier","$self"],["","->"],["Identifier","$orig"],["","("],["Identifier","@_"],["",");\n\n    "],["Statement","my"],[""," "],["Identifier","$member_tc"],[""," = "],["Identifier","$self"],["","->_tc_member_type;\n\n    "],["Statement","return"],[""," "],["Identifier","$env"],[""," "],["Conditional","unless"],[""," "],["Identifier","$member_tc"],["",";\n\n    "],["Identifier","$env->{"],["String","'$member_tc'"],["Identifier","}"],[""," = \\( "],["Identifier","$member_tc"],["","->_compiled_type_constraint );\n    "],["Identifier","$env->{"],["String","'$member_coercion'"],["Identifier","}"],[""," = \\(\n        "],["Identifier","$member_tc"],["","->coercion->_compiled_type_coercion\n    ) "],["Conditional","if"],[""," "],["Identifier","$member_tc"],["","->has_coercion;\n    "],["Identifier","$env->{"],["String","'$member_message'"],["Identifier","}"],[""," = \\(\n        "],["Identifier","$member_tc"],["","->has_message\n            ? "],["Identifier","$member_tc"],["","->message\n            : "],["Identifier","$member_tc"],["","->_default_message\n    );\n\n    "],["Statement","my"],[""," "],["Identifier","$tc_env"],[""," = "],["Identifier","$member_tc"],["","->inline_environment();\n\n    "],["Identifier","$env"],[""," = { "],["Identifier","%{$env}"],["",", "],["Identifier","%{$tc_env}"],[""," };\n\n    "],["Statement","return"],[""," "],["Identifier","$env"],["",";\n};\n\n"],["Statement","no "],["","Moose::Role;\n\n"],["Number","1"],["",";\n"]]