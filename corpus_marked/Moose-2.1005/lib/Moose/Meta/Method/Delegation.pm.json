[["","\n"],["Statement","package"],["Type"," Moose::Meta::Method::Delegation"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","Moose::Meta::Method::Delegation::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","Moose::Meta::Method::Delegation::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n\n"],["Statement","use "],["","Carp         "],["String","'confess'"],["",";\n"],["Statement","use "],["","Scalar::Util "],["String","'blessed'"],["",", "],["String","'weaken'"],["",";\n\n"],["Statement","use base"],[""," "],["String","'Moose::Meta::Method'"],["",",\n         "],["String","'Class::MOP::Method::Generated'"],["",";\n\n\n"],["Keyword","sub "],["Function","new "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$class"],["","   = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","%options"],[""," = "],["Identifier","@_"],["",";\n\n    ( "],["Statement","exists"],[""," "],["Identifier","$options{"],["String","attribute"],["Identifier","}"],[""," )\n        || confess "],["String","\"You must supply an attribute to construct with\""],["",";\n\n    ( blessed( "],["Identifier","$options{"],["String","attribute"],["Identifier","}"],[""," )\n            && "],["Identifier","$options{"],["String","attribute"],["Identifier","}"],["","->isa("],["String","'Moose::Meta::Attribute'"],["",") )\n        || confess\n        "],["String","\"You must supply an attribute which is a 'Moose::Meta::Attribute' instance\""],["",";\n\n    ( "],["Identifier","$options{"],["String","package_name"],["Identifier","}"],[""," && "],["Identifier","$options{"],["String","name"],["Identifier","}"],[""," )\n        || confess\n        "],["String","\"You must supply the package_name and name parameters "],["Identifier","$"],["Type","Class::MOP::Method::"],["Identifier","UPGRADE_ERROR_TEXT"],["String","\""],["",";\n\n    ( "],["Identifier","$options{"],["String","delegate_to_method"],["Identifier","}"],[""," && ( !"],["Operator","ref"],[""," "],["Identifier","$options{"],["String","delegate_to_method"],["Identifier","}"],[""," )\n            || ( "],["String","'CODE'"],[""," "],["Operator","eq"],[""," "],["Operator","ref"],[""," "],["Identifier","$options{"],["String","delegate_to_method"],["Identifier","}"],[""," ) )\n        || confess\n        "],["String","'You must supply a delegate_to_method which is a method name or a CODE reference'"],["",";\n\n    "],["Statement","exists"],[""," "],["Identifier","$options{"],["String","curried_arguments"],["Identifier","}"],["","\n        || ( "],["Identifier","$options{"],["String","curried_arguments"],["Identifier","}"],[""," = [] );\n\n    ( "],["Identifier","$options{"],["String","curried_arguments"],["Identifier","}"],[""," &&\n        ( "],["String","'ARRAY'"],[""," "],["Operator","eq"],[""," "],["Operator","ref"],[""," "],["Identifier","$options{"],["String","curried_arguments"],["Identifier","}"],[""," ) )\n        || confess "],["String","'You must supply a curried_arguments which is an ARRAY reference'"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Identifier","$class"],["","->_new( \\"],["Identifier","%options"],[""," );\n\n    weaken( "],["Identifier","$self->{"],["String","'attribute'"],["Identifier","}"],[""," );\n\n    "],["Identifier","$self"],["","->_initialize_body;\n\n    "],["Statement","return"],[""," "],["Identifier","$self"],["",";\n}\n\n"],["Keyword","sub "],["Function","_new "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$class"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$options"],[""," = "],["Identifier","@_"],[""," == "],["Number","1"],[""," ? "],["Identifier","$_["],["Number","0"],["Identifier","]"],[""," : {"],["Identifier","@_"],["","};\n\n    "],["Statement","return"],[""," "],["Operator","bless"],[""," "],["Identifier","$options"],["",", "],["Identifier","$class"],["",";\n}\n\n"],["Keyword","sub "],["Function","curried_arguments "],["","{ ("],["Statement","shift"],["",")->{"],["String","'curried_arguments'"],["","} }\n\n"],["Keyword","sub "],["Function","associated_attribute "],["","{ ("],["Statement","shift"],["",")->{"],["String","'attribute'"],["","} }\n\n"],["Keyword","sub "],["Function","delegate_to_method "],["","{ ("],["Statement","shift"],["",")->{"],["String","'delegate_to_method'"],["","} }\n\n"],["Keyword","sub "],["Function","_initialize_body "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$method_to_call"],[""," = "],["Identifier","$self"],["","->delegate_to_method;\n    "],["Statement","return"],[""," "],["Identifier","$self->{"],["String","body"],["Identifier","}"],[""," = "],["Identifier","$method_to_call"],["","\n        "],["Conditional","if"],[""," "],["Operator","ref"],[""," "],["Identifier","$method_to_call"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$accessor"],[""," = "],["Identifier","$self"],["","->_get_delegate_accessor;\n\n    "],["Statement","my"],[""," "],["Identifier","$handle_name"],[""," = "],["Identifier","$self"],["","->name;\n\n    "],["Comment","# "],["Todo","NOTE:"],["Comment"," we used to do a goto here, but the goto didn't handle"],["","\n    "],["Comment","# failure correctly (it just returned nothing), so I took that"],["","\n    "],["Comment","# out. However, the more I thought about it, the less I liked it"],["","\n    "],["Comment","# doing the goto, and I preferred the act of delegation being"],["","\n    "],["Comment","# actually represented in the stack trace.  - SL"],["","\n    "],["Comment","# not inlining this, since it won't really speed things up at"],["","\n    "],["Comment","# all... the only thing that would end up different would be"],["","\n    "],["Comment","# interpolating in $method_to_call, and a bunch of things in the"],["","\n    "],["Comment","# error handling that mostly never gets called - doy"],["","\n    "],["Identifier","$self->{"],["String","body"],["Identifier","}"],[""," = "],["Keyword","sub "],["","{\n        "],["Statement","my"],[""," "],["Identifier","$instance"],[""," = "],["Statement","shift"],["",";\n        "],["Statement","my"],[""," "],["Identifier","$proxy"],["","    = "],["Identifier","$instance"],["","->"],["Identifier","$accessor"],["","();\n\n        "],["Statement","my"],[""," "],["Identifier","$error"],["","\n            = !"],["Operator","defined"],[""," "],["Identifier","$proxy"],["","                 ? "],["String","' is not defined'"],["","\n            : "],["Operator","ref"],["","("],["Identifier","$proxy"],["",") && !blessed("],["Identifier","$proxy"],["",") ? "],["String","qq{ is not an object (got '"],["Identifier","$proxy"],["String","')}"],["","\n            : "],["Operator","undef"],["",";\n\n        "],["Conditional","if"],[""," ("],["Identifier","$error"],["",") {\n            "],["Identifier","$self"],["","->throw_error(\n                "],["String","\"Cannot delegate "],["Identifier","$handle_name"],["String"," to "],["Identifier","$method_to_call"],["String"," because \""],["","\n                    . "],["String","\"the value of \""],["","\n                    . "],["Identifier","$self"],["","->associated_attribute->name\n                    . "],["Identifier","$error"],["",",\n                "],["String","method_name"],[""," => "],["Identifier","$method_to_call"],["",",\n                "],["String","object"],["","      => "],["Identifier","$instance"],["","\n            );\n        }\n        "],["Statement","unshift"],[""," "],["Identifier","@_"],["",", "],["Identifier","@{"],[""," "],["Identifier","$self"],["","->curried_arguments "],["Identifier","}"],["",";\n        "],["Identifier","$proxy"],["","->"],["Identifier","$method_to_call"],["","("],["Identifier","@_"],["",");\n    };\n}\n\n"],["Keyword","sub "],["Function","_get_delegate_accessor "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Identifier","$self"],["","->associated_attribute;\n\n    "],["Comment","# "],["Todo","NOTE:"],["","\n    "],["Comment","# always use a named method when"],["","\n    "],["Comment","# possible, if you use the method"],["","\n    "],["Comment","# ref and there are modifiers on"],["","\n    "],["Comment","# the accessors then it will not"],["","\n    "],["Comment","# pick up the modifiers too. Only"],["","\n    "],["Comment","# the named method will assure that"],["","\n    "],["Comment","# we also have any modifiers run."],["","\n    "],["Comment","# - SL"],["","\n    "],["Statement","my"],[""," "],["Identifier","$accessor"],[""," = "],["Identifier","$attr"],["","->has_read_method\n        ? "],["Identifier","$attr"],["","->get_read_method\n        : "],["Identifier","$attr"],["","->get_read_method_ref;\n\n    "],["Identifier","$accessor"],[""," = "],["Identifier","$accessor"],["","->body "],["Conditional","if"],[""," Scalar::Util::blessed "],["Identifier","$accessor"],["",";\n\n    "],["Statement","return"],[""," "],["Identifier","$accessor"],["",";\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","# ABSTRACT: A Moose Method metaclass for delegation methods"],["","\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=pod"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nMoose::Meta::Method::Delegation - A Moose Method metaclass for delegation methods\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nversion 2.1005\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nThis is a subclass of "],["Identifier","L<Moose::Meta::Method>"],[""," for delegation\nmethods.\n\n"],["Statement","=head1"],[""," "],["String","METHODS"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< Moose::Meta::Method::Delegation->new(%options) >>"],["","\n\nThis creates the delegation methods based on the provided "],["Identifier","C<%options>"],["",".\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","I<attribute>"],["","\n\nThis must be an instance of "],["Identifier","C<Moose::Meta::Attribute>"],[""," which this\naccessor is being generated for. This options is "],["Identifier","B<required>"],["",".\n\n"],["Statement","=item"],[""," "],["Identifier","I<delegate_to_method>"],["","\n\nThe method in the associated attribute's value to which we\ndelegate. This can be either a method name or a code reference.\n\n"],["Statement","=item"],[""," "],["Identifier","I<curried_arguments>"],["","\n\nAn array reference of arguments that will be prepended to the argument list for\nany call to the delegating method.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metamethod->associated_attribute >>"],["","\n\nReturns the attribute associated with this method.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metamethod->curried_arguments >>"],["","\n\nReturn any curried arguments that will be passed to the delegated method.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metamethod->delegate_to_method >>"],["","\n\nReturns the method to which this method delegates, as passed to the\nconstructor.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","BUGS"],["","\n\nSee "],["Identifier","L<Moose/BUGS>"],[""," for details on reporting bugs.\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nMoose is maintained by the Moose Cabal, along with the help of many contributors. See "],["Identifier","L<Moose/CABAL>"],[""," and "],["Identifier","L<Moose/CONTRIBUTORS>"],[""," for details.\n\n"],["Statement","=head1"],[""," "],["String","COPYRIGHT AND LICENSE"],["","\n\nThis software is copyright (c) 2013 by Infinity Interactive, Inc..\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n"],["Statement","=cut"],["","\n"]]