[["Statement","package"],["Type"," Moose::Meta::Role::Application::ToClass"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","Moose::Meta::Role::Application::ToClass::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","Moose::Meta::Role::Application::ToClass::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n"],["Statement","use "],["","metaclass;\n\n"],["Statement","use "],["","List::MoreUtils "],["String","'firstval'"],["",";\n"],["Statement","use "],["","Moose::Util  "],["String","'english_list'"],["",";\n"],["Statement","use "],["","Scalar::Util "],["String","'weaken'"],["",", "],["String","'blessed'"],["",";\n\n"],["Statement","use base"],[""," "],["String","'Moose::Meta::Role::Application'"],["",";\n\n__PACKAGE__->meta->add_attribute("],["String","'role'"],[""," => (\n    "],["String","reader"],[""," => "],["String","'role'"],["",",\n    Class::MOP::_definition_context(),\n));\n\n__PACKAGE__->meta->add_attribute("],["String","'class'"],[""," => (\n    "],["String","accessor"],[""," => "],["String","'class'"],["",",\n    Class::MOP::_definition_context(),\n));\n\n"],["Keyword","sub "],["Function","apply "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$role"],["",", "],["Identifier","$class"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Comment","# We need weak_ref in CMOP :("],["","\n    weaken("],["Identifier","$self->{"],["String","role"],["Identifier","}"],["","  = "],["Identifier","$role"],["",");\n    weaken("],["Identifier","$self->{"],["String","class"],["Identifier","}"],[""," = "],["Identifier","$class"],["",");\n\n    "],["Identifier","$self"],["","->SUPER::apply("],["Identifier","$role"],["",", "],["Identifier","$class"],["",");\n\n    "],["Identifier","$class"],["","->add_role("],["Identifier","$role"],["",");\n    "],["Identifier","$class"],["","->add_role_application("],["Identifier","$self"],["",");\n}\n\n"],["Keyword","sub "],["Function","check_role_exclusions "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$role"],["",", "],["Identifier","$class"],["",") = "],["Identifier","@_"],["",";\n    "],["Conditional","if"],[""," ("],["Identifier","$class"],["","->excludes_role("],["Identifier","$role"],["","->name)) {\n        "],["Identifier","$class"],["","->throw_error("],["String","\"Conflict detected: \""],[""," . "],["Identifier","$class"],["","->name . "],["String","\" excludes role '\""],[""," . "],["Identifier","$role"],["","->name . "],["String","\"'\""],["",");\n    }\n    "],["Repeat","foreach"],[""," "],["Statement","my"],[""," "],["Identifier","$excluded_role_name"],[""," ("],["Identifier","$role"],["","->get_excluded_roles_list) {\n        "],["Conditional","if"],[""," ("],["Identifier","$class"],["","->does_role("],["Identifier","$excluded_role_name"],["",")) {\n            "],["Identifier","$class"],["","->throw_error("],["String","\"The class \""],[""," . "],["Identifier","$class"],["","->name . "],["String","\" does the excluded role '"],["Identifier","$excluded_role_name"],["String","'\""],["",");\n        }\n    }\n}\n\n"],["Keyword","sub "],["Function","check_required_methods "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$role"],["",", "],["Identifier","$class"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","@missing"],["",";\n    "],["Statement","my"],[""," "],["Identifier","@is_attr"],["",";\n\n    "],["Comment","# "],["Todo","NOTE:"],["","\n    "],["Comment","# we might need to move this down below the"],["","\n    "],["Comment","# the attributes so that we can require any"],["","\n    "],["Comment","# attribute accessors. However I am thinking"],["","\n    "],["Comment","# that maybe those are somehow exempt from"],["","\n    "],["Comment","# the require methods stuff."],["","\n    "],["Repeat","foreach"],[""," "],["Statement","my"],[""," "],["Identifier","$required_method"],[""," ("],["Identifier","$role"],["","->get_required_method_list) {\n        "],["Statement","my"],[""," "],["Identifier","$required_method_name"],[""," = "],["Identifier","$required_method"],["","->name;\n\n        "],["Conditional","if"],[""," (!"],["Identifier","$class"],["","->find_method_by_name("],["Identifier","$required_method_name"],["",")) {\n\n            "],["Statement","next"],[""," "],["Conditional","if"],[""," "],["Identifier","$self"],["","->is_aliased_method("],["Identifier","$required_method_name"],["",");\n\n            "],["Statement","push"],[""," "],["Identifier","@missing"],["",", "],["Identifier","$required_method"],["",";\n        }\n    }\n\n    "],["Statement","return"],[""," "],["Conditional","unless"],[""," "],["Identifier","@missing"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$error"],[""," = "],["String","''"],["",";\n\n    "],["Identifier","@missing"],[""," = "],["Statement","sort"],[""," "],["Statement","{"],[""," "],["Identifier","$a"],["","->name "],["Operator","cmp"],[""," "],["Identifier","$b"],["","->name "],["Statement","}"],[""," "],["Identifier","@missing"],["",";\n    "],["Statement","my"],[""," "],["Identifier","@conflicts"],[""," = "],["Statement","grep"],[""," "],["Statement","{"],[""," "],["Identifier","$_"],["","->isa("],["String","'Moose::Meta::Role::Method::Conflicting'"],["",") "],["Statement","}"],[""," "],["Identifier","@missing"],["",";\n\n    "],["Conditional","if"],[""," ("],["Identifier","@conflicts"],["",") {\n        "],["Statement","my"],[""," "],["Identifier","$conflict"],[""," = "],["Identifier","$conflicts["],["Number","0"],["Identifier","]"],["",";\n        "],["Statement","my"],[""," "],["Identifier","$roles"],[""," = "],["Identifier","$conflict"],["","->roles_as_english_list;\n\n        "],["Statement","my"],[""," "],["Identifier","@same_role_conflicts"],[""," = "],["Statement","grep"],[""," "],["Statement","{"],[""," "],["Identifier","$_"],["","->roles_as_english_list "],["Operator","eq"],[""," "],["Identifier","$roles"],[""," "],["Statement","}"],[""," "],["Identifier","@conflicts"],["",";\n\n        "],["Conditional","if"],[""," ("],["Identifier","@same_role_conflicts"],[""," == "],["Number","1"],["",") {\n            "],["Identifier","$error"],["","\n                .= "],["String","\"Due to a method name conflict in roles \""],["","\n                .  "],["Identifier","$roles"],["","\n                . "],["String","\", the method '\""],["","\n                . "],["Identifier","$conflict"],["","->name\n                . "],["String","\"' must be implemented or excluded by '\""],["","\n                . "],["Identifier","$class"],["","->name\n                . "],["String","q{'}"],["",";\n        }\n        "],["Conditional","else"],[""," {\n            "],["Statement","my"],[""," "],["Identifier","$methods"],["","\n                = Moose::Util::english_list( "],["Statement","map"],[""," "],["Statement","{"],[""," "],["String","q{'}"],[""," . "],["Identifier","$_"],["","->name . "],["String","q{'}"],[""," "],["Statement","}"],[""," "],["Identifier","@same_role_conflicts"],[""," );\n\n            "],["Identifier","$error"],["","\n                .= "],["String","\"Due to method name conflicts in roles \""],["","\n                .  "],["Identifier","$roles"],["","\n                . "],["String","\", the methods \""],["","\n                . "],["Identifier","$methods"],["","\n                . "],["String","\" must be implemented or excluded by '\""],["","\n                . "],["Identifier","$class"],["","->name\n                . "],["String","q{'}"],["",";\n        }\n    }\n    "],["Conditional","elsif"],[""," ("],["Identifier","@missing"],["",") {\n        "],["Statement","my"],[""," "],["Identifier","$noun"],[""," = "],["Identifier","@missing"],[""," == "],["Number","1"],[""," ? "],["String","'method'"],[""," : "],["String","'methods'"],["",";\n\n        "],["Statement","my"],[""," "],["Identifier","$list"],["","\n            = Moose::Util::english_list( "],["Statement","map"],[""," "],["Statement","{"],[""," "],["String","q{'}"],[""," . "],["Identifier","$_"],[""," . "],["String","q{'}"],[""," "],["Statement","}"],[""," "],["Identifier","@missing"],[""," );\n\n        "],["Identifier","$error"],["","\n            .= "],["String","q{'}"],["","\n            . "],["Identifier","$role"],["","->name\n            . "],["String","\"' requires the "],["Identifier","$noun"],["String"," "],["Identifier","$list"],["String"," \""],["","\n            . "],["String","\"to be implemented by '\""],["","\n            . "],["Identifier","$class"],["","->name . "],["String","q{'}"],["",";\n\n        "],["Conditional","if"],[""," ("],["Statement","my"],[""," "],["Identifier","$meth"],[""," = firstval { "],["Identifier","$class"],["","->name->can("],["Identifier","$_"],["",") } "],["Identifier","@missing"],["",") {\n            "],["Identifier","$error"],[""," .= "],["String","\". If you imported functions intending to use them as \""],["","\n                    . "],["String","\"methods, you need to explicitly mark them as such, via \""],["","\n                    . "],["Identifier","$class"],["","->name . "],["String","\"->meta->add_method("],["Identifier","$meth"],["String"," => "],["Special","\\\\\\&"],["Identifier","$meth"],["String",")\""],["",";\n        }\n    }\n\n    "],["Identifier","$class"],["","->throw_error("],["Identifier","$error"],["",");\n}\n\n"],["Keyword","sub "],["Function","check_required_attributes "],["","{\n\n}\n\n"],["Keyword","sub "],["Function","apply_attributes "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$role"],["",", "],["Identifier","$class"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Repeat","foreach"],[""," "],["Statement","my"],[""," "],["Identifier","$attribute_name"],[""," ("],["Identifier","$role"],["","->get_attribute_list) {\n        "],["Comment","# it if it has one already"],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$class"],["","->has_attribute("],["Identifier","$attribute_name"],["",") &&\n            "],["Comment","# make sure we haven't seen this one already too"],["","\n            "],["Identifier","$class"],["","->get_attribute("],["Identifier","$attribute_name"],["",") != "],["Identifier","$role"],["","->get_attribute("],["Identifier","$attribute_name"],["",")) {\n            "],["Statement","next"],["",";\n        }\n        "],["Conditional","else"],[""," {\n            "],["Identifier","$class"],["","->add_attribute(\n                "],["Identifier","$role"],["","->get_attribute("],["Identifier","$attribute_name"],["",")->attribute_for_class\n            );\n        }\n    }\n}\n\n"],["Keyword","sub "],["Function","apply_methods "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$self"],["",", "],["Identifier","$role"],["",", "],["Identifier","$class"],[""," ) = "],["Identifier","@_"],["",";\n\n    "],["Repeat","foreach"],[""," "],["Statement","my"],[""," "],["Identifier","$method"],[""," ( "],["Identifier","$role"],["","->_get_local_methods ) {\n        "],["Statement","my"],[""," "],["Identifier","$method_name"],[""," = "],["Identifier","$method"],["","->name;\n\n        "],["Statement","next"],[""," "],["Conditional","if"],[""," "],["Identifier","$method"],["","->isa("],["String","'Class::MOP::Method::Meta'"],["",");\n\n        "],["Conditional","unless"],[""," ( "],["Identifier","$self"],["","->is_method_excluded("],["Identifier","$method_name"],["",") ) {\n\n            "],["Statement","my"],[""," "],["Identifier","$class_method"],[""," = "],["Identifier","$class"],["","->get_method("],["Identifier","$method_name"],["",");\n\n            "],["Statement","next"],[""," "],["Conditional","if"],[""," "],["Identifier","$class_method"],[""," && "],["Identifier","$class_method"],["","->body != "],["Identifier","$method"],["","->body;\n\n            "],["Identifier","$class"],["","->add_method(\n                "],["Identifier","$method_name"],["",",\n                "],["Identifier","$method"],["",",\n            );\n        }\n\n        "],["Statement","next"],[""," "],["Conditional","unless"],[""," "],["Identifier","$self"],["","->is_method_aliased("],["Identifier","$method_name"],["",");\n\n        "],["Statement","my"],[""," "],["Identifier","$aliased_method_name"],[""," = "],["Identifier","$self"],["","->get_method_aliases->{"],["Identifier","$method_name"],["","};\n\n        "],["Statement","my"],[""," "],["Identifier","$class_method"],[""," = "],["Identifier","$class"],["","->get_method("],["Identifier","$aliased_method_name"],["",");\n\n        "],["Conditional","if"],[""," ( "],["Identifier","$class_method"],[""," && "],["Identifier","$class_method"],["","->body != "],["Identifier","$method"],["","->body ) {\n            "],["Identifier","$class"],["","->throw_error(\n                "],["String","\"Cannot create a method alias if a local method of the same name exists\""],["","\n            );\n        }\n\n        "],["Identifier","$class"],["","->add_method(\n            "],["Identifier","$aliased_method_name"],["",",\n            "],["Identifier","$method"],["",",\n        );\n    }\n\n    "],["Comment","# we must reset the cache here since"],["","\n    "],["Comment","# we are just aliasing methods, otherwise"],["","\n    "],["Comment","# the modifiers go wonky."],["","\n    "],["Identifier","$class"],["","->reset_package_cache_flag;\n}\n\n"],["Keyword","sub "],["Function","apply_override_method_modifiers "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$role"],["",", "],["Identifier","$class"],["",") = "],["Identifier","@_"],["",";\n    "],["Repeat","foreach"],[""," "],["Statement","my"],[""," "],["Identifier","$method_name"],[""," ("],["Identifier","$role"],["","->get_method_modifier_list("],["String","'override'"],["",")) {\n        "],["Comment","# it if it has one already then ..."],["","\n        "],["Conditional","if"],[""," ("],["Identifier","$class"],["","->has_method("],["Identifier","$method_name"],["",")) {\n            "],["Statement","next"],["",";\n        }\n        "],["Conditional","else"],[""," {\n            "],["Comment","# if this is not a role, then we need to"],["","\n            "],["Comment","# find the original package of the method"],["","\n            "],["Comment","# so that we can tell the class were to"],["","\n            "],["Comment","# find the right super() method"],["","\n            "],["Statement","my"],[""," "],["Identifier","$method"],[""," = "],["Identifier","$role"],["","->get_override_method_modifier("],["Identifier","$method_name"],["",");\n            "],["Statement","my"],[""," ("],["Identifier","$package"],["",") = Class::MOP::get_code_info("],["Identifier","$method"],["",");\n            "],["Comment","# if it is a class, we just add it"],["","\n            "],["Identifier","$class"],["","->add_override_method_modifier("],["Identifier","$method_name"],["",", "],["Identifier","$method"],["",", "],["Identifier","$package"],["",");\n        }\n    }\n}\n\n"],["Keyword","sub "],["Function","apply_method_modifiers "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$modifier_type"],["",", "],["Identifier","$role"],["",", "],["Identifier","$class"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$add"],[""," = "],["String","\"add_"],["Identifier","${modifier_type}"],["String","_method_modifier\""],["",";\n    "],["Statement","my"],[""," "],["Identifier","$get"],[""," = "],["String","\"get_"],["Identifier","${modifier_type}"],["String","_method_modifiers\""],["",";\n    "],["Repeat","foreach"],[""," "],["Statement","my"],[""," "],["Identifier","$method_name"],[""," ("],["Identifier","$role"],["","->get_method_modifier_list("],["Identifier","$modifier_type"],["",")) {\n        "],["Identifier","$class"],["","->"],["Identifier","$add"],["","(\n            "],["Identifier","$method_name"],["",",\n            "],["Identifier","$_"],["","\n        ) "],["Repeat","foreach"],[""," "],["Identifier","$role"],["","->"],["Identifier","$get"],["","("],["Identifier","$method_name"],["",");\n    }\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","# ABSTRACT: Compose a role into a class"],["","\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=pod"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nMoose::Meta::Role::Application::ToClass - Compose a role into a class\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nversion 2.1005\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\n"],["Statement","=head2"],[""," "],["String","METHODS"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<new>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<meta>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<apply>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<check_role_exclusions>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<check_required_methods>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<check_required_attributes>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<apply_attributes>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<apply_methods>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<apply_method_modifiers>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<apply_override_method_modifiers>"],["","\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","BUGS"],["","\n\nSee "],["Identifier","L<Moose/BUGS>"],[""," for details on reporting bugs.\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nMoose is maintained by the Moose Cabal, along with the help of many contributors. See "],["Identifier","L<Moose/CABAL>"],[""," and "],["Identifier","L<Moose/CONTRIBUTORS>"],[""," for details.\n\n"],["Statement","=head1"],[""," "],["String","COPYRIGHT AND LICENSE"],["","\n\nThis software is copyright (c) 2013 by Infinity Interactive, Inc..\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n"],["Statement","=cut"],["","\n"]]