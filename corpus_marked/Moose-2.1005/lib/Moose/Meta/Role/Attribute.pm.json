[["Statement","package"],["Type"," Moose::Meta::Role::Attribute"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","Moose::Meta::Role::Attribute::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","Moose::Meta::Role::Attribute::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n\n"],["Statement","use "],["","Carp "],["String","'confess'"],["",";\n"],["Statement","use "],["","List::MoreUtils "],["String","'all'"],["",";\n"],["Statement","use "],["","Scalar::Util "],["String","'blessed'"],["",", "],["String","'weaken'"],["",";\n\n"],["Statement","use base"],[""," "],["String","'Moose::Meta::Mixin::AttributeCore'"],["",", "],["String","'Class::MOP::Object'"],["",";\n\n__PACKAGE__->meta->add_attribute(\n    "],["String","'metaclass'"],[""," => (\n        "],["String","reader"],[""," => "],["String","'metaclass'"],["",",\n        Class::MOP::_definition_context(),\n    )\n);\n\n__PACKAGE__->meta->add_attribute(\n    "],["String","'associated_role'"],[""," => (\n        "],["String","reader"],[""," => "],["String","'associated_role'"],["",",\n        Class::MOP::_definition_context(),\n    )\n);\n\n__PACKAGE__->meta->add_attribute(\n    "],["String","'_original_role'"],[""," => (\n        "],["String","reader"],[""," => "],["String","'_original_role'"],["",",\n        Class::MOP::_definition_context(),\n    )\n);\n\n__PACKAGE__->meta->add_attribute(\n    "],["String","'is'"],[""," => (\n        "],["String","reader"],[""," => "],["String","'is'"],["",",\n        Class::MOP::_definition_context(),\n    )\n);\n\n__PACKAGE__->meta->add_attribute(\n    "],["String","'original_options'"],[""," => (\n        "],["String","reader"],[""," => "],["String","'original_options'"],["",",\n        Class::MOP::_definition_context(),\n    )\n);\n\n"],["Keyword","sub "],["Function","new "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$class"],["",", "],["Identifier","$name"],["",", "],["Identifier","%options"],[""," ) = "],["Identifier","@_"],["",";\n\n    ("],["Operator","defined"],[""," "],["Identifier","$name"],["",")\n        || confess "],["String","\"You must provide a name for the attribute\""],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$role"],[""," = "],["Statement","delete"],[""," "],["Identifier","$options{"],["String","_original_role"],["Identifier","}"],["",";\n\n    "],["Statement","return"],[""," "],["Operator","bless"],[""," {\n        "],["String","name"],["","             => "],["Identifier","$name"],["",",\n        "],["String","original_options"],[""," => \\"],["Identifier","%options"],["",",\n        "],["String","_original_role"],["","   => "],["Identifier","$role"],["",",\n        "],["Identifier","%options"],["",",\n    }, "],["Identifier","$class"],["",";\n}\n\n"],["Keyword","sub "],["Function","attach_to_role "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$self"],["",", "],["Identifier","$role"],[""," ) = "],["Identifier","@_"],["",";\n\n    ( blessed("],["Identifier","$role"],["",") && "],["Identifier","$role"],["","->isa("],["String","'Moose::Meta::Role'"],["",") )\n        || confess\n        "],["String","\"You must pass a Moose::Meta::Role instance (or a subclass)\""],["",";\n\n    weaken( "],["Identifier","$self->{"],["String","'associated_role'"],["Identifier","}"],[""," = "],["Identifier","$role"],[""," );\n}\n\n"],["Keyword","sub "],["Function","original_role "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","return"],[""," "],["Identifier","$self"],["","->_original_role || "],["Identifier","$self"],["","->associated_role;\n}\n\n"],["Keyword","sub "],["Function","attribute_for_class "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$metaclass"],[""," = "],["Identifier","$self"],["","->original_role->applied_attribute_metaclass;\n\n    "],["Statement","return"],[""," "],["Identifier","$metaclass"],["","->interpolate_class_and_new(\n        "],["Identifier","$self"],["","->"],["String","name"],[""," => "],["Identifier","%{"],[""," "],["Identifier","$self"],["","->original_options "],["Identifier","}"],[""," );\n}\n\n"],["Keyword","sub "],["Function","clone "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$role"],[""," = "],["Identifier","$self"],["","->original_role;\n\n    "],["Statement","return"],[""," ( "],["Operator","ref"],[""," "],["Identifier","$self"],[""," )->new(\n        "],["Identifier","$self"],["","->name,\n        "],["Identifier","%{"],[""," "],["Identifier","$self"],["","->original_options "],["Identifier","}"],["",",\n        "],["String","_original_role"],[""," => "],["Identifier","$role"],["",",\n    );\n}\n\n"],["Keyword","sub "],["Function","is_same_as "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$self_options"],[""," = "],["Identifier","$self"],["","->original_options;\n    "],["Statement","my"],[""," "],["Identifier","$other_options"],[""," = "],["Identifier","$attr"],["","->original_options;\n\n    "],["Statement","return"],[""," "],["Number","0"],["","\n        "],["Conditional","unless"],[""," ( "],["Statement","join"],[""," "],["String","q{|}"],["",", "],["Statement","sort"],[""," "],["Statement","keys"],[""," "],["Identifier","%{$self_options}"],[""," ) "],["Operator","eq"],[""," ( "],["Statement","join"],[""," "],["String","q{|}"],["",", "],["Statement","sort"],[""," "],["Statement","keys"],[""," "],["Identifier","%{$other_options}"],[""," );\n\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$key"],[""," ( "],["Statement","keys"],[""," "],["Identifier","%{$self_options}"],[""," ) {\n        "],["Statement","return"],[""," "],["Number","0"],[""," "],["Conditional","if"],[""," "],["Operator","defined"],[""," "],["Identifier","$self_options->{$key}"],[""," && ! "],["Operator","defined"],[""," "],["Identifier","$other_options->{$key}"],["",";\n        "],["Statement","return"],[""," "],["Number","0"],[""," "],["Conditional","if"],[""," ! "],["Operator","defined"],[""," "],["Identifier","$self_options->{$key}"],[""," && "],["Operator","defined"],[""," "],["Identifier","$other_options->{$key}"],["",";\n\n        "],["Statement","next"],[""," "],["Conditional","if"],[""," all { ! "],["Operator","defined"],[""," } "],["Identifier","$self_options->{$key}"],["",", "],["Identifier","$other_options->{$key}"],["",";\n\n        "],["Statement","return"],[""," "],["Number","0"],[""," "],["Conditional","unless"],[""," "],["Identifier","$self_options->{$key}"],[""," "],["Operator","eq"],[""," "],["Identifier","$other_options->{$key}"],["",";\n    }\n\n    "],["Statement","return"],[""," "],["Number","1"],["",";\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","# ABSTRACT: The Moose attribute metaclass for Roles"],["","\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=pod"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nMoose::Meta::Role::Attribute - The Moose attribute metaclass for Roles\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nversion 2.1005\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nThis class implements the API for attributes in roles. Attributes in roles are\nmore like attribute prototypes than full blown attributes. While they are\nintrospectable, they have very little behavior.\n\n"],["Statement","=head1"],[""," "],["String","METHODS"],["","\n\nThis class provides the following methods:\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< Moose::Meta::Role::Attribute->new(...) >>"],["","\n\nThis method accepts all the options that would be passed to the constructor\nfor "],["Identifier","L<Moose::Meta::Attribute>"],["",".\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $attr->metaclass >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $attr->is >>"],["","\n\nReturns the option as passed to the constructor.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $attr->associated_role >>"],["","\n\nReturns the "],["Identifier","L<Moose::Meta::Role>"],[""," to which this attribute belongs, if any.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $attr->original_role >>"],["","\n\nReturns the "],["Identifier","L<Moose::Meta::Role>"],[""," in which this attribute was first\ndefined. This may not be the same as the value of "],["Identifier","C<associated_role()>"],[""," for\nattributes in a composite role, or when one role consumes other roles.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $attr->original_options >>"],["","\n\nReturns a hash reference of options passed to the constructor. This is used\nwhen creating a "],["Identifier","L<Moose::Meta::Attribute>"],[""," object from this object.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $attr->attach_to_role($role) >>"],["","\n\nAttaches the attribute to the given "],["Identifier","L<Moose::Meta::Role>"],["",".\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $attr->attribute_for_class($metaclass) >>"],["","\n\nGiven an attribute metaclass name, this method calls "],["Identifier","C<<"],["","\n"],["Identifier","$metaclass->interpolate_class_and_new >>"],[""," to construct an attribute object\nwhich can be added to a "],["Identifier","L<Moose::Meta::Class>"],["",".\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $attr->clone >>"],["","\n\nCreates a new object identical to the object on which the method is called.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $attr->is_same_as($other_attr) >>"],["","\n\nCompares two role attributes and returns true if they are identical.\n\n"],["Statement","=back"],["","\n\nIn addition, this class implements all informational predicates implements by\n"],["Identifier","L<Moose::Meta::Attribute>"],[""," (and "],["Identifier","L<Class::MOP::Attribute>"],["",").\n\n"],["Statement","=head1"],[""," "],["String","BUGS"],["","\n\nSee "],["Identifier","L<Moose/BUGS>"],[""," for details on reporting bugs.\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nMoose is maintained by the Moose Cabal, along with the help of many contributors. See "],["Identifier","L<Moose/CABAL>"],[""," and "],["Identifier","L<Moose/CONTRIBUTORS>"],[""," for details.\n\n"],["Statement","=head1"],[""," "],["String","COPYRIGHT AND LICENSE"],["","\n\nThis software is copyright (c) 2013 by Infinity Interactive, Inc..\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n"],["Statement","=cut"],["","\n"]]