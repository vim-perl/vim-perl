[["","\n"],["Statement","package"],["Type"," Moose::Meta::TypeCoercion::Union"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","Moose::Meta::TypeCoercion::Union::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","Moose::Meta::TypeCoercion::Union::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n"],["Statement","use "],["","metaclass;\n\n"],["Statement","use "],["","Scalar::Util "],["String","'blessed'"],["",";\n\n"],["Statement","use base"],[""," "],["String","'Moose::Meta::TypeCoercion'"],["",";\n\n"],["Keyword","sub "],["Function","compile_type_coercion "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],["","            = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$type_constraint"],[""," = "],["Identifier","$self"],["","->type_constraint;\n\n    (blessed "],["Identifier","$type_constraint"],[""," && "],["Identifier","$type_constraint"],["","->isa("],["String","'Moose::Meta::TypeConstraint::Union'"],["","))\n     || Moose->throw_error("],["String","\"You can only create a Moose::Meta::TypeCoercion::Union for a \""],[""," .\n                "],["String","\"Moose::Meta::TypeConstraint::Union, not a "],["Identifier","$type_constraint"],["String","\""],["",");\n\n    "],["Identifier","$self"],["","->_compiled_type_coercion(\n        "],["Keyword","sub "],["","{\n            "],["Statement","my"],[""," "],["Identifier","$value"],[""," = "],["Statement","shift"],["",";\n\n            "],["Repeat","foreach"],[""," "],["Statement","my"],[""," "],["Identifier","$type"],[""," ( "],["Statement","grep"],[""," "],["Statement","{"],[""," "],["Identifier","$_"],["","->has_coercion "],["Statement","}"],["","\n                "],["Identifier","@{"],[""," "],["Identifier","$type_constraint"],["","->type_constraints "],["Identifier","}"],[""," ) {\n                "],["Statement","my"],[""," "],["Identifier","$temp"],[""," = "],["Identifier","$type"],["","->coerce("],["Identifier","$value"],["",");\n                "],["Statement","return"],[""," "],["Identifier","$temp"],[""," "],["Conditional","if"],[""," "],["Identifier","$type_constraint"],["","->check("],["Identifier","$temp"],["",");\n            }\n\n            "],["Statement","return"],[""," "],["Identifier","$value"],["",";\n        }\n    );\n}\n\n"],["Keyword","sub "],["Function","has_coercion_for_type "],["","{ "],["Number","0"],[""," }\n\n"],["Keyword","sub "],["Function","add_type_coercions "],["","{\n    "],["Statement","require"],[""," Moose;\n    Moose->throw_error("],["String","\"Cannot add additional type coercions to Union types\""],["",");\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","# ABSTRACT: The Moose Type Coercion metaclass for Unions"],["","\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=pod"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nMoose::Meta::TypeCoercion::Union - The Moose Type Coercion metaclass for Unions\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nversion 2.1005\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nThis is a subclass of "],["Identifier","L<Moose::Meta::TypeCoercion>"],[""," that is used for\n"],["Identifier","L<Moose::Meta::TypeConstraint::Union>"],[""," objects.\n=head1 METHODS\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $coercion->has_coercion_for_type >>"],["","\n\nThis method always returns false.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $coercion->add_type_coercions >>"],["","\n\nThis method always throws an error. You cannot add coercions to a\nunion type coercion.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $coercion->coerce($value) >>"],["","\n\nThis method will coerce by trying the coercions for each type in the\nunion.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","BUGS"],["","\n\nSee "],["Identifier","L<Moose/BUGS>"],[""," for details on reporting bugs.\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nMoose is maintained by the Moose Cabal, along with the help of many contributors. See "],["Identifier","L<Moose/CABAL>"],[""," and "],["Identifier","L<Moose/CONTRIBUTORS>"],[""," for details.\n\n"],["Statement","=head1"],[""," "],["String","COPYRIGHT AND LICENSE"],["","\n\nThis software is copyright (c) 2013 by Infinity Interactive, Inc..\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n"],["Statement","=cut"],["","\n"]]