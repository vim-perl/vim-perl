[["","\n"],["Statement","package"],["Type"," metaclass"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","metaclass::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","metaclass::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n\n"],["Statement","use "],["","Carp         "],["String","'confess'"],["",";\n"],["Statement","use "],["","Class::Load  "],["String","'load_class'"],["",";\n"],["Statement","use "],["","Scalar::Util "],["String","'blessed'"],["",";\n"],["Statement","use "],["","Try::Tiny;\n\n"],["Statement","use "],["","Class::MOP;\n\n"],["Keyword","sub "],["Function","import "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$class"],["",", "],["Identifier","@args"],[""," ) = "],["Identifier","@_"],["",";\n\n    "],["Statement","unshift"],[""," "],["Identifier","@args"],["",", "],["String","\"metaclass\""],[""," "],["Conditional","if"],[""," "],["Identifier","@args"],[""," % "],["Number","2"],[""," == "],["Number","1"],["",";\n    "],["Statement","my"],[""," "],["Identifier","%options"],[""," = "],["Identifier","@args"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$meta_name"],[""," = "],["Statement","exists"],[""," "],["Identifier","$options{"],["String","meta_name"],["Identifier","}"],[""," ? "],["Identifier","$options{"],["String","meta_name"],["Identifier","}"],[""," : "],["String","'meta'"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$metaclass"],[""," = "],["Statement","delete"],[""," "],["Identifier","$options{"],["String","metaclass"],["Identifier","}"],["",";\n\n    "],["Conditional","unless"],[""," ( "],["Operator","defined"],[""," "],["Identifier","$metaclass"],[""," ) {\n        "],["Identifier","$metaclass"],[""," = "],["String","\"Class::MOP::Class\""],["",";\n    } "],["Conditional","else"],[""," {\n        load_class("],["Identifier","$metaclass"],["",");\n    }\n\n    ("],["Identifier","$metaclass"],["","->isa("],["String","'Class::MOP::Class'"],["","))\n        || confess "],["String","\"The metaclass ("],["Identifier","$metaclass"],["String",") must be derived from Class::MOP::Class\""],["",";\n\n    "],["Comment","# make sure the custom metaclasses get loaded"],["","\n    "],["Repeat","foreach"],[""," "],["Statement","my"],[""," "],["Identifier","$key"],[""," ("],["Statement","grep"],[""," "],["Statement","{"],[""," "],["Statement","/"],["String","_"],["Special","(?:"],["String","meta"],["Special",")?"],["String","class$"],["Statement","/"],[""," "],["Statement","}"],[""," "],["Statement","keys"],[""," "],["Identifier","%options"],["",") {\n        "],["Conditional","unless"],[""," ( "],["Operator","ref"],["","( "],["Statement","my"],[""," "],["Identifier","$class"],[""," = "],["Identifier","$options{$key}"],[""," ) ) {\n            load_class("],["Identifier","$class"],["",")\n        }\n    }\n\n    "],["Statement","my"],[""," "],["Identifier","$package"],[""," = "],["Statement","caller"],["","();\n\n    "],["Comment","# create a meta object so we can install &meta"],["","\n    "],["Statement","my"],[""," "],["Identifier","$meta"],[""," = "],["Identifier","$metaclass"],["","->initialize("],["Identifier","$package"],[""," => "],["Identifier","%options"],["",");\n    "],["Identifier","$meta"],["","->_add_meta_method("],["Identifier","$meta_name"],["",")\n        "],["Conditional","if"],[""," "],["Operator","defined"],[""," "],["Identifier","$meta_name"],["",";\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","# ABSTRACT: a pragma for installing and using Class::MOP metaclasses"],["","\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=pod"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nmetaclass - a pragma for installing and using Class::MOP metaclasses\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nversion 2.1005\n\n"],["Statement","=head1"],[""," "],["String","SYNOPSIS"],["","\n\n"],["PreProc","  package MyClass;"],["","\n\n"],["PreProc","  # use Class::MOP::Class"],["","\n"],["PreProc","  use metaclass;"],["","\n\n"],["PreProc","  # ... or use a custom metaclass"],["","\n"],["PreProc","  use metaclass 'MyMetaClass';"],["","\n\n"],["PreProc","  # ... or use a custom metaclass"],["","\n"],["PreProc","  # and custom attribute and method"],["","\n"],["PreProc","  # metaclasses"],["","\n"],["PreProc","  use metaclass 'MyMetaClass' => ("],["","\n"],["PreProc","      'attribute_metaclass' => 'MyAttributeMetaClass',"],["","\n"],["PreProc","      'method_metaclass'    => 'MyMethodMetaClass',"],["","\n"],["PreProc","  );"],["","\n\n"],["PreProc","  # ... or just specify custom attribute"],["","\n"],["PreProc","  # and method classes, and Class::MOP::Class"],["","\n"],["PreProc","  # is the assumed metaclass"],["","\n"],["PreProc","  use metaclass ("],["","\n"],["PreProc","      'attribute_metaclass' => 'MyAttributeMetaClass',"],["","\n"],["PreProc","      'method_metaclass'    => 'MyMethodMetaClass',"],["","\n"],["PreProc","  );"],["","\n\n"],["PreProc","  # if we'd rather not install a 'meta' method, we can do this"],["","\n"],["PreProc","  use metaclass meta_name => undef;"],["","\n"],["PreProc","  # or if we'd like it to have a different name,"],["","\n"],["PreProc","  use metaclass meta_name => 'my_meta';"],["","\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nThis is a pragma to make it easier to use a specific metaclass\nand a set of custom attribute and method metaclasses. It also\ninstalls a "],["Identifier","C<meta>"],[""," method to your class as well, unless "],["Identifier","C<undef>"],["","\nis passed to the "],["Identifier","C<meta_name>"],[""," option.\n\nNote that if you are using Moose, you most likely do "],["Identifier","B<not>"],[""," want\nto be using this - look into "],["Identifier","L<Moose::Util::MetaRole>"],[""," instead.\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nMoose is maintained by the Moose Cabal, along with the help of many contributors. See "],["Identifier","L<Moose/CABAL>"],[""," and "],["Identifier","L<Moose/CONTRIBUTORS>"],[""," for details.\n\n"],["Statement","=head1"],[""," "],["String","COPYRIGHT AND LICENSE"],["","\n\nThis software is copyright (c) 2013 by Infinity Interactive, Inc..\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n"],["Statement","=cut"],["","\n"]]