[["","\n"],["Statement","package"],["Type"," Class::MOP::Method::Overload"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","Class::MOP::Method::Overload::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","Class::MOP::Method::Overload::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n\n"],["Statement","use "],["","Carp "],["String","'confess'"],["",";\n\n"],["Statement","use base"],[""," "],["String","'Class::MOP::Method'"],["",";\n\n"],["Keyword","sub "],["Function","wrap "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$class"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," ("],["Identifier","@args"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","unshift"],[""," "],["Identifier","@args"],["",", "],["String","'body'"],[""," "],["Conditional","if"],[""," "],["Identifier","@args"],[""," % "],["Number","2"],[""," == "],["Number","1"],["",";\n    "],["Statement","my"],[""," "],["Identifier","%params"],[""," = "],["Identifier","@args"],["",";\n\n    confess "],["String","\"operator is required\""],["","\n        "],["Conditional","unless"],[""," "],["Statement","exists"],[""," "],["Identifier","$params{"],["String","operator"],["Identifier","}"],["",";\n\n    "],["Statement","return"],[""," "],["Identifier","$class"],["","->SUPER::wrap(\n        "],["String","name"],[""," => "],["String","\"("],["Identifier","$params{"],["String","operator"],["Identifier","}"],["String","\""],["",",\n        "],["Identifier","%params"],["",",\n    );\n}\n\n"],["Keyword","sub "],["Function","_new "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$class"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","return"],[""," Class::MOP::Class->initialize("],["Identifier","$class"],["",")->new_object("],["Identifier","@_"],["",")\n        "],["Conditional","if"],[""," "],["Identifier","$class"],[""," "],["Operator","ne"],[""," __PACKAGE__;\n\n    "],["Statement","my"],[""," "],["Identifier","$params"],[""," = "],["Identifier","@_"],[""," == "],["Number","1"],[""," ? "],["Identifier","$_["],["Number","0"],["Identifier","]"],[""," : {"],["Identifier","@_"],["","};\n\n    "],["Statement","return"],[""," "],["Operator","bless"],[""," {\n        "],["Comment","# inherited from Class::MOP::Method"],["","\n        "],["String","'body'"],["","                 => "],["Identifier","$params->{"],["String","body"],["Identifier","}"],["",",\n        "],["String","'associated_metaclass'"],[""," => "],["Identifier","$params->{"],["String","associated_metaclass"],["Identifier","}"],["",",\n        "],["String","'package_name'"],["","         => "],["Identifier","$params->{"],["String","package_name"],["Identifier","}"],["",",\n        "],["String","'name'"],["","                 => "],["Identifier","$params->{"],["String","name"],["Identifier","}"],["",",\n        "],["String","'original_method'"],["","      => "],["Identifier","$params->{"],["String","original_method"],["Identifier","}"],["",",\n\n        "],["Comment","# defined in this class"],["","\n        "],["String","'operator'"],["","             => "],["Identifier","$params->{"],["String","operator"],["Identifier","}"],["",",\n    } => "],["Identifier","$class"],["",";\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","# ABSTRACT: Method Meta Object for methods which implement overloading"],["","\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=pod"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nClass::MOP::Method::Overload - Method Meta Object for methods which implement overloading\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nversion 2.1005\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nThis is a "],["Identifier","L<Class::MOP::Method>"],[""," subclass which represents methods that\nimplement overloading.\n\n"],["Statement","=head1"],[""," "],["String","METHODS"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< Class::MOP::Method::Overload->wrap($metamethod, %options) >>"],["","\n\nThis is the constructor. The options accepted are identical to the ones\naccepted by "],["Identifier","L<Class::MOP::Method>"],["",", except that it also required an "],["Identifier","C<operator>"],["","\nparameter, which should be an operator as defined by the "],["Identifier","L<overload>"],[""," pragma.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metamethod->operator >>"],["","\n\nThis returns the operator that was passed to new.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nMoose is maintained by the Moose Cabal, along with the help of many contributors. See "],["Identifier","L<Moose/CABAL>"],[""," and "],["Identifier","L<Moose/CONTRIBUTORS>"],[""," for details.\n\n"],["Statement","=head1"],[""," "],["String","COPYRIGHT AND LICENSE"],["","\n\nThis software is copyright (c) 2013 by Infinity Interactive, Inc..\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n"],["Statement","=cut"],["","\n"]]