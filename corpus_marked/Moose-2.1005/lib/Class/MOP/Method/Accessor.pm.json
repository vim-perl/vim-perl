[["","\n"],["Statement","package"],["Type"," Class::MOP::Method::Accessor"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","Class::MOP::Method::Accessor::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","Class::MOP::Method::Accessor::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n\n"],["Statement","use "],["","Carp         "],["String","'confess'"],["",";\n"],["Statement","use "],["","Scalar::Util "],["String","'blessed'"],["",", "],["String","'weaken'"],["",";\n"],["Statement","use "],["","Try::Tiny;\n\n"],["Statement","use base"],[""," "],["String","'Class::MOP::Method::Generated'"],["",";\n\n"],["Keyword","sub "],["Function","new "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$class"],["","   = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","%options"],[""," = "],["Identifier","@_"],["",";\n\n    ("],["Statement","exists"],[""," "],["Identifier","$options{"],["String","attribute"],["Identifier","}"],["",")\n        || confess "],["String","\"You must supply an attribute to construct with\""],["",";\n\n    ("],["Statement","exists"],[""," "],["Identifier","$options{"],["String","accessor_type"],["Identifier","}"],["",")\n        || confess "],["String","\"You must supply an accessor_type to construct with\""],["",";\n\n    (blessed("],["Identifier","$options{"],["String","attribute"],["Identifier","}"],["",") && "],["Identifier","$options{"],["String","attribute"],["Identifier","}"],["","->isa("],["String","'Class::MOP::Attribute'"],["","))\n        || confess "],["String","\"You must supply an attribute which is a 'Class::MOP::Attribute' instance\""],["",";\n\n    ("],["Identifier","$options{"],["String","package_name"],["Identifier","}"],[""," && "],["Identifier","$options{"],["String","name"],["Identifier","}"],["",")\n        || confess "],["String","\"You must supply the package_name and name parameters "],["Identifier","$"],["Type","Class::MOP::Method::"],["Identifier","UPGRADE_ERROR_TEXT"],["String","\""],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Identifier","$class"],["","->_new(\\"],["Identifier","%options"],["",");\n\n    "],["Comment","# we don't want this creating"],["","\n    "],["Comment","# a cycle in the code, if not"],["","\n    "],["Comment","# needed"],["","\n    weaken("],["Identifier","$self->{"],["String","'attribute'"],["Identifier","}"],["",");\n\n    "],["Identifier","$self"],["","->_initialize_body;\n\n    "],["Statement","return"],[""," "],["Identifier","$self"],["",";\n}\n\n"],["Keyword","sub "],["Function","_new "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$class"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","return"],[""," Class::MOP::Class->initialize("],["Identifier","$class"],["",")->new_object("],["Identifier","@_"],["",")\n        "],["Conditional","if"],[""," "],["Identifier","$class"],[""," "],["Operator","ne"],[""," __PACKAGE__;\n\n    "],["Statement","my"],[""," "],["Identifier","$params"],[""," = "],["Identifier","@_"],[""," == "],["Number","1"],[""," ? "],["Identifier","$_["],["Number","0"],["Identifier","]"],[""," : {"],["Identifier","@_"],["","};\n\n    "],["Statement","return"],[""," "],["Operator","bless"],[""," {\n        "],["Comment","# inherited from Class::MOP::Method"],["","\n        "],["String","body"],["","                 => "],["Identifier","$params->{"],["String","body"],["Identifier","}"],["",",\n        "],["String","associated_metaclass"],[""," => "],["Identifier","$params->{"],["String","associated_metaclass"],["Identifier","}"],["",",\n        "],["String","package_name"],["","         => "],["Identifier","$params->{"],["String","package_name"],["Identifier","}"],["",",\n        "],["String","name"],["","                 => "],["Identifier","$params->{"],["String","name"],["Identifier","}"],["",",\n        "],["String","original_method"],["","      => "],["Identifier","$params->{"],["String","original_method"],["Identifier","}"],["",",\n\n        "],["Comment","# inherit from Class::MOP::Generated"],["","\n        "],["String","is_inline"],["","            => "],["Identifier","$params->{"],["String","is_inline"],["Identifier","}"],[""," || "],["Number","0"],["",",\n        "],["String","definition_context"],["","   => "],["Identifier","$params->{"],["String","definition_context"],["Identifier","}"],["",",\n\n        "],["Comment","# defined in this class"],["","\n        "],["String","attribute"],["","            => "],["Identifier","$params->{"],["String","attribute"],["Identifier","}"],["",",\n        "],["String","accessor_type"],["","        => "],["Identifier","$params->{"],["String","accessor_type"],["Identifier","}"],["",",\n    } => "],["Identifier","$class"],["",";\n}\n\n"],["Comment","## accessors"],["","\n\n"],["Keyword","sub "],["Function","associated_attribute "],["","{ ("],["Statement","shift"],["",")->{"],["String","'attribute'"],["","}     }\n"],["Keyword","sub "],["Function","accessor_type        "],["","{ ("],["Statement","shift"],["",")->{"],["String","'accessor_type'"],["","} }\n\n"],["Comment","## factory"],["","\n\n"],["Keyword","sub "],["Function","_initialize_body "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$method_name"],[""," = "],["Statement","join"],[""," "],["String","\"_\""],[""," => (\n        "],["String","'_generate'"],["",",\n        "],["Identifier","$self"],["","->accessor_type,\n        "],["String","'method'"],["",",\n        ("],["Identifier","$self"],["","->is_inline ? "],["String","'inline'"],[""," : ())\n    );\n\n    "],["Identifier","$self->{"],["String","'body'"],["Identifier","}"],[""," = "],["Identifier","$self"],["","->"],["Identifier","$method_name"],["","();\n}\n\n"],["Comment","## generators"],["","\n\n"],["Keyword","sub "],["Function","_generate_accessor_method "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Identifier","$self"],["","->associated_attribute;\n\n    "],["Statement","return"],[""," "],["Keyword","sub "],["","{\n        "],["Conditional","if"],[""," ("],["Identifier","@_"],[""," >= "],["Number","2"],["",") {\n            "],["Identifier","$attr"],["","->set_value("],["Identifier","$_["],["Number","0"],["Identifier","]"],["",", "],["Identifier","$_["],["Number","1"],["Identifier","]"],["",");\n        }\n        "],["Identifier","$attr"],["","->get_value("],["Identifier","$_["],["Number","0"],["Identifier","]"],["",");\n    };\n}\n\n"],["Keyword","sub "],["Function","_generate_accessor_method_inline "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Identifier","$self"],["","->associated_attribute;\n\n    "],["Statement","return"],[""," try {\n        "],["Identifier","$self"],["","->_compile_code([\n            "],["String","'sub {'"],["",",\n                "],["String","'if (@_ > 1) {'"],["",",\n                    "],["Identifier","$attr"],["","->_inline_set_value("],["String","'$_[0]'"],["",", "],["String","'$_[1]'"],["","),\n                "],["String","'}'"],["",",\n                "],["Identifier","$attr"],["","->_inline_get_value("],["String","'$_[0]'"],["","),\n            "],["String","'}'"],["",",\n        ]);\n    }\n    catch {\n        confess "],["String","\"Could not generate inline accessor because : "],["Identifier","$_"],["String","\""],["",";\n    };\n}\n\n"],["Keyword","sub "],["Function","_generate_reader_method "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Identifier","$self"],["","->associated_attribute;\n\n    "],["Statement","return"],[""," "],["Keyword","sub "],["","{\n        confess "],["String","\"Cannot assign a value to a read-only accessor\""],["","\n            "],["Conditional","if"],[""," "],["Identifier","@_"],[""," > "],["Number","1"],["",";\n        "],["Identifier","$attr"],["","->get_value("],["Identifier","$_["],["Number","0"],["Identifier","]"],["",");\n    };\n}\n\n"],["Keyword","sub "],["Function","_generate_reader_method_inline "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Identifier","$self"],["","->associated_attribute;\n\n    "],["Statement","return"],[""," try {\n        "],["Identifier","$self"],["","->_compile_code([\n            "],["String","'sub {'"],["",",\n                "],["String","'if (@_ > 1) {'"],["",",\n                    "],["Comment","# "],["Todo","XXX:"],["Comment"," this is a hack, but our error stuff is terrible"],["","\n                    "],["Identifier","$self"],["","->_inline_throw_error(\n                        "],["String","'\"Cannot assign a value to a read-only accessor\"'"],["",",\n                        "],["String","'data => \\@_'"],["","\n                    ) . "],["String","';'"],["",",\n                "],["String","'}'"],["",",\n                "],["Identifier","$attr"],["","->_inline_get_value("],["String","'$_[0]'"],["","),\n            "],["String","'}'"],["",",\n        ]);\n    }\n    catch {\n        confess "],["String","\"Could not generate inline reader because : "],["Identifier","$_"],["String","\""],["",";\n    };\n}\n\n"],["Keyword","sub "],["Function","_inline_throw_error "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","return"],[""," "],["String","'Carp::confess '"],[""," . "],["Identifier","$_["],["Number","0"],["Identifier","]"],["",";\n}\n\n"],["Keyword","sub "],["Function","_generate_writer_method "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Identifier","$self"],["","->associated_attribute;\n\n    "],["Statement","return"],[""," "],["Keyword","sub "],["","{\n        "],["Identifier","$attr"],["","->set_value("],["Identifier","$_["],["Number","0"],["Identifier","]"],["",", "],["Identifier","$_["],["Number","1"],["Identifier","]"],["",");\n    };\n}\n\n"],["Keyword","sub "],["Function","_generate_writer_method_inline "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Identifier","$self"],["","->associated_attribute;\n\n    "],["Statement","return"],[""," try {\n        "],["Identifier","$self"],["","->_compile_code([\n            "],["String","'sub {'"],["",",\n                "],["Identifier","$attr"],["","->_inline_set_value("],["String","'$_[0]'"],["",", "],["String","'$_[1]'"],["","),\n            "],["String","'}'"],["",",\n        ]);\n    }\n    catch {\n        confess "],["String","\"Could not generate inline writer because : "],["Identifier","$_"],["String","\""],["",";\n    };\n}\n\n"],["Keyword","sub "],["Function","_generate_predicate_method "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Identifier","$self"],["","->associated_attribute;\n\n    "],["Statement","return"],[""," "],["Keyword","sub "],["","{\n        "],["Identifier","$attr"],["","->has_value("],["Identifier","$_["],["Number","0"],["Identifier","]"],["",")\n    };\n}\n\n"],["Keyword","sub "],["Function","_generate_predicate_method_inline "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Identifier","$self"],["","->associated_attribute;\n\n    "],["Statement","return"],[""," try {\n        "],["Identifier","$self"],["","->_compile_code([\n            "],["String","'sub {'"],["",",\n                "],["Identifier","$attr"],["","->_inline_has_value("],["String","'$_[0]'"],["","),\n            "],["String","'}'"],["",",\n        ]);\n    }\n    catch {\n        confess "],["String","\"Could not generate inline predicate because : "],["Identifier","$_"],["String","\""],["",";\n    };\n}\n\n"],["Keyword","sub "],["Function","_generate_clearer_method "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Identifier","$self"],["","->associated_attribute;\n\n    "],["Statement","return"],[""," "],["Keyword","sub "],["","{\n        "],["Identifier","$attr"],["","->clear_value("],["Identifier","$_["],["Number","0"],["Identifier","]"],["",")\n    };\n}\n\n"],["Keyword","sub "],["Function","_generate_clearer_method_inline "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$attr"],[""," = "],["Identifier","$self"],["","->associated_attribute;\n\n    "],["Statement","return"],[""," try {\n        "],["Identifier","$self"],["","->_compile_code([\n            "],["String","'sub {'"],["",",\n                "],["Identifier","$attr"],["","->_inline_clear_value("],["String","'$_[0]'"],["","),\n            "],["String","'}'"],["",",\n        ]);\n    }\n    catch {\n        confess "],["String","\"Could not generate inline clearer because : "],["Identifier","$_"],["String","\""],["",";\n    };\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","# ABSTRACT: Method Meta Object for accessors"],["","\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=pod"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nClass::MOP::Method::Accessor - Method Meta Object for accessors\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nversion 2.1005\n\n"],["Statement","=head1"],[""," "],["String","SYNOPSIS"],["","\n\n"],["PreProc","    use Class::MOP::Method::Accessor;"],["","\n\n"],["PreProc","    my $reader = Class::MOP::Method::Accessor->new("],["","\n"],["PreProc","        attribute     => $attribute,"],["","\n"],["PreProc","        is_inline     => 1,"],["","\n"],["PreProc","        accessor_type => 'reader',"],["","\n"],["PreProc","    );"],["","\n\n"],["PreProc","    $reader->body->execute($instance); # call the reader method"],["","\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nThis is a subclass of "],["Identifier","C<Class::MOP::Method>"],[""," which is used by\n"],["Identifier","C<Class::MOP::Attribute>"],[""," to generate accessor code. It handles\ngeneration of readers, writers, predicates and clearers. For each type\nof method, it can either create a subroutine reference, or actually\ninline code by generating a string and "],["Identifier","C<eval>"],["","'ing it.\n\n"],["Statement","=head1"],[""," "],["String","METHODS"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< Class::MOP::Method::Accessor->new(%options) >>"],["","\n\nThis returns a new "],["Identifier","C<Class::MOP::Method::Accessor>"],[""," based on the\n"],["Identifier","C<%options>"],[""," provided.\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["String","* attribute"],["","\n\nThis is the "],["Identifier","C<Class::MOP::Attribute>"],[""," for which accessors are being\ngenerated. This option is required.\n\n"],["Statement","=item"],[""," "],["String","* accessor_type"],["","\n\nThis is a string which should be one of \"reader\", \"writer\",\n\"accessor\", \"predicate\", or \"clearer\". This is the type of method\nbeing generated. This option is required.\n\n"],["Statement","=item"],[""," "],["String","* is_inline"],["","\n\nThis indicates whether or not the accessor should be inlined. This\ndefaults to false.\n\n"],["Statement","=item"],[""," "],["String","* name"],["","\n\nThe method name (without a package name). This is required.\n\n"],["Statement","=item"],[""," "],["String","* package_name"],["","\n\nThe package name for the method. This is required.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metamethod->accessor_type >>"],["","\n\nReturns the accessor type which was passed to "],["Identifier","C<new>"],["",".\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metamethod->is_inline >>"],["","\n\nReturns a boolean indicating whether or not the accessor is inlined.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metamethod->associated_attribute >>"],["","\n\nThis returns the "],["Identifier","L<Class::MOP::Attribute>"],[""," object which was passed to\n"],["Identifier","C<new>"],["",".\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metamethod->body >>"],["","\n\nThe method itself is "],["Identifier","I<generated>"],[""," when the accessor object is\nconstructed.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nMoose is maintained by the Moose Cabal, along with the help of many contributors. See "],["Identifier","L<Moose/CABAL>"],[""," and "],["Identifier","L<Moose/CONTRIBUTORS>"],[""," for details.\n\n"],["Statement","=head1"],[""," "],["String","COPYRIGHT AND LICENSE"],["","\n\nThis software is copyright (c) 2013 by Infinity Interactive, Inc..\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n"],["Statement","=cut"],["","\n"]]