[["","\n"],["Statement","package"],["Type"," Class::MOP::Instance"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","Class::MOP::Instance::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","Class::MOP::Instance::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n\n"],["Statement","use "],["","Scalar::Util "],["String","'isweak'"],["",", "],["String","'weaken'"],["",", "],["String","'blessed'"],["",";\n\n"],["Statement","use base"],[""," "],["String","'Class::MOP::Object'"],["",";\n\n"],["Comment","# make this not a valid method name, to avoid (most) attribute conflicts"],["","\n"],["Statement","my"],[""," "],["Identifier","$RESERVED_MOP_SLOT"],[""," = "],["String","'<<MOP>>'"],["",";\n\n"],["Keyword","sub "],["Function","BUILDARGS "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$class"],["",", "],["Identifier","@args"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Conditional","if"],[""," ( "],["Identifier","@args"],[""," == "],["Number","1"],[""," ) {\n        "],["Statement","unshift"],[""," "],["Identifier","@args"],["",", "],["String","\"associated_metaclass\""],["",";\n    } "],["Conditional","elsif"],[""," ( "],["Identifier","@args"],[""," >= "],["Number","2"],[""," && blessed("],["Identifier","$args["],["Number","0"],["Identifier","]"],["",") && "],["Identifier","$args["],["Number","0"],["Identifier","]"],["","->isa("],["String","\"Class::MOP::Class\""],["",") ) {\n        "],["Comment","# compat mode"],["","\n        "],["Statement","my"],[""," ( "],["Identifier","$meta"],["",", "],["Identifier","@attrs"],[""," ) = "],["Identifier","@args"],["",";\n        "],["Identifier","@args"],[""," = ( "],["String","associated_metaclass"],[""," => "],["Identifier","$meta"],["",", "],["String","attributes"],[""," => \\"],["Identifier","@attrs"],[""," );\n    }\n\n    "],["Statement","my"],[""," "],["Identifier","%options"],[""," = "],["Identifier","@args"],["",";\n    "],["Comment","# "],["Todo","FIXME"],["Comment"," lazy_build"],["","\n    "],["Identifier","$options{"],["String","slots"],["Identifier","}"],[""," ||= [ "],["Statement","map"],[""," "],["Statement","{"],[""," "],["Identifier","$_"],["","->slots "],["Statement","}"],[""," "],["Identifier","@{"],[""," "],["Identifier","$options{"],["String","attributes"],["Identifier","}"],[""," || [] "],["Identifier","}"],[""," ];\n    "],["Identifier","$options{"],["String","slot_hash"],["Identifier","}"],[""," = { "],["Statement","map"],[""," "],["Statement","{"],[""," "],["Identifier","$_"],[""," => "],["Operator","undef"],[""," "],["Statement","}"],[""," "],["Identifier","@{"],[""," "],["Identifier","$options{"],["String","slots"],["Identifier","}"],[""," "],["Identifier","}"],[""," }; "],["Comment","# "],["Todo","FIXME"],["Comment"," lazy_build"],["","\n\n    "],["Statement","return"],[""," \\"],["Identifier","%options"],["",";\n}\n\n"],["Keyword","sub "],["Function","new "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$class"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$options"],[""," = "],["Identifier","$class"],["","->BUILDARGS("],["Identifier","@_"],["",");\n\n    "],["Comment","# "],["Todo","FIXME"],["Comment"," replace with a proper constructor"],["","\n    "],["Statement","my"],[""," "],["Identifier","$instance"],[""," = "],["Identifier","$class"],["","->_new("],["Identifier","%$options"],["",");\n\n    "],["Comment","# "],["Todo","FIXME"],["Comment"," weak_ref => 1,"],["","\n    weaken("],["Identifier","$instance->{"],["String","'associated_metaclass'"],["Identifier","}"],["",");\n\n    "],["Statement","return"],[""," "],["Identifier","$instance"],["",";\n}\n\n"],["Keyword","sub "],["Function","_new "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$class"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","return"],[""," Class::MOP::Class->initialize("],["Identifier","$class"],["",")->new_object("],["Identifier","@_"],["",")\n      "],["Conditional","if"],[""," "],["Identifier","$class"],[""," "],["Operator","ne"],[""," __PACKAGE__;\n\n    "],["Statement","my"],[""," "],["Identifier","$params"],[""," = "],["Identifier","@_"],[""," == "],["Number","1"],[""," ? "],["Identifier","$_["],["Number","0"],["Identifier","]"],[""," : {"],["Identifier","@_"],["","};\n    "],["Statement","return"],[""," "],["Operator","bless"],[""," {\n        "],["Comment","# "],["Todo","NOTE:"],["","\n        "],["Comment","# I am not sure that it makes"],["","\n        "],["Comment","# sense to pass in the meta"],["","\n        "],["Comment","# The ideal would be to just"],["","\n        "],["Comment","# pass in the class name, but"],["","\n        "],["Comment","# that is placing too much of"],["","\n        "],["Comment","# an assumption on bless(),"],["","\n        "],["Comment","# which is *probably* a safe"],["","\n        "],["Comment","# assumption,.. but you can"],["","\n        "],["Comment","# never tell <:)"],["","\n        "],["String","'associated_metaclass'"],[""," => "],["Identifier","$params->{"],["String","associated_metaclass"],["Identifier","}"],["",",\n        "],["String","'attributes'"],["","           => "],["Identifier","$params->{"],["String","attributes"],["Identifier","}"],["",",\n        "],["String","'slots'"],["","                => "],["Identifier","$params->{"],["String","slots"],["Identifier","}"],["",",\n        "],["String","'slot_hash'"],["","            => "],["Identifier","$params->{"],["String","slot_hash"],["Identifier","}"],["",",\n    } => "],["Identifier","$class"],["",";\n}\n\n"],["Keyword","sub "],["Function","_class_name "],["","{ "],["Identifier","$_["],["Number","0"],["Identifier","]->{"],["String","_class_name"],["Identifier","}"],[""," ||= "],["Identifier","$_["],["Number","0"],["Identifier","]"],["","->associated_metaclass->name }\n\n"],["Keyword","sub "],["Function","create_instance "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Operator","bless"],[""," {}, "],["Identifier","$self"],["","->_class_name;\n}\n\n"],["Keyword","sub "],["Function","clone_instance "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$clone"],[""," = "],["Identifier","$self"],["","->create_instance;\n    "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$attr"],[""," ("],["Identifier","$self"],["","->get_all_attributes) {\n        "],["Statement","next"],[""," "],["Conditional","unless"],[""," "],["Identifier","$attr"],["","->has_value("],["Identifier","$instance"],["",");\n        "],["Repeat","for"],[""," "],["Statement","my"],[""," "],["Identifier","$slot"],[""," ("],["Identifier","$attr"],["","->slots) {\n            "],["Statement","my"],[""," "],["Identifier","$val"],[""," = "],["Identifier","$self"],["","->get_slot_value("],["Identifier","$instance"],["",", "],["Identifier","$slot"],["",");\n            "],["Identifier","$self"],["","->set_slot_value("],["Identifier","$clone"],["",", "],["Identifier","$slot"],["",", "],["Identifier","$val"],["",");\n            "],["Identifier","$self"],["","->weaken_slot_value("],["Identifier","$clone"],["",", "],["Identifier","$slot"],["",")\n                "],["Conditional","if"],[""," "],["Identifier","$self"],["","->slot_value_is_weak("],["Identifier","$instance"],["",", "],["Identifier","$slot"],["",");\n        }\n    }\n\n    "],["Identifier","$self"],["","->_set_mop_slot("],["Identifier","$clone"],["",", "],["Identifier","$self"],["","->_get_mop_slot("],["Identifier","$instance"],["","))\n        "],["Conditional","if"],[""," "],["Identifier","$self"],["","->_has_mop_slot("],["Identifier","$instance"],["",");\n\n    "],["Statement","return"],[""," "],["Identifier","$clone"],["",";\n}\n\n"],["Comment","# operations on meta instance"],["","\n\n"],["Keyword","sub "],["Function","get_all_slots "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","return"],[""," "],["Identifier","@{$self->{"],["String","'slots'"],["Identifier","}}"],["",";\n}\n\n"],["Keyword","sub "],["Function","get_all_attributes "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","return"],[""," "],["Identifier","@{$self->{"],["String","attributes"],["Identifier","}}"],["",";\n}\n\n"],["Keyword","sub "],["Function","is_valid_slot "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$slot_name"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","exists"],[""," "],["Identifier","$self->{"],["String","'slot_hash'"],["Identifier","}->{$slot_name}"],["",";\n}\n\n"],["Comment","# operations on created instances"],["","\n\n"],["Keyword","sub "],["Function","get_slot_value "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$instance->{$slot_name}"],["",";\n}\n\n"],["Keyword","sub "],["Function","set_slot_value "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",", "],["Identifier","$value"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$instance->{$slot_name}"],[""," = "],["Identifier","$value"],["",";\n}\n\n"],["Keyword","sub "],["Function","initialize_slot "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","return"],["",";\n}\n\n"],["Keyword","sub "],["Function","deinitialize_slot "],["","{\n    "],["Statement","my"],[""," ( "],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],[""," ) = "],["Identifier","@_"],["",";\n    "],["Statement","delete"],[""," "],["Identifier","$instance->{$slot_name}"],["",";\n}\n\n"],["Keyword","sub "],["Function","initialize_all_slots "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",") = "],["Identifier","@_"],["",";\n    "],["Repeat","foreach"],[""," "],["Statement","my"],[""," "],["Identifier","$slot_name"],[""," ("],["Identifier","$self"],["","->get_all_slots) {\n        "],["Identifier","$self"],["","->initialize_slot("],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",");\n    }\n}\n\n"],["Keyword","sub "],["Function","deinitialize_all_slots "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",") = "],["Identifier","@_"],["",";\n    "],["Repeat","foreach"],[""," "],["Statement","my"],[""," "],["Identifier","$slot_name"],[""," ("],["Identifier","$self"],["","->get_all_slots) {\n        "],["Identifier","$self"],["","->deinitialize_slot("],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",");\n    }\n}\n\n"],["Keyword","sub "],["Function","is_slot_initialized "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",", "],["Identifier","$value"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","exists"],[""," "],["Identifier","$instance->{$slot_name}"],["",";\n}\n\n"],["Keyword","sub "],["Function","weaken_slot_value "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",") = "],["Identifier","@_"],["",";\n    weaken "],["Identifier","$instance->{$slot_name}"],["",";\n}\n\n"],["Keyword","sub "],["Function","slot_value_is_weak "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",") = "],["Identifier","@_"],["",";\n    isweak "],["Identifier","$instance->{$slot_name}"],["",";\n}\n\n"],["Keyword","sub "],["Function","strengthen_slot_value "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$self"],["","->set_slot_value("],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",", "],["Identifier","$self"],["","->get_slot_value("],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["","));\n}\n\n"],["Keyword","sub "],["Function","rebless_instance_structure "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$metaclass"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Comment","# we use $_[1] here because of t/cmop/rebless_overload.t regressions"],["","\n    "],["Comment","# on 5.8.8"],["","\n    "],["Operator","bless"],[""," "],["Identifier","$_["],["Number","1"],["Identifier","]"],["",", "],["Identifier","$metaclass"],["","->name;\n}\n\n"],["Keyword","sub "],["Function","is_dependent_on_superclasses "],["","{\n    "],["Statement","return"],["","; "],["Comment","# for meta instances that require updates on inherited slot changes"],["","\n}\n\n"],["Keyword","sub "],["Function","_get_mop_slot "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$self"],["","->get_slot_value("],["Identifier","$instance"],["",", "],["Identifier","$RESERVED_MOP_SLOT"],["",");\n}\n\n"],["Keyword","sub "],["Function","_has_mop_slot "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$self"],["","->is_slot_initialized("],["Identifier","$instance"],["",", "],["Identifier","$RESERVED_MOP_SLOT"],["",");\n}\n\n"],["Keyword","sub "],["Function","_set_mop_slot "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$value"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$self"],["","->set_slot_value("],["Identifier","$instance"],["",", "],["Identifier","$RESERVED_MOP_SLOT"],["",", "],["Identifier","$value"],["",");\n}\n\n"],["Keyword","sub "],["Function","_clear_mop_slot "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$self"],["","->deinitialize_slot("],["Identifier","$instance"],["",", "],["Identifier","$RESERVED_MOP_SLOT"],["",");\n}\n\n"],["Comment","# inlinable operation snippets"],["","\n\n"],["Keyword","sub "],["Function","is_inlinable "],["","{ "],["Number","1"],[""," }\n\n"],["Keyword","sub "],["Function","inline_create_instance "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$class_variable"],["",") = "],["Identifier","@_"],["",";\n    "],["String","'bless {} => '"],[""," . "],["Identifier","$class_variable"],["",";\n}\n\n"],["Keyword","sub "],["Function","inline_slot_access "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","sprintf"],[""," "],["String","q[%s->{\"%s\"}]"],["",", "],["Identifier","$instance"],["",", "],["Statement","quotemeta"],["","("],["Identifier","$slot_name"],["",");\n}\n\n"],["Keyword","sub "],["Function","inline_get_is_lvalue "],["","{ "],["Number","1"],[""," }\n\n"],["Keyword","sub "],["Function","inline_get_slot_value "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$self"],["","->inline_slot_access("],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",");\n}\n\n"],["Keyword","sub "],["Function","inline_set_slot_value "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",", "],["Identifier","$value"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$self"],["","->inline_slot_access("],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",") . "],["String","\" = "],["Identifier","$value"],["String","\""],["",",\n}\n\n"],["Keyword","sub "],["Function","inline_initialize_slot "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","return"],[""," "],["String","''"],["",";\n}\n\n"],["Keyword","sub "],["Function","inline_deinitialize_slot "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",") = "],["Identifier","@_"],["",";\n    "],["String","\"delete \""],[""," . "],["Identifier","$self"],["","->inline_slot_access("],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",");\n}\n"],["Keyword","sub "],["Function","inline_is_slot_initialized "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",") = "],["Identifier","@_"],["",";\n    "],["String","\"exists \""],[""," . "],["Identifier","$self"],["","->inline_slot_access("],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",");\n}\n\n"],["Keyword","sub "],["Function","inline_weaken_slot_value "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","sprintf"],[""," "],["String","\"Scalar::Util::weaken( %s )\""],["",", "],["Identifier","$self"],["","->inline_slot_access("],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",");\n}\n\n"],["Keyword","sub "],["Function","inline_strengthen_slot_value "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$self"],["","->inline_set_slot_value("],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["",", "],["Identifier","$self"],["","->inline_slot_access("],["Identifier","$instance"],["",", "],["Identifier","$slot_name"],["","));\n}\n\n"],["Keyword","sub "],["Function","inline_rebless_instance_structure "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$class_variable"],["",") = "],["Identifier","@_"],["",";\n    "],["String","\"bless "],["Identifier","$instance"],["String"," => "],["Identifier","$class_variable"],["String","\""],["",";\n}\n\n"],["Keyword","sub "],["Function","_inline_get_mop_slot "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$self"],["","->inline_get_slot_value("],["Identifier","$instance"],["",", "],["Identifier","$RESERVED_MOP_SLOT"],["",");\n}\n\n"],["Keyword","sub "],["Function","_inline_set_mop_slot "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",", "],["Identifier","$value"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$self"],["","->inline_set_slot_value("],["Identifier","$instance"],["",", "],["Identifier","$RESERVED_MOP_SLOT"],["",", "],["Identifier","$value"],["",");\n}\n\n"],["Keyword","sub "],["Function","_inline_clear_mop_slot "],["","{\n    "],["Statement","my"],[""," ("],["Identifier","$self"],["",", "],["Identifier","$instance"],["",") = "],["Identifier","@_"],["",";\n    "],["Identifier","$self"],["","->inline_deinitialize_slot("],["Identifier","$instance"],["",", "],["Identifier","$RESERVED_MOP_SLOT"],["",");\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","# ABSTRACT: Instance Meta Object"],["","\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=pod"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nClass::MOP::Instance - Instance Meta Object\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nversion 2.1005\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nThe Instance Protocol controls the creation of object instances, and\nthe storage of attribute values in those instances.\n\nUsing this API directly in your own code violates encapsulation, and\nwe recommend that you use the appropriate APIs in "],["Identifier","L<Class::MOP::Class>"],["","\nand "],["Identifier","L<Class::MOP::Attribute>"],[""," instead. Those APIs in turn call the\nmethods in this class as appropriate.\n\nThis class also participates in generating inlined code by providing\nsnippets of code to access an object instance.\n\n"],["Statement","=head1"],[""," "],["String","METHODS"],["","\n\n"],["Statement","=head2"],[""," "],["String","Object construction"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< Class::MOP::Instance->new(%options) >>"],["","\n\nThis method creates a new meta-instance object.\n\nIt accepts the following keys in "],["Identifier","C<%options>"],["",":\n\n"],["Statement","=over"],[""," "],["Number","8"],["","\n\n"],["Statement","=item"],[""," "],["String","* associated_metaclass"],["","\n\nThe "],["Identifier","L<Class::MOP::Class>"],[""," object for which instances will be created.\n\n"],["Statement","=item"],[""," "],["String","* attributes"],["","\n\nAn array reference of "],["Identifier","L<Class::MOP::Attribute>"],[""," objects. These are the\nattributes which can be stored in each instance.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head2"],[""," "],["String","Creating and altering instances"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->create_instance >>"],["","\n\nThis method returns a reference blessed into the associated\nmetaclass's class.\n\nThe default is to use a hash reference. Subclasses can override this.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->clone_instance($instance) >>"],["","\n\nGiven an instance, this method creates a new object by making\n"],["Identifier","I<shallow>"],[""," clone of the original.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head2"],[""," "],["String","Introspection"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->associated_metaclass >>"],["","\n\nThis returns the "],["Identifier","L<Class::MOP::Class>"],[""," object associated with the\nmeta-instance object.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->get_all_slots >>"],["","\n\nThis returns a list of slot names stored in object instances. In\nalmost all cases, slot names correspond directly attribute names.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->is_valid_slot($slot_name) >>"],["","\n\nThis will return true if "],["Identifier","C<$slot_name>"],[""," is a valid slot name.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->get_all_attributes >>"],["","\n\nThis returns a list of attributes corresponding to the attributes\npassed to the constructor.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head2"],[""," "],["String","Operations on Instance Structures"],["","\n\nIt's important to understand that the meta-instance object is a\ndifferent entity from the actual instances it creates. For this\nreason, any operations on the "],["Identifier","C<$instance_structure>"],[""," always require\nthat the object instance be passed to the method.\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->get_slot_value($instance_structure, $slot_name) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->set_slot_value($instance_structure, $slot_name, $value) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->initialize_slot($instance_structure, $slot_name) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->deinitialize_slot($instance_structure, $slot_name) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->initialize_all_slots($instance_structure) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->deinitialize_all_slots($instance_structure) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->is_slot_initialized($instance_structure, $slot_name) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->weaken_slot_value($instance_structure, $slot_name) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->slot_value_is_weak($instance_structure, $slot_name) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->strengthen_slot_value($instance_structure, $slot_name) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->rebless_instance_structure($instance_structure, $new_metaclass) >>"],["","\n\nThe exact details of what each method does should be fairly obvious\nfrom the method name.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head2"],[""," "],["String","Inlinable Instance Operations"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->is_inlinable >>"],["","\n\nThis is a boolean that indicates whether or not slot access operations\ncan be inlined. By default it is true, but subclasses can override\nthis.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->inline_create_instance($class_variable) >>"],["","\n\nThis method expects a string that, "],["Identifier","I<when inlined>"],["",", will become a\nclass name. This would literally be something like "],["Identifier","C<'$class'>"],["",", not an\nactual class name.\n\nIt returns a snippet of code that creates a new object for the\nclass. This is something like "],["Identifier","C< bless {}, $class_name >"],["",".\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->inline_get_is_lvalue >>"],["","\n\nReturns whether or not "],["Identifier","C<inline_get_slot_value>"],[""," is a valid lvalue. This can be\nused to do extra optimizations when generating inlined methods.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->inline_slot_access($instance_variable, $slot_name) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->inline_get_slot_value($instance_variable, $slot_name) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->inline_set_slot_value($instance_variable, $slot_name, $value) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->inline_initialize_slot($instance_variable, $slot_name) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->inline_deinitialize_slot($instance_variable, $slot_name) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->inline_is_slot_initialized($instance_variable, $slot_name) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->inline_weaken_slot_value($instance_variable, $slot_name) >>"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->inline_strengthen_slot_value($instance_variable, $slot_name) >>"],["","\n\nThese methods all expect two arguments. The first is the name of a\nvariable, than when inlined, will represent the object\ninstance. Typically this will be a literal string like "],["Identifier","C<'$_[0]'>"],["",".\n\nThe second argument is a slot name.\n\nThe method returns a snippet of code that, when inlined, performs some\noperation on the instance.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metainstance->inline_rebless_instance_structure($instance_variable, $class_variable) >>"],["","\n\nThis takes the name of a variable that will, when inlined, represent the object\ninstance, and the name of a variable that will represent the class to rebless\ninto, and returns code to rebless an instance into a class.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head2"],[""," "],["String","Introspection"],["","\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< Class::MOP::Instance->meta >>"],["","\n\nThis will return a "],["Identifier","L<Class::MOP::Class>"],[""," instance for this class.\n\nIt should also be noted that "],["Identifier","L<Class::MOP>"],[""," will actually bootstrap\nthis module by installing a number of attribute meta-objects into its\nmetaclass.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nMoose is maintained by the Moose Cabal, along with the help of many contributors. See "],["Identifier","L<Moose/CABAL>"],[""," and "],["Identifier","L<Moose/CONTRIBUTORS>"],[""," for details.\n\n"],["Statement","=head1"],[""," "],["String","COPYRIGHT AND LICENSE"],["","\n\nThis software is copyright (c) 2013 by Infinity Interactive, Inc..\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n"],["Statement","=cut"],["","\n"]]