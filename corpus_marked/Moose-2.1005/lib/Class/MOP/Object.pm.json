[["","\n"],["Statement","package"],["Type"," Class::MOP::Object"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","Class::MOP::Object::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","Class::MOP::Object::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n\n"],["Statement","use "],["","Carp "],["String","qw(confess)"],["",";\n"],["Statement","use "],["","Scalar::Util "],["String","'blessed'"],["",";\n\n"],["Comment","# introspection"],["","\n\n"],["Keyword","sub "],["Function","meta "],["","{\n    "],["Statement","require"],[""," Class::MOP::Class;\n    Class::MOP::Class->initialize(blessed("],["Identifier","$_["],["Number","0"],["Identifier","]"],["",") || "],["Identifier","$_["],["Number","0"],["Identifier","]"],["",");\n}\n\n"],["Keyword","sub "],["Function","_new "],["","{\n    Class::MOP::class_of("],["Statement","shift"],["",")->new_object("],["Identifier","@_"],["",");\n}\n\n"],["Comment","# RANT:"],["","\n"],["Comment","# Cmon, how many times have you written"],["","\n"],["Comment","# the following code while debugging:"],["","\n"],["Comment","#"],["","\n"],["Comment","#  use Data::Dumper;"],["","\n"],["Comment","#  warn Dumper $obj;"],["","\n"],["Comment","#"],["","\n"],["Comment","# It can get seriously annoying, so why"],["","\n"],["Comment","# not just do this ..."],["","\n"],["Keyword","sub "],["Function","dump "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","require"],[""," Data::Dumper;\n    "],["Statement","local"],[""," "],["Identifier","$"],["Type","Data::Dumper::"],["Identifier","Maxdepth"],[""," = "],["Statement","shift"],[""," || "],["Number","1"],["",";\n    Data::Dumper::Dumper "],["Identifier","$self"],["",";\n}\n\n"],["Keyword","sub "],["Function","_real_ref_name "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","return"],[""," blessed("],["Identifier","$self"],["",");\n}\n\n"],["Keyword","sub "],["Function","_is_compatible_with "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," ("],["Identifier","$other_name"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","return"],[""," "],["Identifier","$self"],["","->isa("],["Identifier","$other_name"],["",");\n}\n\n"],["Keyword","sub "],["Function","_can_be_made_compatible_with "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","return"],[""," !"],["Identifier","$self"],["","->_is_compatible_with("],["Identifier","@_"],["",")\n        && "],["Operator","defined"],["","("],["Identifier","$self"],["","->_get_compatible_metaclass("],["Identifier","@_"],["","));\n}\n\n"],["Keyword","sub "],["Function","_make_compatible_with "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," ("],["Identifier","$other_name"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","my"],[""," "],["Identifier","$new_metaclass"],[""," = "],["Identifier","$self"],["","->_get_compatible_metaclass("],["Identifier","$other_name"],["",");\n\n    confess "],["String","\"Can't make "],["Identifier","$self"],["String"," compatible with metaclass "],["Identifier","$other_name"],["String","\""],["","\n        "],["Conditional","unless"],[""," "],["Operator","defined"],[""," "],["Identifier","$new_metaclass"],["",";\n\n    "],["Comment","# can't use rebless_instance here, because it might not be an actual"],["","\n    "],["Comment","# subclass in the case of, e.g. moose role reconciliation"],["","\n    "],["Identifier","$new_metaclass"],["","->meta->_force_rebless_instance("],["Identifier","$self"],["",")\n        "],["Conditional","if"],[""," blessed("],["Identifier","$self"],["",") "],["Operator","ne"],[""," "],["Identifier","$new_metaclass"],["",";\n\n    "],["Statement","return"],[""," "],["Identifier","$self"],["",";\n}\n\n"],["Keyword","sub "],["Function","_get_compatible_metaclass "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," ("],["Identifier","$other_name"],["",") = "],["Identifier","@_"],["",";\n\n    "],["Statement","return"],[""," "],["Identifier","$self"],["","->_get_compatible_metaclass_by_subclassing("],["Identifier","$other_name"],["",");\n}\n\n"],["Keyword","sub "],["Function","_get_compatible_metaclass_by_subclassing "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$self"],[""," = "],["Statement","shift"],["",";\n    "],["Statement","my"],[""," ("],["Identifier","$other_name"],["",") = "],["Identifier","@_"],["",";\n    "],["Statement","my"],[""," "],["Identifier","$meta_name"],[""," = blessed("],["Identifier","$self"],["",") ? "],["Identifier","$self"],["","->_real_ref_name : "],["Identifier","$self"],["",";\n\n    "],["Conditional","if"],[""," ("],["Identifier","$meta_name"],["","->isa("],["Identifier","$other_name"],["",")) {\n        "],["Statement","return"],[""," "],["Identifier","$meta_name"],["",";\n    }\n    "],["Conditional","elsif"],[""," ("],["Identifier","$other_name"],["","->isa("],["Identifier","$meta_name"],["",")) {\n        "],["Statement","return"],[""," "],["Identifier","$other_name"],["",";\n    }\n\n    "],["Statement","return"],["",";\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","# ABSTRACT: Base class for metaclasses"],["","\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=pod"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\nClass::MOP::Object - Base class for metaclasses\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nversion 2.1005\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\nThis class is a very minimal base class for metaclasses.\n\n"],["Statement","=head1"],[""," "],["String","METHODS"],["","\n\nThis class provides a few methods which are useful in all metaclasses.\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<< Class::MOP::???->meta >>"],["","\n\nThis returns a "],["Identifier","L<Class::MOP::Class>"],[""," object.\n\n"],["Statement","=item"],[""," "],["Identifier","B<< $metaobject->dump($max_depth) >>"],["","\n\nThis method uses "],["Identifier","L<Data::Dumper>"],[""," to dump the object. You can pass an\noptional maximum depth, which will set "],["Identifier","C<$Data::Dumper::Maxdepth>"],["",". The\ndefault maximum depth is 1.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nMoose is maintained by the Moose Cabal, along with the help of many contributors. See "],["Identifier","L<Moose/CABAL>"],[""," and "],["Identifier","L<Moose/CONTRIBUTORS>"],[""," for details.\n\n"],["Statement","=head1"],[""," "],["String","COPYRIGHT AND LICENSE"],["","\n\nThis software is copyright (c) 2013 by Infinity Interactive, Inc..\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n"],["Statement","=cut"],["","\n"]]