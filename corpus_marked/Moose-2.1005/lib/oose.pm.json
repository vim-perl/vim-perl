[["Statement","package"],["Type"," oose"],["",";\n"],["PreProc","BEGIN "],["","{\n  "],["Identifier","$"],["Type","oose::"],["Identifier","AUTHORITY"],[""," = "],["String","'cpan:STEVAN'"],["",";\n}\n{\n  "],["Identifier","$"],["Type","oose::"],["Identifier","VERSION"],[""," = "],["String","'2.1005'"],["",";\n}\n\n"],["Statement","use strict"],["",";\n"],["Statement","use warnings"],["",";\n\n"],["Statement","use "],["","Class::Load "],["String","qw(load_class)"],["",";\n\n"],["PreProc","BEGIN "],["","{\n    "],["Statement","my"],[""," "],["Identifier","$package"],["",";\n    "],["Keyword","sub "],["Function","import "],["","{\n        "],["Identifier","$package"],[""," = "],["Identifier","$_["],["Number","1"],["Identifier","]"],[""," || "],["String","'Class'"],["",";\n        "],["Conditional","if"],[""," ("],["Identifier","$package"],[""," =~ "],["Statement","/"],["String","^"],["Special","\\+"],["Statement","/"],["",") {\n            "],["Identifier","$package"],[""," =~ "],["Statement","s/"],["String","^"],["Special","\\+"],["Statement","//"],["",";\n            load_class("],["Identifier","$package"],["",");\n        }\n    }\n    "],["Statement","use "],["","Filter::Simple "],["Keyword","sub "],["","{ "],["Statement","s/"],["String","^"],["Statement","/"],["String","package "],["Identifier","$package"],["String",";"],["Special","\\n"],["String","use Moose;use Moose::Util::TypeConstraints;"],["Special","\\n"],["Statement","/"],["","; }\n}\n\n"],["Number","1"],["",";\n\n"],["Comment","# ABSTRACT: syntactic sugar to make Moose one-liners easier"],["","\n\n"],["Comment","__END__"],["","\n\n"],["Statement","=pod"],["","\n\n"],["Statement","=head1"],[""," "],["String","NAME"],["","\n\noose - syntactic sugar to make Moose one-liners easier\n\n"],["Statement","=head1"],[""," "],["String","VERSION"],["","\n\nversion 2.1005\n\n"],["Statement","=head1"],[""," "],["String","SYNOPSIS"],["","\n\n"],["PreProc","  # create a Moose class on the fly ..."],["","\n"],["PreProc","  perl -Moose=Foo -e 'has bar => ( is=>q[ro], default => q[baz] ); print Foo->new->bar' # prints baz"],["","\n\n"],["PreProc","  # loads an existing class (Moose or non-Moose)"],["","\n"],["PreProc","  # and re-\"opens\" the package definition to make"],["","\n"],["PreProc","  # debugging/introspection easier"],["","\n"],["PreProc","  perl -Moose=+My::Class -e 'print join \", \" => __PACKAGE__->meta->get_method_list'"],["","\n\n"],["PreProc","  # also loads Moose::Util::TypeConstraints to allow subtypes etc"],["","\n"],["PreProc","  perl -Moose=Person -e'subtype q[ValidAge] => as q[Int] => where { $_ > 0 && $_ < 78 }; has => age ( isa => q[ValidAge], is => q[ro]); Person->new(age => 90)'"],["","\n\n"],["Statement","=head1"],[""," "],["String","DESCRIPTION"],["","\n\noose.pm is a simple source filter that adds\n"],["Identifier","C<package $name; use Moose; use Moose::Util::TypeConstraints;>"],["","\nto the beginning of your script and was entirely created because typing\n"],["Identifier","C<perl -e'package Foo; use Moose; ...'>"],[""," was annoying me.\n\n"],["Statement","=head1"],[""," "],["String","INTERFACE"],["","\n\noose provides exactly one method and it's automatically called by perl:\n\n"],["Statement","=over"],[""," "],["Number","4"],["","\n\n"],["Statement","=item"],[""," "],["Identifier","B<import($package)>"],["","\n\nPass a package name to import to be used by the source filter. The\npackage defaults to "],["Identifier","C<Class>"],[""," if none is given.\n\n"],["Statement","=back"],["","\n\n"],["Statement","=head1"],[""," "],["String","DEPENDENCIES"],["","\n\nYou will need "],["Identifier","L<Filter::Simple>"],[""," and eventually "],["Identifier","L<Moose>"],["","\n\n"],["Statement","=head1"],[""," "],["String","INCOMPATIBILITIES"],["","\n\nNone reported. But it is a source filter and might have issues there.\n\n"],["Statement","=head1"],[""," "],["String","BUGS"],["","\n\nSee "],["Identifier","L<Moose/BUGS>"],[""," for details on reporting bugs.\n\n"],["Statement","=head1"],[""," "],["String","AUTHOR"],["","\n\nMoose is maintained by the Moose Cabal, along with the help of many contributors. See "],["Identifier","L<Moose/CABAL>"],[""," and "],["Identifier","L<Moose/CONTRIBUTORS>"],[""," for details.\n\n"],["Statement","=head1"],[""," "],["String","COPYRIGHT AND LICENSE"],["","\n\nThis software is copyright (c) 2013 by Infinity Interactive, Inc..\n\nThis is free software; you can redistribute it and/or modify it under\nthe same terms as the Perl 5 programming language system itself.\n\n"],["Statement","=cut"],["","\n"]]